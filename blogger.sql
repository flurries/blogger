/*
 Navicat MySQL Data Transfer

 Source Server         : localhost1
 Source Server Type    : MySQL
 Source Server Version : 50717
 Source Host           : localhost:3306
 Source Schema         : blogger

 Target Server Type    : MySQL
 Target Server Version : 50717
 File Encoding         : 65001

 Date: 05/09/2018 09:46:20
*/

SET NAMES utf8mb4;
SET FOREIGN_KEY_CHECKS = 0;

-- ----------------------------
-- Table structure for article
-- ----------------------------
DROP TABLE IF EXISTS `article`;
CREATE TABLE `article`  (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(30) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `image` varchar(100) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,
  `desc` varchar(100) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,
  `content` longtext CHARACTER SET utf8 COLLATE utf8_general_ci NULL,
  `is_delete` tinyint(1) NOT NULL,
  `add_time` datetime(6) NULL,
  `mod_time` datetime(6) NULL,
  `is_recommend` tinyint(1) NOT NULL,
  `ty_id` int(11) NULL DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE,
  INDEX `article_ty_id_46321800_fk_typess_id`(`ty_id`) USING BTREE,
  CONSTRAINT `article_ty_id_46321800_fk_typess_id` FOREIGN KEY (`ty_id`) REFERENCES `typess` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT
) ENGINE = InnoDB AUTO_INCREMENT = 9 CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of article
-- ----------------------------
INSERT INTO `article` VALUES (1, 'Django高级扩展', '1_ELSKvzi.jpg', 'Django高级扩展 静态文件 css、js、图片、Json文件、字体文件等 配置settings.py、中间件、分页', '<h2 data-source-line=\"1\" id=\"django高级扩展\" style=\"white-space: normal;box-sizing: border-box;margin-top: 24px;margin-bottom: 16px;font-size: 1.75em;line-height: 1.25;padding-bottom: 0.3em;border-bottom: 1px solid rgb(234, 236, 239);color: rgb(36, 41, 46);font-family: -apple-system, BlinkMacSystemFont, 微软雅黑, &#39;PingFang SC&#39;, Helvetica, Arial, &#39;Hiragino Sans GB&#39;, &#39;Microsoft YaHei&#39;, SimSun, 宋体, Heiti, 黑体, sans-serif\">Django高级扩展</h2><h4 data-source-line=\"2\" id=\"静态文件\" style=\"white-space: normal;box-sizing: border-box;margin-top: 24px;margin-bottom: 16px;font-size: 1.25em;line-height: 1.25;color: rgb(36, 41, 46);font-family: -apple-system, BlinkMacSystemFont, 微软雅黑, &#39;PingFang SC&#39;, Helvetica, Arial, &#39;Hiragino Sans GB&#39;, &#39;Microsoft YaHei&#39;, SimSun, 宋体, Heiti, 黑体, sans-serif\"><a href=\"file:///C:/Users/Administrator/AppData/Local/Youdao/YNote/markdown/index.html#%E9%9D%99%E6%80%81%E6%96%87%E4%BB%B6\" style=\"box-sizing: border-box;color: rgb(3, 102, 214)\"></a>静态文件</h4><ul data-source-line=\"3\" class=\" list-paddingleft-2\" style=\"margin-bottom: 16px;width: 957.594px;padding-left: 2em;white-space: normal;box-sizing: border-box;color: rgb(36, 41, 46);font-family: -apple-system, BlinkMacSystemFont, 微软雅黑, &#39;PingFang SC&#39;, Helvetica, Arial, &#39;Hiragino Sans GB&#39;, &#39;Microsoft YaHei&#39;, SimSun, 宋体, Heiti, 黑体, sans-serif;font-size: 14px\"><li><p>css、js、图片、Json文件、字体文件等&nbsp;<a href=\"http://xn--settings-vz2ve12k.py/\" target=\"_blank\" style=\"box-sizing: border-box;color: rgb(3, 102, 214)\">配置settings.py</a></p></li></ul><pre data-source-line=\"6\" style=\"margin-top: 0px;margin-bottom: 16px;padding: 16px;border-radius: 3px;background-color: rgb(246, 248, 250);font-variant-numeric: normal;font-variant-east-asian: normal;box-sizing: border-box;font-family: SFMono-Regular, Consolas, &#39;Liberation Mono&#39;, Menlo, Courier, monospace;font-size: 11.9px;font-stretch: normal;line-height: 1.45;word-wrap: normal;overflow: auto;color: rgb(36, 41, 46)\">STATIC_URL&nbsp;=&nbsp;&#39;/static/&#39;STATICFILES_DIRS&nbsp;=&nbsp;[\r\n&nbsp;&nbsp;&nbsp;&nbsp;os.path.join(BASE_DIR,&#39;static&#39;)\r\n]</pre><pre data-source-line=\"13\" style=\"margin-top: 0px;margin-bottom: 16px;padding: 16px;border-radius: 3px;background-color: rgb(246, 248, 250);font-variant-numeric: normal;font-variant-east-asian: normal;box-sizing: border-box;font-family: SFMono-Regular, Consolas, &#39;Liberation Mono&#39;, Menlo, Courier, monospace;font-size: 11.9px;font-stretch: normal;line-height: 1.45;word-wrap: normal;overflow: auto;color: rgb(36, 41, 46)\">{%&nbsp;load&nbsp;static&nbsp;from&nbsp;staticfiles&nbsp;%}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;首页&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sunck&nbsp;is&nbsp;a&nbsp;good&nbsp;man</pre><h4 data-source-line=\"33\" id=\"中间件\" style=\"white-space: normal;box-sizing: border-box;margin-top: 24px;margin-bottom: 16px;font-size: 1.25em;line-height: 1.25;color: rgb(36, 41, 46);font-family: -apple-system, BlinkMacSystemFont, 微软雅黑, &#39;PingFang SC&#39;, Helvetica, Arial, &#39;Hiragino Sans GB&#39;, &#39;Microsoft YaHei&#39;, SimSun, 宋体, Heiti, 黑体, sans-serif\"><a href=\"file:///C:/Users/Administrator/AppData/Local/Youdao/YNote/markdown/index.html#%E4%B8%AD%E9%97%B4%E4%BB%B6\" style=\"box-sizing: border-box;color: rgb(3, 102, 214)\"></a>中间件</h4><p data-source-line=\"34\" style=\"margin-top: 0px;margin-bottom: 16px;white-space: normal;box-sizing: border-box;color: rgb(36, 41, 46);font-family: -apple-system, BlinkMacSystemFont, 微软雅黑, &#39;PingFang SC&#39;, Helvetica, Arial, &#39;Hiragino Sans GB&#39;, &#39;Microsoft YaHei&#39;, SimSun, 宋体, Heiti, 黑体, sans-serif;font-size: 14px\">-概述 - 一个轻量级、底层的插件，可以介入Django的请求和响应</p><ul data-source-line=\"36\" class=\" list-paddingleft-2\" style=\"margin-bottom: 16px;width: 957.594px;padding-left: 2em;white-space: normal;box-sizing: border-box;color: rgb(36, 41, 46);font-family: -apple-system, BlinkMacSystemFont, 微软雅黑, &#39;PingFang SC&#39;, Helvetica, Arial, &#39;Hiragino Sans GB&#39;, &#39;Microsoft YaHei&#39;, SimSun, 宋体, Heiti, 黑体, sans-serif;font-size: 14px\"><li><p>本质</p></li><ul class=\" list-paddingleft-2\" style=\"list-style-type: square;\"><li><p>一个Python类</p></li></ul><li><p>方法</p></li><ul class=\" list-paddingleft-2\" style=\"list-style-type: square;\"><li><p>当视图跑出异常时调用，返回HttpResponse对象 执行位置</p></li><li><p>所有响应返回浏览器之前调用，每个请求都会调用，返回HttpResponse对象</p></li><li><p>在视图刚好执行完后调用，每个请求都会调用，返回None或者HttpResponse对象 使用render</p></li><li><p>调用视图之前执行，每个请求都会调用，返回None或者HttpResponse对象</p></li><li><p>在执行视图之前被调用（分配url匹配视图之前），每个请求上都会调用，返回None或者HttpResponse对象</p></li><li><p>不需要传参数，服务器响应第一个请求的时候自动调用，用于确定是否启用该中间件</p></li><li><p><span style=\"box-sizing: border-box;font-weight: 600\">init</span></p></li><li><p>process_request(self,request)</p></li><li><p>process_view(self,request,view_func,view_args,view_kwargs)</p></li><li><p>process_template_response(self,request,response)</p></li><li><p>process_response(self,request,response)</p></li><li><p>process_exception(self,request,exception)</p></li></ul></ul><h3 data-source-line=\"54\" id=\"自定义中间件\" style=\"white-space: normal;box-sizing: border-box;margin-top: 24px;margin-bottom: 16px;font-size: 1.5em;line-height: 1.25;color: rgb(36, 41, 46);font-family: -apple-system, BlinkMacSystemFont, 微软雅黑, &#39;PingFang SC&#39;, Helvetica, Arial, &#39;Hiragino Sans GB&#39;, &#39;Microsoft YaHei&#39;, SimSun, 宋体, Heiti, 黑体, sans-serif\"><a href=\"file:///C:/Users/Administrator/AppData/Local/Youdao/YNote/markdown/index.html#%E8%87%AA%E5%AE%9A%E4%B9%89%E4%B8%AD%E9%97%B4%E4%BB%B6\" style=\"box-sizing: border-box;color: rgb(3, 102, 214)\"></a>自定义中间件</h3><pre data-source-line=\"55\" style=\"margin-top: 0px;margin-bottom: 16px;padding: 16px;border-radius: 3px;background-color: rgb(246, 248, 250);font-variant-numeric: normal;font-variant-east-asian: normal;box-sizing: border-box;font-family: SFMono-Regular, Consolas, &#39;Liberation Mono&#39;, Menlo, Courier, monospace;font-size: 11.9px;font-stretch: normal;line-height: 1.45;word-wrap: normal;overflow: auto;color: rgb(36, 41, 46)\">-&nbsp;工程目录下middleware目录下创建myApp目录&nbsp;创建一个python文件</pre><ul data-source-line=\"57\" class=\" list-paddingleft-2\" style=\"margin-bottom: 16px;width: 957.594px;padding-left: 2em;white-space: normal;box-sizing: border-box;color: rgb(36, 41, 46);font-family: -apple-system, BlinkMacSystemFont, 微软雅黑, &#39;PingFang SC&#39;, Helvetica, Arial, &#39;Hiragino Sans GB&#39;, &#39;Microsoft YaHei&#39;, SimSun, 宋体, Heiti, 黑体, sans-serif;font-size: 14px\"><li><p><a href=\"http://userauthmiddleware.py/\" target=\"_blank\" style=\"box-sizing: border-box;color: rgb(3, 102, 214)\">UserAuthMiddleware.py</a></p></li></ul><pre data-source-line=\"58\" style=\"margin-top: 0px;margin-bottom: 16px;padding: 16px;border-radius: 3px;background-color: rgb(246, 248, 250);font-variant-numeric: normal;font-variant-east-asian: normal;box-sizing: border-box;font-family: SFMono-Regular, Consolas, &#39;Liberation Mono&#39;, Menlo, Courier, monospace;font-size: 11.9px;font-stretch: normal;line-height: 1.45;word-wrap: normal;overflow: auto;color: rgb(36, 41, 46)\">from&nbsp;django.http&nbsp;import&nbsp;HttpResponseRedirect\r\nfrom&nbsp;django.urls&nbsp;import&nbsp;reverse\r\nfrom&nbsp;django.utils.deprecation&nbsp;import&nbsp;MiddlewareMixin\r\nfrom&nbsp;backweb.models&nbsp;import&nbsp;User\r\n&nbsp;&nbsp;&nbsp;&nbsp;#重写process_request方法\r\n&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;process_request(self,request):\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#获得页面\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;path&nbsp;=&nbsp;request.path&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#放过登录页面\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;path&nbsp;==&nbsp;&#39;/backweb/my_login/&#39;:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;None\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#获得页面cookie中的session_id\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#（页面cookie中的session_id是登录时产生的随机数，将其付给cookie同时在数据库中存储该值。\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#用户访问页面时间就拿cookie中的session_id&nbsp;与数据库做对比，有就说明用户是登录状态，用户退出时将数据库清空）\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;session_id&nbsp;=&nbsp;request.COOKIES.get(&#39;session_id&#39;)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#cookie中没有session说明没有登录\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;not&nbsp;session_id:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;HttpResponseRedirect(reverse(&#39;backweb:my_login&#39;))&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#获的cookie中有session_id同时获取其数据库模型对象，没有对象说明这个人不是网站的注册用户重新返回登录页面\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;user&nbsp;=&nbsp;User.objects.filter(session_id=session_id)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;not&nbsp;user:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;HttpResponseRedirect(reverse(&#39;backweb:my_login&#39;))&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;None</pre><ul data-source-line=\"91\" class=\" list-paddingleft-2\" style=\"margin-bottom: 16px;width: 957.594px;padding-left: 2em;white-space: normal;box-sizing: border-box;color: rgb(36, 41, 46);font-family: -apple-system, BlinkMacSystemFont, 微软雅黑, &#39;PingFang SC&#39;, Helvetica, Arial, &#39;Hiragino Sans GB&#39;, &#39;Microsoft YaHei&#39;, SimSun, 宋体, Heiti, 黑体, sans-serif;font-size: 14px\"><li><p>使用自定义中间件</p></li><ul class=\" list-paddingleft-2\" style=\"list-style-type: square;\"><li><p>配置settings.py文件</p></li></ul></ul><pre data-source-line=\"93\" style=\"margin-top: 0px;margin-bottom: 16px;padding: 16px;border-radius: 3px;background-color: rgb(246, 248, 250);font-variant-numeric: normal;font-variant-east-asian: normal;box-sizing: border-box;font-family: SFMono-Regular, Consolas, &#39;Liberation Mono&#39;, Menlo, Courier, monospace;font-size: 11.9px;font-stretch: normal;line-height: 1.45;word-wrap: normal;overflow: auto;color: rgb(36, 41, 46)\">MIDDLEWARE&nbsp;=&nbsp;[&nbsp;&nbsp;&nbsp;&nbsp;&#39;django.middleware.security.SecurityMiddleware&#39;,&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;django.contrib.sessions.middleware.SessionMiddleware&#39;,&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;django.middleware.common.CommonMiddleware&#39;,&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;django.middleware.csrf.CsrfViewMiddleware&#39;,&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;django.contrib.auth.middleware.AuthenticationMiddleware&#39;,&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;django.contrib.messages.middleware.MessageMiddleware&#39;,&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;django.middleware.clickjacking.XFrameOptionsMiddleware&#39;,&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#添加自定义中间件\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;utils.UserAuthMiddleware.AuthMiddleWare&#39;,\r\n]</pre><p data-source-line=\"106\" style=\"margin-top: 0px;margin-bottom: 16px;white-space: normal;box-sizing: border-box;color: rgb(36, 41, 46);font-family: -apple-system, BlinkMacSystemFont, 微软雅黑, &#39;PingFang SC&#39;, Helvetica, Arial, &#39;Hiragino Sans GB&#39;, &#39;Microsoft YaHei&#39;, SimSun, 宋体, Heiti, 黑体, sans-serif;font-size: 14px\">app/views.py</p><pre data-source-line=\"108\" style=\"margin-top: 0px;margin-bottom: 16px;padding: 16px;border-radius: 3px;background-color: rgb(246, 248, 250);font-variant-numeric: normal;font-variant-east-asian: normal;box-sizing: border-box;font-family: SFMono-Regular, Consolas, &#39;Liberation Mono&#39;, Menlo, Courier, monospace;font-size: 11.9px;font-stretch: normal;line-height: 1.45;word-wrap: normal;overflow: auto;color: rgb(36, 41, 46)\">def&nbsp;my_login(request,&nbsp;rando=None):&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;request.method&nbsp;==&nbsp;&#39;GET&#39;:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;render(request,&nbsp;&#39;backweb/login.html&#39;)&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;request.method&nbsp;==&nbsp;&#39;POST&#39;:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;username&nbsp;=&nbsp;request.POST.get(&#39;username&#39;)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;password&nbsp;=&nbsp;request.POST.get(&#39;password&#39;)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#验证用户信息\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;user&nbsp;=&nbsp;User.objects.filter(username=username,password=password).first()&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;user:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#确定跳转重定向\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;res&nbsp;=&nbsp;HttpResponseRedirect(reverse(&#39;backweb:index&#39;))&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#写随机数字符串生成cookie\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s&nbsp;=&nbsp;&#39;qazwsxedcrfvtgbyhnujmikolpQZWXEDCRFVTGBYHNUJMIKOLP1234567890&#39;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#给cookie定名字\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;session_id&nbsp;=&nbsp;&#39;&#39;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#循环写cookie\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;i&nbsp;in&nbsp;range(20):\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;session_id&nbsp;+=&nbsp;random.choice(s)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#创建cookie过期时限默认（一天）\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;out_time&nbsp;=&nbsp;datetime.now()&nbsp;+&nbsp;timedelta(days=1)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#为用户（服务器客户端添加）添加cookie,用来判断用户是否登录。没有登录的用户没有cookie值无法直接进网站\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;res.set_cookie(&#39;session_id&#39;,session_id,&nbsp;expires=out_time)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#为服务器添加进数据库\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;user.session_id&nbsp;=&nbsp;session_id\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;user.out_time&nbsp;=&nbsp;out_time\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;user.save()&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#执行跳转\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;res&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#找不到对应数据库数据用户提供信息错误\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;error&nbsp;=&nbsp;&#39;用户名或密码错误&#39;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;render(request,&nbsp;&#39;backweb/login.html&#39;)</pre><p data-source-line=\"144\" style=\"margin-top: 0px;margin-bottom: 16px;white-space: normal;box-sizing: border-box;color: rgb(36, 41, 46);font-family: -apple-system, BlinkMacSystemFont, 微软雅黑, &#39;PingFang SC&#39;, Helvetica, Arial, &#39;Hiragino Sans GB&#39;, &#39;Microsoft YaHei&#39;, SimSun, 宋体, Heiti, 黑体, sans-serif;font-size: 14px\">login.html</p><pre data-source-line=\"145\" style=\"margin-top: 0px;margin-bottom: 16px;padding: 16px;border-radius: 3px;background-color: rgb(246, 248, 250);font-variant-numeric: normal;font-variant-east-asian: normal;box-sizing: border-box;font-family: SFMono-Regular, Consolas, &#39;Liberation Mono&#39;, Menlo, Courier, monospace;font-size: 11.9px;font-stretch: normal;line-height: 1.45;word-wrap: normal;overflow: auto;color: rgb(36, 41, 46)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;站点后台管理登录&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Management&nbsp;System&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{%&nbsp;csrf_token&nbsp;%}</pre><h3 data-source-line=\"173\" id=\"上传图片\" style=\"white-space: normal;box-sizing: border-box;margin-top: 24px;margin-bottom: 16px;font-size: 1.5em;line-height: 1.25;color: rgb(36, 41, 46);font-family: -apple-system, BlinkMacSystemFont, 微软雅黑, &#39;PingFang SC&#39;, Helvetica, Arial, &#39;Hiragino Sans GB&#39;, &#39;Microsoft YaHei&#39;, SimSun, 宋体, Heiti, 黑体, sans-serif\"><a href=\"file:///C:/Users/Administrator/AppData/Local/Youdao/YNote/markdown/index.html#%E4%B8%8A%E4%BC%A0%E5%9B%BE%E7%89%87\" style=\"box-sizing: border-box;color: rgb(3, 102, 214)\"></a>上传图片</h3><ul data-source-line=\"174\" class=\" list-paddingleft-2\" style=\"margin-bottom: 16px;width: 957.594px;padding-left: 2em;white-space: normal;box-sizing: border-box;color: rgb(36, 41, 46);font-family: -apple-system, BlinkMacSystemFont, 微软雅黑, &#39;PingFang SC&#39;, Helvetica, Arial, &#39;Hiragino Sans GB&#39;, &#39;Microsoft YaHei&#39;, SimSun, 宋体, Heiti, 黑体, sans-serif;font-size: 14px\"><li><p>概述</p></li><ul class=\" list-paddingleft-2\" style=\"list-style-type: square;\"><li><p>文件上传时，文件数据存储在request.FILES属性中</p></li><li><p>注意：form表单要上传文件需要加enctype=&quot;multipart/form-data&quot;</p></li><li><p>注意：上传文件必须是post请求</p></li><li><p>需要安装pip install pillwo</p></li></ul></ul><p data-source-line=\"181\" style=\"margin-top: 0px;margin-bottom: 16px;white-space: normal;box-sizing: border-box;color: rgb(36, 41, 46);font-family: -apple-system, BlinkMacSystemFont, 微软雅黑, &#39;PingFang SC&#39;, Helvetica, Arial, &#39;Hiragino Sans GB&#39;, &#39;Microsoft YaHei&#39;, SimSun, 宋体, Heiti, 黑体, sans-serif;font-size: 14px\">网页</p><pre data-source-line=\"182\" style=\"margin-top: 0px;margin-bottom: 16px;padding: 16px;border-radius: 3px;background-color: rgb(246, 248, 250);font-variant-numeric: normal;font-variant-east-asian: normal;box-sizing: border-box;font-family: SFMono-Regular, Consolas, &#39;Liberation Mono&#39;, Menlo, Courier, monospace;font-size: 11.9px;font-stretch: normal;line-height: 1.45;word-wrap: normal;overflow: auto;color: rgb(36, 41, 46)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{%csrf_token%}</pre><p data-source-line=\"191\" style=\"margin-top: 0px;margin-bottom: 16px;white-space: normal;box-sizing: border-box;color: rgb(36, 41, 46);font-family: -apple-system, BlinkMacSystemFont, 微软雅黑, &#39;PingFang SC&#39;, Helvetica, Arial, &#39;Hiragino Sans GB&#39;, &#39;Microsoft YaHei&#39;, SimSun, 宋体, Heiti, 黑体, sans-serif;font-size: 14px\">项目/setting.py</p><pre data-source-line=\"192\" style=\"margin-top: 0px;margin-bottom: 16px;padding: 16px;border-radius: 3px;background-color: rgb(246, 248, 250);font-variant-numeric: normal;font-variant-east-asian: normal;box-sizing: border-box;font-family: SFMono-Regular, Consolas, &#39;Liberation Mono&#39;, Menlo, Courier, monospace;font-size: 11.9px;font-stretch: normal;line-height: 1.45;word-wrap: normal;overflow: auto;color: rgb(36, 41, 46)\">MEDIA_URL&nbsp;=&nbsp;&#39;/media/&#39;MEDIA_ROOT&nbsp;=&nbsp;os.path.join(BASE_DIR,&nbsp;&#39;media&#39;)</pre><p data-source-line=\"196\" style=\"margin-top: 0px;margin-bottom: 16px;white-space: normal;box-sizing: border-box;color: rgb(36, 41, 46);font-family: -apple-system, BlinkMacSystemFont, 微软雅黑, &#39;PingFang SC&#39;, Helvetica, Arial, &#39;Hiragino Sans GB&#39;, &#39;Microsoft YaHei&#39;, SimSun, 宋体, Heiti, 黑体, sans-serif;font-size: 14px\">app/models.py</p><pre data-source-line=\"197\" style=\"margin-top: 0px;margin-bottom: 16px;padding: 16px;border-radius: 3px;background-color: rgb(246, 248, 250);font-variant-numeric: normal;font-variant-east-asian: normal;box-sizing: border-box;font-family: SFMono-Regular, Consolas, &#39;Liberation Mono&#39;, Menlo, Courier, monospace;font-size: 11.9px;font-stretch: normal;line-height: 1.45;word-wrap: normal;overflow: auto;color: rgb(36, 41, 46)\">class&nbsp;Article(models.Model):\r\n&nbsp;&nbsp;&nbsp;&nbsp;image&nbsp;=&nbsp;models.ImageField(upload_to=&#39;&#39;,null=True)</pre><p data-source-line=\"201\" style=\"margin-top: 0px;margin-bottom: 16px;white-space: normal;box-sizing: border-box;color: rgb(36, 41, 46);font-family: -apple-system, BlinkMacSystemFont, 微软雅黑, &#39;PingFang SC&#39;, Helvetica, Arial, &#39;Hiragino Sans GB&#39;, &#39;Microsoft YaHei&#39;, SimSun, 宋体, Heiti, 黑体, sans-serif;font-size: 14px\">项目/urls.py</p><pre data-source-line=\"202\" style=\"margin-top: 0px;margin-bottom: 16px;padding: 16px;border-radius: 3px;background-color: rgb(246, 248, 250);font-variant-numeric: normal;font-variant-east-asian: normal;box-sizing: border-box;font-family: SFMono-Regular, Consolas, &#39;Liberation Mono&#39;, Menlo, Courier, monospace;font-size: 11.9px;font-stretch: normal;line-height: 1.45;word-wrap: normal;overflow: auto;color: rgb(36, 41, 46)\">from&nbsp;django.contrib.staticfiles.urls&nbsp;import&nbsp;staticfrom&nbsp;blogger&nbsp;import&nbsp;settings\r\nurlpatterns&nbsp;=&nbsp;[\r\n&nbsp;&nbsp;&nbsp;&nbsp;url(r&#39;^admin/&#39;,&nbsp;admin.site.urls),\r\n]#&nbsp;添加media为静态文件像static一样可以{%&nbsp;load&nbsp;xxx&nbsp;%}调用urlpatterns&nbsp;+=&nbsp;static(settings.MEDIA_URL,&nbsp;document_root=settings.MEDIA_ROOT)</pre><p data-source-line=\"211\" style=\"margin-top: 0px;margin-bottom: 16px;white-space: normal;box-sizing: border-box;color: rgb(36, 41, 46);font-family: -apple-system, BlinkMacSystemFont, 微软雅黑, &#39;PingFang SC&#39;, Helvetica, Arial, &#39;Hiragino Sans GB&#39;, &#39;Microsoft YaHei&#39;, SimSun, 宋体, Heiti, 黑体, sans-serif;font-size: 14px\">app/views.py</p><pre data-source-line=\"212\" style=\"margin-top: 0px;margin-bottom: 16px;padding: 16px;border-radius: 3px;background-color: rgb(246, 248, 250);font-variant-numeric: normal;font-variant-east-asian: normal;box-sizing: border-box;font-family: SFMono-Regular, Consolas, &#39;Liberation Mono&#39;, Menlo, Courier, monospace;font-size: 11.9px;font-stretch: normal;line-height: 1.45;word-wrap: normal;overflow: auto;color: rgb(36, 41, 46)\">def&nbsp;add(request):&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;request.method&nbsp;==&nbsp;&#39;GET&#39;:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;render(request,&nbsp;&#39;backweb/add.html&#39;)&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;request.method&nbsp;==&nbsp;&#39;POST&#39;:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;filename&nbsp;=&nbsp;request.FILES[&#39;filename&#39;]\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Article.objects.create(&nbsp;image=filename,&nbsp;)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;HttpResponseRedirect(reverse(&#39;backweb:index&#39;))</pre><p data-source-line=\"222\" style=\"margin-top: 0px;margin-bottom: 16px;white-space: normal;box-sizing: border-box;color: rgb(36, 41, 46);font-family: -apple-system, BlinkMacSystemFont, 微软雅黑, &#39;PingFang SC&#39;, Helvetica, Arial, &#39;Hiragino Sans GB&#39;, &#39;Microsoft YaHei&#39;, SimSun, 宋体, Heiti, 黑体, sans-serif;font-size: 14px\">展示.html</p><pre data-source-line=\"224\" style=\"margin-top: 0px;margin-bottom: 16px;padding: 16px;border-radius: 3px;background-color: rgb(246, 248, 250);font-variant-numeric: normal;font-variant-east-asian: normal;box-sizing: border-box;font-family: SFMono-Regular, Consolas, &#39;Liberation Mono&#39;, Menlo, Courier, monospace;font-size: 11.9px;font-stretch: normal;line-height: 1.45;word-wrap: normal;overflow: auto;color: rgb(36, 41, 46)\">&nbsp;&nbsp;{#&nbsp;图片&nbsp;#}</pre><h3 data-source-line=\"231\" id=\"分页\" style=\"white-space: normal;box-sizing: border-box;margin-top: 24px;margin-bottom: 16px;font-size: 1.5em;line-height: 1.25;color: rgb(36, 41, 46);font-family: -apple-system, BlinkMacSystemFont, 微软雅黑, &#39;PingFang SC&#39;, Helvetica, Arial, &#39;Hiragino Sans GB&#39;, &#39;Microsoft YaHei&#39;, SimSun, 宋体, Heiti, 黑体, sans-serif\"><a href=\"file:///C:/Users/Administrator/AppData/Local/Youdao/YNote/markdown/index.html#%E5%88%86%E9%A1%B5\" style=\"box-sizing: border-box;color: rgb(3, 102, 214)\"></a>分页</h3><ul data-source-line=\"232\" class=\" list-paddingleft-2\" style=\"margin-bottom: 16px;width: 957.594px;padding-left: 2em;white-space: normal;box-sizing: border-box;color: rgb(36, 41, 46);font-family: -apple-system, BlinkMacSystemFont, 微软雅黑, &#39;PingFang SC&#39;, Helvetica, Arial, &#39;Hiragino Sans GB&#39;, &#39;Microsoft YaHei&#39;, SimSun, 宋体, Heiti, 黑体, sans-serif;font-size: 14px\"><li><p style=\"margin-top: 16px;margin-bottom: 16px;box-sizing: border-box\">Paginator对象</p></li><ul class=\" list-paddingleft-2\" style=\"list-style-type: square;\"><li><p>创建对象Paginator对象的page()方法返回得到Page对象不需要手动创建</p></li><li><p>属性</p></li><li><p>方法</p></li><li><p>object_list当前页上所有的数据(对象)列表</p></li><li><p>number当前页的页码值</p></li><li><p>paginator当前page对象关联的paginator对象</p></li><li><p>has_next()判断是否有下一页，如果有返回True</p></li><li><p>has_previous()判断是否有上一页，如果有返回True</p></li><li><p>has_other_pages()判断是否有上一页或下一页，如果有返回True</p></li><li><p>next_page_number()返回下一页的页码，如果下一页不存在抛出InvalidPage异常</p></li><li><p>previous_page_number()返回上一页的页码，如果上一页不存在抛出InvalidPage异常</p></li><li><p>len()返回当前页的数据(对象)个数 Paginator对象与Page对象的关系</p></li><li><p>格式Paginator(列表, 整数)</p></li><li><p>返回值返回的分页对象</p></li><li><p>属性</p></li><li><p>count对象总数</p></li><li><p>num_pages页面总数 -page_range页码列表[1,2,3,4,5]页码从1开始</p></li><li><p style=\"margin-top: 16px;margin-bottom: 16px;box-sizing: border-box\">创建对象</p></li><li><p style=\"margin-top: 16px;margin-bottom: 16px;box-sizing: border-box\">方法 -page(num)获得一个Page对象，如果提供的页码不存在会抛出&quot;InvalidPage&quot;异常</p><p style=\"margin-top: 16px;margin-bottom: 16px;box-sizing: border-box\">-InvalidPage当向page()传递的是一个无效的页码时抛出 -PageNotAnInteger当向page()传递的不是一个整数时抛出 -EmptyPage当向page()传递一个有效值，但是该页面时没有数据时抛出</p></li><li><p style=\"margin-top: 16px;margin-bottom: 16px;box-sizing: border-box\">Page对象</p></li></ul><li><p style=\"margin-top: 16px;margin-bottom: 16px;box-sizing: border-box\"><a href=\"http://views.py/\" target=\"_blank\" style=\"box-sizing: border-box;color: rgb(3, 102, 214)\">views.py</a></p></li></ul><pre data-source-line=\"262\" style=\"margin-top: 0px;margin-bottom: 16px;padding: 16px;border-radius: 3px;background-color: rgb(246, 248, 250);font-variant-numeric: normal;font-variant-east-asian: normal;box-sizing: border-box;font-family: SFMono-Regular, Consolas, &#39;Liberation Mono&#39;, Menlo, Courier, monospace;font-size: 11.9px;font-stretch: normal;line-height: 1.45;word-wrap: normal;overflow: auto;color: rgb(36, 41, 46)\">def&nbsp;pagetitle(request,&nbsp;pageid):&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;request.method&nbsp;==&nbsp;&#39;GET&#39;:&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;#拿到所有数据\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sets&nbsp;=&nbsp;Article.objects.all()&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#确定每个页面展示2条数据\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;paginator&nbsp;=&nbsp;Paginator(sets,1)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#拿到对应页面的id\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;page&nbsp;=&nbsp;paginator.page(pageid)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;render(request,&nbsp;&#39;backweb/pagetitle.html&#39;,&nbsp;{&#39;sets&#39;:page})</pre><p data-source-line=\"274\" style=\"margin-top: 0px;margin-bottom: 16px;white-space: normal;box-sizing: border-box;color: rgb(36, 41, 46);font-family: -apple-system, BlinkMacSystemFont, 微软雅黑, &#39;PingFang SC&#39;, Helvetica, Arial, &#39;Hiragino Sans GB&#39;, &#39;Microsoft YaHei&#39;, SimSun, 宋体, Heiti, 黑体, sans-serif;font-size: 14px\">pagetitle.html</p><pre data-source-line=\"275\" style=\"margin-top: 0px;margin-bottom: 16px;padding: 16px;border-radius: 3px;background-color: rgb(246, 248, 250);font-variant-numeric: normal;font-variant-east-asian: normal;box-sizing: border-box;font-family: SFMono-Regular, Consolas, &#39;Liberation Mono&#39;, Menlo, Courier, monospace;font-size: 11.9px;font-stretch: normal;line-height: 1.45;word-wrap: normal;overflow: auto;color: rgb(36, 41, 46)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{#&nbsp;分页&nbsp;#}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;第一页&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{%&nbsp;if&nbsp;sets.has_previous&nbsp;%}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;上一页&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{%&nbsp;endif&nbsp;%}\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{#&nbsp;上一页码页码&nbsp;#}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{%&nbsp;if&nbsp;sets.has_previous&nbsp;%}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{{&nbsp;sets.previous_page_number&nbsp;}}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{%&nbsp;endif&nbsp;%}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{#&nbsp;本页页码(处以本页面那么，该页面的页码就不能点击)&nbsp;#}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{{&nbsp;sets.number&nbsp;}}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{#&nbsp;下一页页码&nbsp;#}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{%&nbsp;if&nbsp;sets.has_next&nbsp;%}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{{&nbsp;sets.next_page_number&nbsp;}}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{%&nbsp;endif&nbsp;%}\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{#&nbsp;下一页&nbsp;#}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{%&nbsp;if&nbsp;sets.has_next&nbsp;%}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;下一页&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{%&nbsp;endif&nbsp;%}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{#&nbsp;最后一页&nbsp;#}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;最后一页</pre><p><br/></p>', 0, '2018-08-15 13:47:55.806264', '2018-08-18 11:28:55.283373', 1, 3);
INSERT INTO `article` VALUES (2, 'Django模板', '5_2lAAjwU.jpg', '概述 模板由两部分组成 HTML代码 逻辑控制代码 作用 快速生成HTML页面 优点 模板的设计实现了业务逻辑与现实内容的分离 视图可以使用任何模板 模板处理加载渲染', '<h2 data-source-line=\"1\" id=\"模板\" style=\"box-sizing: border-box; margin-top: 24px; margin-bottom: 16px; font-size: 1.75em; line-height: 1.25; padding-bottom: 0.3em; border-bottom: 1px solid rgb(234, 236, 239); color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, 微软雅黑, &quot;PingFang SC&quot;, Helvetica, Arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, SimSun, 宋体, Heiti, 黑体, sans-serif; white-space: normal;\">模板</h2><ul data-source-line=\"2\" style=\"box-sizing: border-box; padding-left: 2em; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, 微软雅黑, &quot;PingFang SC&quot;, Helvetica, Arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\" class=\" list-paddingleft-2\"><li><p>概述</p></li><ul style=\"list-style-type: square;\" class=\" list-paddingleft-2\"><li><p>模板的设计实现了业务逻辑与现实内容的分离</p></li><li><p>视图可以使用任何模板</p></li><li><p>模板处理加载渲染</p></li><li><p>快速生成HTML页面</p></li><li><p>HTML代码</p></li><li><p>逻辑控制代码</p></li><li><p>模板由两部分组成</p></li><li><p>作用</p></li><li><p>优点</p></li></ul></ul><h3 data-source-line=\"12\" id=\"定义模板\" style=\"box-sizing: border-box; margin-top: 24px; margin-bottom: 16px; font-size: 1.5em; line-height: 1.25; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, 微软雅黑, &quot;PingFang SC&quot;, Helvetica, Arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, SimSun, 宋体, Heiti, 黑体, sans-serif; white-space: normal;\"><a class=\"markdownIt-Anchor\" href=\"file:///C:/Users/Administrator/AppData/Local/Youdao/YNote/markdown/index.html#%E5%AE%9A%E4%B9%89%E6%A8%A1%E6%9D%BF\" style=\"box-sizing: border-box; color: rgb(3, 102, 214); text-decoration-line: none;\"></a>定义模板</h3><ul data-source-line=\"13\" style=\"box-sizing: border-box; padding-left: 2em; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, 微软雅黑, &quot;PingFang SC&quot;, Helvetica, Arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\" class=\" list-paddingleft-2\"><li><p>变量</p></li><ul style=\"list-style-type: square;\" class=\" list-paddingleft-2\"><li><p>视图传递给模板的数据</p></li><li><p>要遵守标识符规则</p></li></ul><li><p>语法</p></li><ul style=\"list-style-type: square;\" class=\" list-paddingleft-2\"><li><p>{{ var }}</p></li></ul><li><p>注意</p></li><ul style=\"list-style-type: square;\" class=\" list-paddingleft-2\"><li><p>如果使用的变量不存在，则插入的是空字符串</p></li><li><p>在模板中使用点语法</p></li><li><p>字典查询</p></li><li><p>属性或者方法</p></li><li><p>数字索引</p></li><li><p>在模板中调用对象的方法不能传递参数</p></li></ul><li><p>标签</p></li><ul style=\"list-style-type: square;\" class=\" list-paddingleft-2\"><li><p>作用是在输出中创建文本控制逻辑和循环</p></li><li><p>语法	{% tag %}</p></li></ul></ul><pre data-source-line=\"29\" style=\"box-sizing: border-box; font-family: SFMono-Regular, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; font-size: 11.9px; margin-top: 0px; margin-bottom: 16px; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; line-height: 1.45; word-wrap: normal; padding: 16px; overflow: auto; background-color: rgb(246, 248, 250); border-radius: 3px; color: rgb(36, 41, 46);\">{%&nbsp;if&nbsp;表达式&nbsp;%}\r\n语句{%&nbsp;endif&nbsp;%}\r\n{%&nbsp;if&nbsp;表达式1&nbsp;%}\r\n语句1\r\n{%&nbsp;else%}\r\n语句2\r\n{%&nbsp;endif&nbsp;%}\r\n{%&nbsp;if&nbsp;表达式1&nbsp;%}\r\n语句1\r\n{%&nbsp;elif&nbsp;表达式2&nbsp;%}\r\n语句2……\r\n{%&nbsp;elif&nbsp;表达式n&nbsp;%}\r\n语句n\r\n{%&nbsp;else&nbsp;%}\r\n语句e\r\n{%&nbsp;endif&nbsp;%}\r\n示例\r\n{%&nbsp;if&nbsp;num&nbsp;%}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;h1&gt;n&lt;/h1&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;{%&nbsp;endif&nbsp;%}	</pre><pre data-source-line=\"56\" style=\"box-sizing: border-box; font-family: SFMono-Regular, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; font-size: 11.9px; margin-top: 0px; margin-bottom: 16px; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; line-height: 1.45; word-wrap: normal; padding: 16px; overflow: auto; background-color: rgb(246, 248, 250); border-radius: 3px; color: rgb(36, 41, 46);\">for格式\r\n{%&nbsp;for&nbsp;&nbsp;变量&nbsp;&nbsp;in&nbsp;&nbsp;列表&nbsp;%}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;语句\r\n&nbsp;&nbsp;&nbsp;&nbsp;{%&nbsp;endfor&nbsp;%}\r\n&nbsp;&nbsp;&nbsp;&nbsp;{%&nbsp;for&nbsp;&nbsp;变量&nbsp;&nbsp;in&nbsp;&nbsp;列表&nbsp;%}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;语句1\r\n&nbsp;&nbsp;&nbsp;&nbsp;{%&nbsp;empty&nbsp;%}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;语句2\r\n{%&nbsp;endfor&nbsp;%}注意列表为空或者列表不存在时执行语句2</pre><pre data-source-line=\"73\" style=\"box-sizing: border-box; font-family: SFMono-Regular, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; font-size: 11.9px; margin-top: 0px; margin-bottom: 16px; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; line-height: 1.45; word-wrap: normal; padding: 16px; overflow: auto; background-color: rgb(246, 248, 250); border-radius: 3px; color: rgb(36, 41, 46);\">{{&nbsp;forloop.counter&nbsp;}}\r\n表示当前是第几次循环示例\r\n&lt;ul&gt;\r\n{%&nbsp;for&nbsp;stu&nbsp;in&nbsp;studentss&nbsp;%}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;li&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{{forloop.counter}}--{{stu.sname}}--{{stu.sgrade}}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;/li&gt;{%&nbsp;empty&nbsp;%}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;li&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;目前没有学生\r\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;/li&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;{%&nbsp;endfor&nbsp;%}\r\n&lt;/ul&gt;</pre><pre data-source-line=\"88\" style=\"box-sizing: border-box; font-family: SFMono-Regular, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; font-size: 11.9px; margin-top: 0px; margin-bottom: 16px; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; line-height: 1.45; word-wrap: normal; padding: 16px; overflow: auto; background-color: rgb(246, 248, 250); border-radius: 3px; color: rgb(36, 41, 46);\">注释\r\n{#&nbsp;注释&nbsp;#}\r\n注释多行\r\n{%&nbsp;comment&nbsp;%}\r\n注释\r\n注释\r\n{%&nbsp;endcomment&nbsp;%}</pre><pre data-source-line=\"100\" style=\"box-sizing: border-box; font-family: SFMono-Regular, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; font-size: 11.9px; margin-top: 0px; margin-bottom: 16px; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; line-height: 1.45; word-wrap: normal; padding: 16px; overflow: auto; background-color: rgb(246, 248, 250); border-radius: 3px; color: rgb(36, 41, 46);\">url作用反向解析格式\r\n{%&nbsp;url&nbsp;&#39;namespace:name&#39;&nbsp;&nbsp;p1&nbsp;&nbsp;p2&nbsp;%}\r\n反向解析\r\n	url(r&#39;^&#39;,&nbsp;include(&#39;myApp.urls&#39;,&nbsp;namespace=&quot;app&quot;))\r\n	url(r&#39;^good/(\\d+)/$&#39;,&nbsp;views.good,&nbsp;name=&quot;good&quot;),\r\n	&lt;a&nbsp;href=&quot;{%&nbsp;url&nbsp;&#39;app:good&#39;&nbsp;1&nbsp;%}&quot;&gt;链接&lt;/a&gt;\r\n	csrf_token作用用于跨站请求伪造保护格式\r\n	{%&nbsp;csrf_token&nbsp;%}\r\n	block、extends作用用于模板的继承\r\n	autoescape作用用于HTML转义		</pre><pre data-source-line=\"123\" style=\"box-sizing: border-box; font-family: SFMono-Regular, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; font-size: 11.9px; margin-top: 0px; margin-bottom: 16px; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; line-height: 1.45; word-wrap: normal; padding: 16px; overflow: auto; background-color: rgb(246, 248, 250); border-radius: 3px; color: rgb(36, 41, 46);\">过滤器语法\r\n{{&nbsp;var|过滤器&nbsp;}}\r\n作用在变量被显示前修改它\r\nlower\r\nupper\r\n&lt;h1&gt;{{str|upper}}\r\n&lt;/h1&gt;&lt;h1&gt;{{str|lower}}&lt;/h1&gt;\r\n过滤器可以传递参数，参数用引号引起来join	\r\n格式\r\n列表|join:‘#’h1&gt;\r\n{{list|join:&#39;#&#39;}}\r\n&lt;/h1&gt;\r\n如果一个变量没有被提供，或者值为false、空，可以使用默认值default	\r\n格式\r\n&nbsp;&nbsp;&nbsp;&nbsp;{{&nbsp;var|default:&#39;good&#39;}}\r\n	示例\r\n	&lt;h1&gt;{{test|default:&#39;没有&#39;}}&lt;/h1&gt;\r\n	根据给定格式转换日期为字符串date\r\n	格式\r\n	{{&nbsp;dateVal|date:&#39;y-m-d&#39;}}\r\n	加减乘除\r\n	&lt;h1&gt;num&nbsp;=&nbsp;{{num}}&lt;/h1&gt;\r\n	&lt;h1&gt;{{num|add:10}}&lt;/h1&gt;\r\n	&lt;h1&gt;{{num|add:-5}}&lt;/h1&gt;\r\n	&lt;!--num/1*5--&gt;\r\n	&lt;!--num&nbsp;*&nbsp;5--&gt;\r\n	&lt;h1&gt;{%&nbsp;widthratio&nbsp;num&nbsp;1&nbsp;5&nbsp;%}&lt;/h1&gt;\r\n	&lt;!--num&nbsp;/&nbsp;5--&gt;\r\n	&lt;h1&gt;{%&nbsp;widthratio&nbsp;num&nbsp;5&nbsp;1&nbsp;%}&lt;/h1&gt;</pre><h2 data-source-line=\"165\" id=\"模板继承\" style=\"box-sizing: border-box; margin-top: 24px; margin-bottom: 16px; font-size: 1.75em; line-height: 1.25; padding-bottom: 0.3em; border-bottom: 1px solid rgb(234, 236, 239); color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, 微软雅黑, &quot;PingFang SC&quot;, Helvetica, Arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, SimSun, 宋体, Heiti, 黑体, sans-serif; white-space: normal;\"><a class=\"markdownIt-Anchor\" href=\"file:///C:/Users/Administrator/AppData/Local/Youdao/YNote/markdown/index.html#%E6%A8%A1%E6%9D%BF%E7%BB%A7%E6%89%BF\" style=\"box-sizing: border-box; color: rgb(3, 102, 214); text-decoration-line: none;\"></a>模板继承</h2><ul data-source-line=\"166\" style=\"box-sizing: border-box; padding-left: 2em; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, 微软雅黑, &quot;PingFang SC&quot;, Helvetica, Arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\" class=\" list-paddingleft-2\"><li><p>作用</p></li><ul style=\"list-style-type: square;\" class=\" list-paddingleft-2\"><li><p>继承模板，需要写在模板文件的第一行</p></li><li><p>语法{% extends &#39;父模板路径&#39; %}</p></li><li><p>在父模板中预留区域，子模板去填充</p></li><li><p>语法{% block 标签名 %} {%endblock 标签名%}</p></li><li><p>模板继承可以减少页面的内容的重复定义，实现页面的重用</p></li><li><p>block标签</p></li><li><p>extends标签</p></li></ul><li><p>定义父模板</p></li></ul><pre data-source-line=\"177\" style=\"box-sizing: border-box; font-family: SFMono-Regular, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; font-size: 11.9px; margin-top: 0px; margin-bottom: 16px; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; line-height: 1.45; word-wrap: normal; padding: 16px; overflow: auto; background-color: rgb(246, 248, 250); border-radius: 3px; color: rgb(36, 41, 46);\">	&lt;!DOCTYPE&nbsp;html&gt;&lt;html&nbsp;lang=&quot;en&quot;&gt;&lt;head&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;meta&nbsp;charset=&quot;UTF-8&quot;&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;title&gt;Title&lt;/title&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;style&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#header{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;width:100%;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;height:100px;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;background-color:red;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#footer{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;width:100%;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;height:100px;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;background-color:blue;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;&lt;/style&gt;&lt;/head&gt;&lt;body&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;div&nbsp;id=&quot;header&quot;&gt;header&lt;/div&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;div&nbsp;id=&quot;main&quot;&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{%&nbsp;block&nbsp;main%}\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{%&nbsp;endblock&nbsp;main%}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;hr/&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{%&nbsp;block&nbsp;main2%}\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{%&nbsp;endblock&nbsp;main2%}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;/div&gt;\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;div&nbsp;id=&quot;footer&quot;&gt;header&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;</pre><ul data-source-line=\"214\" style=\"box-sizing: border-box; padding-left: 2em; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, 微软雅黑, &quot;PingFang SC&quot;, Helvetica, Arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\" class=\" list-paddingleft-2\"><li><p>定义子模板</p></li></ul><pre data-source-line=\"216\" style=\"box-sizing: border-box; font-family: SFMono-Regular, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; font-size: 11.9px; margin-top: 0px; margin-bottom: 16px; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; line-height: 1.45; word-wrap: normal; padding: 16px; overflow: auto; background-color: rgb(246, 248, 250); border-radius: 3px; color: rgb(36, 41, 46);\">{%&nbsp;extends&nbsp;&#39;myApp/base.html&#39;%}\r\n&nbsp;&nbsp;&nbsp;&nbsp;{%&nbsp;block&nbsp;main&nbsp;%}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;h1&gt;获得id=&nbsp;main的css属性&lt;/h1&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;{%&nbsp;endblock&nbsp;main&nbsp;%}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;{%&nbsp;block&nbsp;main2&nbsp;%}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;h1&gt;获得id=&nbsp;main的css属性&lt;/h1&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;{%&nbsp;endblock&nbsp;main2&nbsp;%}\r\n&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;HTML转义\r\n	return&nbsp;render(request,&#39;myApp/index.html&#39;,{&quot;code&quot;:&quot;&lt;h1&gt;sunck&nbsp;is&nbsp;a&nbsp;very&nbsp;good&nbsp;man&lt;/h1&gt;&quot;})	\r\n\r\n	{{code}}\r\n		将接收到的code当成普通字符串渲染\r\n		将接收到的字符串当成HTML代码渲染\r\n			{{code|safe}}\r\n			{%&nbsp;autoescape&nbsp;off&nbsp;%}\r\n			&nbsp;&nbsp;&nbsp;&nbsp;{{code}}\r\n			{%&nbsp;endautoescape&nbsp;%}\r\n	CSRF		\r\n	跨站请求伪造\r\n		某些恶意网站包含链接、表单、按钮、js,利用登陆用户在浏览器中认证，从而攻击服务\r\n	防止&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CSRF			\r\n	在settings.py文件中的MIDDLEWARE增加&#39;django.middleware.csrf.CsrfViewMiddleware&#39;,{%&nbsp;csrf_token&nbsp;%}</pre><p><br/></p>', 1, '2018-08-17 06:44:45.908518', '2018-08-18 09:19:32.817385', 0, 2);
INSERT INTO `article` VALUES (3, 'Django框架视图', '2.gif', '作用 视图接受web请求，并响应web请求 本质 视图就是一个python中的函数 响应 网页 重定向 错误视图404 ，500 ，400 JSON数据', '<h1 data-source-line=\"1\" id=\"视图\" style=\"box-sizing: border-box; font-size: 2.25em; margin: 24px 0px 16px; line-height: 1.25; padding-bottom: 0.3em; border-bottom: 1px solid rgb(234, 236, 239); color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, 微软雅黑, &quot;PingFang SC&quot;, Helvetica, Arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, SimSun, 宋体, Heiti, 黑体, sans-serif; white-space: normal;\">视图</h1><h3 data-source-line=\"2\" id=\"概述\" style=\"box-sizing: border-box; margin-top: 24px; margin-bottom: 16px; font-size: 1.5em; line-height: 1.25; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, 微软雅黑, &quot;PingFang SC&quot;, Helvetica, Arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, SimSun, 宋体, Heiti, 黑体, sans-serif; white-space: normal;\"><a class=\"markdownIt-Anchor\" href=\"file:///C:/Users/Administrator/AppData/Local/Youdao/YNote/markdown/index.html#%E6%A6%82%E8%BF%B0\" style=\"box-sizing: border-box; color: rgb(3, 102, 214); text-decoration-line: none;\"></a>概述</h3><ul data-source-line=\"3\" style=\"box-sizing: border-box; padding-left: 2em; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, 微软雅黑, &quot;PingFang SC&quot;, Helvetica, Arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\" class=\" list-paddingleft-2\"><li><p>作用</p></li><ul style=\"list-style-type: square;\" class=\" list-paddingleft-2\"><li><p>视图接受web请求，并响应web请求</p></li></ul><li><p>本质</p></li><ul style=\"list-style-type: square;\" class=\" list-paddingleft-2\"><li><p>视图就是一个python中的函数</p></li></ul><li><p>响应</p></li><ul style=\"list-style-type: square;\" class=\" list-paddingleft-2\"><li><p>网页</p></li><li><p>重定向</p></li><li><p>错误视图404 ，500 ，400</p></li><li><p>JSON数据</p></li></ul></ul><h3 data-source-line=\"14\" id=\"url配置\" style=\"box-sizing: border-box; margin-top: 24px; margin-bottom: 16px; font-size: 1.5em; line-height: 1.25; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, 微软雅黑, &quot;PingFang SC&quot;, Helvetica, Arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, SimSun, 宋体, Heiti, 黑体, sans-serif; white-space: normal;\"><a class=\"markdownIt-Anchor\" href=\"file:///C:/Users/Administrator/AppData/Local/Youdao/YNote/markdown/index.html#url%E9%85%8D%E7%BD%AE\" style=\"box-sizing: border-box; color: rgb(3, 102, 214); text-decoration-line: none;\"></a>url配置</h3><ul data-source-line=\"15\" style=\"box-sizing: border-box; padding-left: 2em; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, 微软雅黑, &quot;PingFang SC&quot;, Helvetica, Arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\" class=\" list-paddingleft-2\"><li><p>配置流程</p></li><ul style=\"list-style-type: square;\" class=\" list-paddingleft-2\"><li><p>settings.py文件中的ROOT_URLCONF</p></li><li><p>ROOT_URLCONF = &#39;project.urls&#39;</p></li><li><p>默认实现了</p></li><li><p>制定根级url配置文件</p></li></ul><li><p>urlpatterns</p></li><ul style=\"list-style-type: square;\" class=\" list-paddingleft-2\"><li><p>正则表达式</p></li><li><p>视图名称</p></li><li><p>名称</p></li><li><p>一个url实例的列表</p></li><li><p>url对象</p></li></ul><li><p>url匹配正则的注意事项 - 如果想要从url中获取一个值，需要对正则加小括号 - 匹配正则前方不需要加反斜杠 - 正则前需要加r表示字符串不转义</p></li><li><p>配置</p></li><ul style=\"list-style-type: square;\" class=\" list-paddingleft-2\"><li><p>在应用中创建urls.py文件，定义本应用的url配置，在工程urls.py文件中使用include()方法 -工程urls.py文件</p></li></ul></ul><pre data-source-line=\"33\" style=\"box-sizing: border-box; font-family: SFMono-Regular, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; font-size: 11.9px; margin-top: 0px; margin-bottom: 16px; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; line-height: 1.45; word-wrap: normal; padding: 16px; overflow: auto; background-color: rgb(246, 248, 250); border-radius: 3px; color: rgb(36, 41, 46);\">&nbsp;&nbsp;&nbsp;&nbsp;from&nbsp;django.conf.urls&nbsp;import&nbsp;url,&nbsp;include&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;from&nbsp;django.contrib&nbsp;import&nbsp;admin&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;urlpatterns&nbsp;=&nbsp;[&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;url(r&#39;^admin/&#39;,&nbsp;admin.site.urls),&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;url(r&#39;^&#39;,&nbsp;include(&#39;myApp.urls&#39;,&nbsp;namespace=&quot;myApp&quot;))\r\n&nbsp;&nbsp;&nbsp;&nbsp;]</pre><p data-source-line=\"41\" style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, 微软雅黑, &quot;PingFang SC&quot;, Helvetica, Arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">应用中urls.py文件</p><pre data-source-line=\"42\" style=\"box-sizing: border-box; font-family: SFMono-Regular, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; font-size: 11.9px; margin-top: 0px; margin-bottom: 16px; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; line-height: 1.45; word-wrap: normal; padding: 16px; overflow: auto; background-color: rgb(246, 248, 250); border-radius: 3px; color: rgb(36, 41, 46);\">&nbsp;&nbsp;&nbsp;&nbsp;from&nbsp;django.conf.urls&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;import&nbsp;url&nbsp;from&nbsp;.&nbsp;import&nbsp;views&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;urlpatterns&nbsp;=&nbsp;[&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;url(r&#39;^$&#39;,&nbsp;views.index,&nbsp;name=&quot;index&quot;),&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;]</pre><ul data-source-line=\"52\" style=\"box-sizing: border-box; padding-left: 2em; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, 微软雅黑, &quot;PingFang SC&quot;, Helvetica, Arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\" class=\" list-paddingleft-2\"><li><p>URL的反向解析</p></li><ul style=\"list-style-type: square;\" class=\" list-paddingleft-2\"><li><p>使用url模板</p></li><li><p>在使用链接时，通过url配置的名称，动态生成url地址</p></li><li><p>如果在视图、模板中使用了硬编码链接，在url配置发生改变时，动态生成链接的地址</p></li><li><p>概述</p></li><li><p>解决</p></li><li><p>作用</p></li></ul><ul style=\"list-style-type: square;\" class=\" list-paddingleft-2\"></ul></ul><h3 data-source-line=\"60\" id=\"视图函数\" style=\"box-sizing: border-box; margin-top: 24px; margin-bottom: 16px; font-size: 1.5em; line-height: 1.25; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, 微软雅黑, &quot;PingFang SC&quot;, Helvetica, Arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, SimSun, 宋体, Heiti, 黑体, sans-serif; white-space: normal;\"><a class=\"markdownIt-Anchor\" href=\"file:///C:/Users/Administrator/AppData/Local/Youdao/YNote/markdown/index.html#%E8%A7%86%E5%9B%BE%E5%87%BD%E6%95%B0\" style=\"box-sizing: border-box; color: rgb(3, 102, 214); text-decoration-line: none;\"></a>视图函数</h3><ul data-source-line=\"62\" style=\"box-sizing: border-box; padding-left: 2em; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, 微软雅黑, &quot;PingFang SC&quot;, Helvetica, Arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\" class=\" list-paddingleft-2\"><li><p>定义视图</p></li><ul style=\"list-style-type: square;\" class=\" list-paddingleft-2\"><li><p>本质：一个函数</p></li></ul><li><p>视图参数</p></li><ul style=\"list-style-type: square;\" class=\" list-paddingleft-2\"><li><p>一个HttpRequest的实例</p></li><li><p>通过正则表达式获取的参数 -位置</p></li><li><p>一般在views.py文件下定义</p></li></ul><li><p>错误视图</p></li><ul style=\"list-style-type: square;\" class=\" list-paddingleft-2\"><li><p><a href=\"http://xn--settings-vz2ve12k.py/\" target=\"_blank\" style=\"box-sizing: border-box; color: rgb(3, 102, 214); text-decoration-line: none;\">配置settings.py</a></p></li><li><p>找不到网页(url匹配不成功)时返回</p></li><li><p>在templates目录下定义404.html</p></li><li><p>DEBUG如果为True永远不会调用404.html页面</p></li><li><p>ALLOWED_HOSTS = [&#39;*&#39;]</p></li><li><p>500视图在视图代码中出现错误(服务器代码)</p></li><li><p>400视图 错误出现在客户的操作</p></li><li><p>404视图</p></li></ul><ul style=\"list-style-type: square;\" class=\" list-paddingleft-2\"></ul></ul><pre data-source-line=\"79\" style=\"box-sizing: border-box; font-family: SFMono-Regular, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; font-size: 11.9px; margin-top: 0px; margin-bottom: 16px; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; line-height: 1.45; word-wrap: normal; padding: 16px; overflow: auto; background-color: rgb(246, 248, 250); border-radius: 3px; color: rgb(36, 41, 46);\">&lt;!DOCTYPE&nbsp;html&gt;&nbsp;&lt;html&nbsp;lang=&quot;en&quot;&gt;&lt;head&gt;&nbsp;&lt;meta&nbsp;charset=&quot;UTF-8&quot;&gt;&nbsp;&lt;title&gt;404页面&lt;/title&gt;&nbsp;&lt;/head&gt;&nbsp;&lt;body&gt;&nbsp;&lt;h1&gt;页面丢失&lt;/h1&gt;&nbsp;&lt;h2&gt;{{request_path}}&lt;/h2&gt;&nbsp;&lt;/body&gt;&nbsp;&lt;/html&gt;</pre><p data-source-line=\"91\" style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, 微软雅黑, &quot;PingFang SC&quot;, Helvetica, Arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">request_path导致错误的网址</p><ul data-source-line=\"94\" style=\"box-sizing: border-box; padding-left: 2em; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, 微软雅黑, &quot;PingFang SC&quot;, Helvetica, Arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\" class=\" list-paddingleft-2\"><li><p>HttpRequest对象</p></li><ul style=\"list-style-type: square;\" class=\" list-paddingleft-2\"><li><p>服务器接收http请求后，会根据报文创建HttpRequest对象</p></li><li><p>视图的第一个参数就是HttpRequest对象</p></li><li><p>django创建的，之后调用试图时传递给视图</p></li><li><p>概述</p></li><li><p>属性</p></li></ul></ul><table data-source-line=\"101\" width=\"NaN\"><thead style=\"box-sizing: border-box;\"><tr style=\"box-sizing: border-box; background-color: rgb(255, 255, 255); border-top: 1px solid rgb(198, 203, 209);\" class=\"firstRow\"><th style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">属性</th><th style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">含义</th></tr></thead><tbody style=\"box-sizing: border-box;\"><tr style=\"box-sizing: border-box; background-color: rgb(255, 255, 255); border-top: 1px solid rgb(198, 203, 209);\"><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">path</td><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">请求的完整路径(不包括域名和端口)</td></tr><tr style=\"box-sizing: border-box; background-color: rgb(246, 248, 250); border-top: 1px solid rgb(198, 203, 209);\"><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">encoding</td><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">表示浏览器提交的数据的编码方式一般为utf-8</td></tr><tr style=\"box-sizing: border-box; background-color: rgb(255, 255, 255); border-top: 1px solid rgb(198, 203, 209);\"><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">GET</td><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">类似字典的对象，包含了get请求的所有参数</td></tr><tr style=\"box-sizing: border-box; background-color: rgb(246, 248, 250); border-top: 1px solid rgb(198, 203, 209);\"><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">POST</td><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">类似字典的对象，包含了post请求的所有参数</td></tr><tr style=\"box-sizing: border-box; background-color: rgb(255, 255, 255); border-top: 1px solid rgb(198, 203, 209);\"><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">FILES</td><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">类似字典的对象，包含了所有上传的文件</td></tr><tr style=\"box-sizing: border-box; background-color: rgb(246, 248, 250); border-top: 1px solid rgb(198, 203, 209);\"><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">COOKIES</td><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">字典，包含所有的cookie</td></tr><tr style=\"box-sizing: border-box; background-color: rgb(255, 255, 255); border-top: 1px solid rgb(198, 203, 209);\"><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">session</td><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">类似字典的对象，表示当前会话</td></tr></tbody></table><ul data-source-line=\"110\" style=\"box-sizing: border-box; padding-left: 2em; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, 微软雅黑, &quot;PingFang SC&quot;, Helvetica, Arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\" class=\" list-paddingleft-2\"><li><p>方法</p></li><ul style=\"list-style-type: square;\" class=\" list-paddingleft-2\"><li><p>如果是通过XMLHttpRequest发起的，返回True</p></li><li><p>is_ajax()</p></li></ul><li><p>QueryDict对象</p></li><ul style=\"list-style-type: square;\" class=\" list-paddingleft-2\"><li><p>get()</p></li><li><p>getlist()</p></li><li><p>作用：根据键获取值</p></li><li><p>只能获取一个值</p></li><li><p>www.sunck.wang/abc?a=1&amp;b=2&amp;c=3</p></li><li><p>将键的值以列表的形式返回</p></li><li><p>可以获取多个值</p></li><li><p>www.sunck.wang/abc?a=1&amp;a=2&amp;c=3</p></li><li><p>request对象中的GET、POST都属于QueryDict对象</p></li><li><p>方法</p></li></ul><ul style=\"list-style-type: square;\" class=\" list-paddingleft-2\"></ul><li><p>GET属性</p></li><ul style=\"list-style-type: square;\" class=\" list-paddingleft-2\"><li><p><a href=\"http://127.0.0.1:8000/app/get1?a=1&b=2&c=3\" target=\"_blank\" style=\"box-sizing: border-box; color: rgb(3, 102, 214); text-decoration-line: none;\">http://127.0.0.1:8000/app/get1?a=1&amp;b=2&amp;c=3</a></p></li><li><p>获取浏览器传递过来给服务器的数据</p></li></ul></ul><pre data-source-line=\"128\" style=\"box-sizing: border-box; font-family: SFMono-Regular, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; font-size: 11.9px; margin-top: 0px; margin-bottom: 16px; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; line-height: 1.45; word-wrap: normal; padding: 16px; overflow: auto; background-color: rgb(246, 248, 250); border-radius: 3px; color: rgb(36, 41, 46);\">&nbsp;def&nbsp;get1(request):&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;a&nbsp;=&nbsp;request.GET.get(&#39;a&#39;)&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;b&nbsp;=&nbsp;request.GET[&#39;b&#39;]&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;c&nbsp;=&nbsp;request.GET.get(&#39;c&#39;)&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;HttpResponse(a&nbsp;+&nbsp;&quot;&nbsp;&quot;&nbsp;+&nbsp;b&nbsp;+&nbsp;&quot;&nbsp;&quot;&nbsp;+&nbsp;c)</pre><p data-source-line=\"137\" style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, 微软雅黑, &quot;PingFang SC&quot;, Helvetica, Arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\"><a href=\"http://127.0.0.1:8000/app/get1?a=1&a=2&c=3\" target=\"_blank\" style=\"box-sizing: border-box; color: rgb(3, 102, 214); text-decoration-line: none;\">http://127.0.0.1:8000/app/get1?a=1&amp;a=2&amp;c=3</a></p><pre data-source-line=\"139\" style=\"box-sizing: border-box; font-family: SFMono-Regular, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; font-size: 11.9px; margin-top: 0px; margin-bottom: 16px; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; line-height: 1.45; word-wrap: normal; padding: 16px; overflow: auto; background-color: rgb(246, 248, 250); border-radius: 3px; color: rgb(36, 41, 46);\">def&nbsp;get2(request):&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;a&nbsp;=&nbsp;request.GET.getlist(&#39;a&#39;)&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;a1&nbsp;=&nbsp;a[0]&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;a2&nbsp;=&nbsp;a[1]&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;c&nbsp;=&nbsp;request.GET.get(&#39;c&#39;)&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;HttpResponse(a1&nbsp;+&nbsp;&quot;&nbsp;&quot;&nbsp;+&nbsp;a2&nbsp;+&nbsp;&quot;&nbsp;&quot;&nbsp;+&nbsp;c)</pre><ul data-source-line=\"148\" style=\"box-sizing: border-box; padding-left: 2em; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, 微软雅黑, &quot;PingFang SC&quot;, Helvetica, Arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\" class=\" list-paddingleft-2\"><li><p>POST属性</p></li><ul style=\"list-style-type: square;\" class=\" list-paddingleft-2\"><li><p>使用表单提交实现post请求</p></li></ul></ul><pre data-source-line=\"151\" style=\"box-sizing: border-box; font-family: SFMono-Regular, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; font-size: 11.9px; margin-top: 0px; margin-bottom: 16px; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; line-height: 1.45; word-wrap: normal; padding: 16px; overflow: auto; background-color: rgb(246, 248, 250); border-radius: 3px; color: rgb(36, 41, 46);\">&nbsp;&nbsp;def&nbsp;showregist(request):&nbsp;\r\n&nbsp;&nbsp;return&nbsp;render(request,&nbsp;&#39;myApp/regist.html&#39;)&nbsp;\r\n&nbsp;&nbsp;def&nbsp;regist(request):&nbsp;\r\n&nbsp;&nbsp;name&nbsp;=&nbsp;request.POST.get(&quot;name&quot;)&nbsp;\r\n&nbsp;&nbsp;gender&nbsp;=&nbsp;request.POST.get(&quot;gender&quot;)&nbsp;\r\n&nbsp;&nbsp;age&nbsp;=&nbsp;request.POST.get(&quot;age&quot;)&nbsp;\r\n&nbsp;&nbsp;hobby&nbsp;=&nbsp;request.POST.getlist(&quot;hobby&quot;)&nbsp;\r\n&nbsp;&nbsp;return&nbsp;HttpResponse(&quot;post&quot;)</pre><ul data-source-line=\"162\" style=\"box-sizing: border-box; padding-left: 2em; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, 微软雅黑, &quot;PingFang SC&quot;, Helvetica, Arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\" class=\" list-paddingleft-2\"><li><p>关闭csrf</p></li></ul><pre data-source-line=\"164\" style=\"box-sizing: border-box; font-family: SFMono-Regular, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; font-size: 11.9px; margin-top: 0px; margin-bottom: 16px; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; line-height: 1.45; word-wrap: normal; padding: 16px; overflow: auto; background-color: rgb(246, 248, 250); border-radius: 3px; color: rgb(36, 41, 46);\">&nbsp;MIDDLEWARE&nbsp;=&nbsp;[&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&#39;django.middleware.security.SecurityMiddleware&#39;,&nbsp;&nbsp;&nbsp;&nbsp;&#39;django.contrib.sessions.middleware.SessionMiddleware&#39;,&nbsp;&nbsp;&nbsp;&nbsp;&#39;django.middleware.common.CommonMiddleware&#39;,&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&#39;django.middleware.csrf.CsrfViewMiddleware&#39;,&nbsp;&nbsp;&nbsp;&nbsp;&#39;django.contrib.auth.middleware.AuthenticationMiddleware&#39;,&nbsp;&nbsp;&nbsp;&nbsp;&#39;django.contrib.messages.middleware.MessageMiddleware&#39;,&nbsp;&nbsp;&nbsp;&nbsp;&#39;django.middleware.clickjacking.XFrameOptionsMiddleware&#39;,&nbsp;\r\n&nbsp;]</pre><ul data-source-line=\"177\" style=\"box-sizing: border-box; padding-left: 2em; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, 微软雅黑, &quot;PingFang SC&quot;, Helvetica, Arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\" class=\" list-paddingleft-2\"><li><p>HttpResponse对象</p></li><ul style=\"list-style-type: square;\" class=\" list-paddingleft-2\"><li><p>不调用模板，直接返回数据</p></li><li><p>给浏览器返回数据,HttpRequest对象是由django创建的，HttpResponse对象由程序员创建</p></li><li><p>概述</p></li><li><p>返回用法</p></li></ul><ul style=\"list-style-type: square;\" class=\" list-paddingleft-2\"></ul></ul><h2 data-source-line=\"184\" id=\"状态保持\" style=\"box-sizing: border-box; margin-top: 24px; margin-bottom: 16px; font-size: 1.75em; line-height: 1.25; padding-bottom: 0.3em; border-bottom: 1px solid rgb(234, 236, 239); color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, 微软雅黑, &quot;PingFang SC&quot;, Helvetica, Arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, SimSun, 宋体, Heiti, 黑体, sans-serif; white-space: normal;\"><a class=\"markdownIt-Anchor\" href=\"file:///C:/Users/Administrator/AppData/Local/Youdao/YNote/markdown/index.html#%E7%8A%B6%E6%80%81%E4%BF%9D%E6%8C%81\" style=\"box-sizing: border-box; color: rgb(3, 102, 214); text-decoration-line: none;\"></a>状态保持</h2><ul data-source-line=\"185\" style=\"box-sizing: border-box; padding-left: 2em; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, 微软雅黑, &quot;PingFang SC&quot;, Helvetica, Arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\" class=\" list-paddingleft-2\"><li><p>概述</p></li><ul style=\"list-style-type: square;\" class=\" list-paddingleft-2\"><li><p>http协议时无状态的，每次请求都是一次新的请求，不记得以前的请求</p></li><li><p>客户端与服务器端的一次通信就是一次会话</p></li><li><p>实现状态保持，在客户端或者服务端存储有关会话的数据</p></li><li><p>存储方式</p></li></ul><li><p>cookie 所有的数据存储在客户端，不要存敏感的数据</p></li><li><p>session所有的数存储在服务端，在客户端用cookie存储session_id</p></li><li><p>状态保持的目的</p></li><ul style=\"list-style-type: square;\" class=\" list-paddingleft-2\"><li><p>在一段时间内跟踪请求者的状态，可以实现跨页面访问当前的请求者的数据</p></li></ul><li><p>注意</p></li><ul style=\"list-style-type: square;\" class=\" list-paddingleft-2\"><li><p>不同的请求者之间不会共享这个数据，与请求者一一对应的 6.2 启用session settings文件中</p></li><li><p>INSTALLED_APPS</p></li><li><p>&#39;django.contrib.sessions&#39;,</p></li><li><p>MIDDLEWARE</p></li><li><p>&#39;django.contrib.sessions.middleware.SessionMiddleware&#39;,</p></li></ul><li><p>使用session</p></li><ul style=\"list-style-type: square;\" class=\" list-paddingleft-2\"><li><p>启用session后，每个HttpRequest对象都有一个session属性，就是一个类似字典的对象</p></li></ul><li><p>get(key, default=None)根据键获取session值</p></li><li><p>clear()清空所有的会话</p></li><li><p>flush() 删除当前的会话并删除会话的cookie</p></li><li><p>设置过期时间</p></li><ul style=\"list-style-type: square;\" class=\" list-paddingleft-2\"><li><p>set_expiry(value)</p></li><li><p>如果不设置，两个星期后过期</p></li><li><p>request.session.set_expiry(10)</p></li><li><p>0关闭浏览器时失效</p></li><li><p>None永不过期</p></li></ul><li><p>存储session的位置默认存储在数据库中SESSION_ENGINE = &#39;django.contrib.session.backends.db&#39;</p></li><li><p>缓存只存储在本地内存中，如果丢失不能找回，比数据库快</p></li><ul style=\"list-style-type: square;\" class=\" list-paddingleft-2\"><li><p>SESSION_ENGINE = &#39;django.contrib.session.backends.cache&#39;</p></li></ul><li><p>数据库和缓存优先从本地缓存中读取，读取不到再去数据库中获取</p></li><ul style=\"list-style-type: square;\" class=\" list-paddingleft-2\"><li><p>SESSION_ENGINE = &#39;django.contrib.session.backends.cached_db&#39; 6.6 使用redis缓存session</p></li></ul></ul><pre data-source-line=\"220\" style=\"box-sizing: border-box; font-family: SFMono-Regular, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; font-size: 11.9px; margin-top: 0px; margin-bottom: 16px; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; line-height: 1.45; word-wrap: normal; padding: 16px; overflow: auto; background-color: rgb(246, 248, 250); border-radius: 3px; color: rgb(36, 41, 46);\">pip&nbsp;install&nbsp;django-redis-sessions&nbsp;&nbsp;SESSION_ENGINE&nbsp;=&nbsp;&#39;redis_sessions.session&#39;&nbsp;\r\n&nbsp;&nbsp;SESSION_REDIS_HOST&nbsp;=&nbsp;&#39;localhost&#39;&nbsp;\r\n&nbsp;&nbsp;SESSION_REDIS_PORT&nbsp;=&nbsp;6379&nbsp;\r\n&nbsp;&nbsp;SESSION_REDIS_DB&nbsp;=&nbsp;0&nbsp;\r\n&nbsp;&nbsp;SESSION_REDIS_PASSWORD&nbsp;=&nbsp;&#39;sunck&#39;&nbsp;\r\n&nbsp;&nbsp;SESSION_REDIS_PREFIX&nbsp;=&nbsp;&#39;session&#39;</pre><p><br/></p>', 1, '2018-08-17 07:13:53.921499', '2018-08-18 08:40:10.630276', 0, 2);
INSERT INTO `article` VALUES (4, 'Django模型', '3_Dh0Ryse.jpg', 'Django对各种数据库提供了很好的支持，Django为这些数据库提供了统一的调用API，可以根据不同的业务需求选择不同的数据库', '<h1 data-source-line=\"1\" id=\"模型\" style=\"box-sizing: border-box; font-size: 2.25em; margin: 24px 0px 16px; line-height: 1.25; padding-bottom: 0.3em; border-bottom: 1px solid rgb(234, 236, 239); color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, 微软雅黑, \" pingfang=\"\" hiragino=\"\" sans=\"\" microsoft=\"\" white-space:=\"\">模型</h1><ul data-source-line=\"2\" style=\"box-sizing: border-box; padding-left: 2em; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, 微软雅黑, \" pingfang=\"\" hiragino=\"\" sans=\"\" microsoft=\"\" font-size:=\"\" white-space:=\"\" class=\" list-paddingleft-2\"><li><p>概述</p></li><ul style=\"list-style-type: square;\" class=\" list-paddingleft-2\"><li><p>Django对各种数据库提供了很好的支持，Django为这些数据库提供了统一的调用API，可以根据不同的业务需求选择不同的数据库</p></li></ul></ul><h3 data-source-line=\"4\" id=\"配置数据库\" style=\"box-sizing: border-box; margin-top: 24px; margin-bottom: 16px; font-size: 1.5em; line-height: 1.25; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, 微软雅黑, \" pingfang=\"\" hiragino=\"\" sans=\"\" microsoft=\"\" white-space:=\"\"><a class=\"markdownIt-Anchor\" href=\"file:///C:/Users/Administrator/AppData/Local/Youdao/YNote/markdown/index.html#%E9%85%8D%E7%BD%AE%E6%95%B0%E6%8D%AE%E5%BA%93\" style=\"box-sizing: border-box; color: rgb(3, 102, 214); text-decoration-line: none;\"></a>配置数据库</h3><ul data-source-line=\"5\" style=\"box-sizing: border-box; padding-left: 2em; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, 微软雅黑, \" pingfang=\"\" hiragino=\"\" sans=\"\" microsoft=\"\" font-size:=\"\" white-space:=\"\" class=\" list-paddingleft-2\"><li><p>修改工程目录下的__init__.py文件</p></li></ul><pre data-source-line=\"6\" style=\"box-sizing: border-box; font-family: SFMono-Regular, Consolas, \" liberation=\"\" font-size:=\"\" margin-top:=\"\" margin-bottom:=\"\" font-variant-numeric:=\"\" font-variant-east-asian:=\"\" font-stretch:=\"\" line-height:=\"\" word-wrap:=\"\" padding:=\"\" overflow:=\"\" background-color:=\"\" border-radius:=\"\" color:=\"\">&nbsp;&nbsp;&nbsp;&nbsp;import&nbsp;pymysql&nbsp;pymysql.install_as_MySQLdb()</pre><ul data-source-line=\"9\" style=\"box-sizing: border-box; padding-left: 2em; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, 微软雅黑, \" pingfang=\"\" hiragino=\"\" sans=\"\" microsoft=\"\" font-size:=\"\" white-space:=\"\" class=\" list-paddingleft-2\"><li><p>修改settings.py文件</p></li></ul><pre data-source-line=\"10\" style=\"box-sizing: border-box; font-family: SFMono-Regular, Consolas, \" liberation=\"\" font-size:=\"\" margin-top:=\"\" margin-bottom:=\"\" font-variant-numeric:=\"\" font-variant-east-asian:=\"\" font-stretch:=\"\" line-height:=\"\" word-wrap:=\"\" padding:=\"\" overflow:=\"\" background-color:=\"\" border-radius:=\"\" color:=\"\">DATABASES&nbsp;=&nbsp;{&nbsp;\r\n&#39;default&#39;:&nbsp;{&nbsp;\r\n&#39;ENGINE&#39;:&nbsp;&#39;django.db.backends.mysql&#39;,&nbsp;\r\n&#39;NAME&#39;:数据库名&#39;,&nbsp;\r\n&#39;USER&#39;:&#39;用户名&#39;,&nbsp;\r\n&#39;PASSWORD&#39;:&#39;密码&#39;,&nbsp;\r\n&#39;HOST&#39;:&#39;数据库服务器ip&#39;,&nbsp;\r\n&#39;PORT&#39;:&#39;端口号&#39;&nbsp;}&nbsp;}</pre><ul data-source-line=\"20\" style=\"box-sizing: border-box; padding-left: 2em; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, 微软雅黑, \" pingfang=\"\" hiragino=\"\" sans=\"\" microsoft=\"\" font-size:=\"\" white-space:=\"\" class=\" list-paddingleft-2\"><li><p>开发流程</p></li><ul style=\"list-style-type: square;\" class=\" list-paddingleft-2\"><li><p>一个模型类都在数据库中对应一张数据表</p></li><li><p>配置数据库</p></li><li><p>定义模型类</p></li><li><p>生成迁移文件</p></li><li><p>执行迁移生成数据表</p></li><li><p>使用模型类进行增删改查(crud)操作</p></li></ul></ul><h2 data-source-line=\"27\" id=\"orm\" style=\"box-sizing: border-box; margin-top: 24px; margin-bottom: 16px; font-size: 1.75em; line-height: 1.25; padding-bottom: 0.3em; border-bottom: 1px solid rgb(234, 236, 239); color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, 微软雅黑, \" pingfang=\"\" hiragino=\"\" sans=\"\" microsoft=\"\" white-space:=\"\"><a class=\"markdownIt-Anchor\" href=\"file:///C:/Users/Administrator/AppData/Local/Youdao/YNote/markdown/index.html#orm\" style=\"box-sizing: border-box; color: rgb(3, 102, 214); text-decoration-line: none;\"></a>ORM</h2><ul data-source-line=\"28\" style=\"box-sizing: border-box; padding-left: 2em; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, 微软雅黑, \" pingfang=\"\" hiragino=\"\" sans=\"\" microsoft=\"\" font-size:=\"\" white-space:=\"\" class=\" list-paddingleft-2\"><li><p>概述</p></li><ul style=\"list-style-type: square;\" class=\" list-paddingleft-2\"><li><p>对象-关系-映射</p></li></ul><li><p>任务</p></li><ul style=\"list-style-type: square;\" class=\" list-paddingleft-2\"><li><p>根据对象的类型生成表结构</p></li><li><p>将对象、列表的操作转换为sql语句</p></li><li><p>将sql语句查询到的结果转换为对象、列表</p></li></ul><li><p>优点</p></li><ul style=\"list-style-type: square;\" class=\" list-paddingleft-2\"><li><p>极大的减轻了开发人员的工作量，不需要面对因数据库的变更而修改代码</p></li></ul><li><p>图解</p></li></ul><h2 data-source-line=\"37\" id=\"定义模型\" style=\"box-sizing: border-box; margin-top: 24px; margin-bottom: 16px; font-size: 1.75em; line-height: 1.25; padding-bottom: 0.3em; border-bottom: 1px solid rgb(234, 236, 239); color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, 微软雅黑, \" pingfang=\"\" hiragino=\"\" sans=\"\" microsoft=\"\" white-space:=\"\"><a class=\"markdownIt-Anchor\" href=\"file:///C:/Users/Administrator/AppData/Local/Youdao/YNote/markdown/index.html#%E5%AE%9A%E4%B9%89%E6%A8%A1%E5%9E%8B\" style=\"box-sizing: border-box; color: rgb(3, 102, 214); text-decoration-line: none;\"></a>定义模型</h2><ul data-source-line=\"38\" style=\"box-sizing: border-box; padding-left: 2em; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, 微软雅黑, \" pingfang=\"\" hiragino=\"\" sans=\"\" microsoft=\"\" font-size:=\"\" white-space:=\"\" class=\" list-paddingleft-2\"><li><p>模型、属性、表、字段间的关系</p></li><ul style=\"list-style-type: square;\" class=\" list-paddingleft-2\"><li><p>一个模型类在数据库中对应一张表，在模型类中定义的属性，对应该模型对照表中的一个字段</p></li></ul><li><p>定义属性</p></li></ul><table data-source-line=\"42\" width=\"NaN\"><thead style=\"box-sizing: border-box;\"><tr style=\"box-sizing: border-box; background-color: rgb(255, 255, 255); border-top: 1px solid rgb(198, 203, 209);\" class=\"firstRow\"><th style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">字段类</th><th style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">说明</th></tr></thead><tbody style=\"box-sizing: border-box;\"><tr style=\"box-sizing: border-box; background-color: rgb(255, 255, 255); border-top: 1px solid rgb(198, 203, 209);\"><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">AutoField</td><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">自增ID字段</td></tr><tr style=\"box-sizing: border-box; background-color: rgb(246, 248, 250); border-top: 1px solid rgb(198, 203, 209);\"><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">BigIntegerField</td><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">64位有符号整数</td></tr><tr style=\"box-sizing: border-box; background-color: rgb(255, 255, 255); border-top: 1px solid rgb(198, 203, 209);\"><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">BinaryField</td><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">存储二进制数据的字段，对应Python的bytes类型</td></tr><tr style=\"box-sizing: border-box; background-color: rgb(246, 248, 250); border-top: 1px solid rgb(198, 203, 209);\"><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">BooleanField</td><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">存储True或False</td></tr><tr style=\"box-sizing: border-box; background-color: rgb(255, 255, 255); border-top: 1px solid rgb(198, 203, 209);\"><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">CharField</td><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">长度较小的字符串</td></tr><tr style=\"box-sizing: border-box; background-color: rgb(246, 248, 250); border-top: 1px solid rgb(198, 203, 209);\"><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">DateField</td><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">存储日期，有auto_now和auto_now_add属性</td></tr><tr style=\"box-sizing: border-box; background-color: rgb(255, 255, 255); border-top: 1px solid rgb(198, 203, 209);\"><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">DateTimeField</td><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">存储日期和日期，两个附加属性同上</td></tr><tr style=\"box-sizing: border-box; background-color: rgb(246, 248, 250); border-top: 1px solid rgb(198, 203, 209);\"><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">DecimalField</td><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">存储固定精度小数，有max_digits（有效位数）和decimal_places（小数点后面）两个必要的参数</td></tr><tr style=\"box-sizing: border-box; background-color: rgb(255, 255, 255); border-top: 1px solid rgb(198, 203, 209);\"><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">DurationField</td><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">存储时间跨度</td></tr><tr style=\"box-sizing: border-box; background-color: rgb(246, 248, 250); border-top: 1px solid rgb(198, 203, 209);\"><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">EmailField</td><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">与CharField相同，可以用EmailValidator验证</td></tr><tr style=\"box-sizing: border-box; background-color: rgb(255, 255, 255); border-top: 1px solid rgb(198, 203, 209);\"><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">FileField</td><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">文件上传字段</td></tr><tr style=\"box-sizing: border-box; background-color: rgb(246, 248, 250); border-top: 1px solid rgb(198, 203, 209);\"><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">FloatField</td><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">存储浮点数</td></tr><tr style=\"box-sizing: border-box; background-color: rgb(255, 255, 255); border-top: 1px solid rgb(198, 203, 209);\"><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">ImageField</td><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">其他同FileFiled，要验证上传的是不是有效图像</td></tr><tr style=\"box-sizing: border-box; background-color: rgb(246, 248, 250); border-top: 1px solid rgb(198, 203, 209);\"><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">IntegerField</td><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">存储32位有符号整数。</td></tr><tr style=\"box-sizing: border-box; background-color: rgb(255, 255, 255); border-top: 1px solid rgb(198, 203, 209);\"><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">GenericIPAddressField</td><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">存储IPv4或IPv6地址</td></tr><tr style=\"box-sizing: border-box; background-color: rgb(246, 248, 250); border-top: 1px solid rgb(198, 203, 209);\"><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">NullBooleanField</td><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">存储True、False或null值</td></tr><tr style=\"box-sizing: border-box; background-color: rgb(255, 255, 255); border-top: 1px solid rgb(198, 203, 209);\"><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">PositiveIntegerField</td><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">存储无符号整数（只能存储正数）</td></tr><tr style=\"box-sizing: border-box; background-color: rgb(246, 248, 250); border-top: 1px solid rgb(198, 203, 209);\"><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">SlugField</td><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">存储slug（简短标注）</td></tr><tr style=\"box-sizing: border-box; background-color: rgb(255, 255, 255); border-top: 1px solid rgb(198, 203, 209);\"><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">SmallIntegerField</td><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">存储16位有符号整数</td></tr><tr style=\"box-sizing: border-box; background-color: rgb(246, 248, 250); border-top: 1px solid rgb(198, 203, 209);\"><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">TextField</td><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">存储数据量较大的文本</td></tr><tr style=\"box-sizing: border-box; background-color: rgb(255, 255, 255); border-top: 1px solid rgb(198, 203, 209);\"><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">TimeField</td><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">存储时间</td></tr><tr style=\"box-sizing: border-box; background-color: rgb(246, 248, 250); border-top: 1px solid rgb(198, 203, 209);\"><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">URLField</td><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">存储URL的CharField</td></tr><tr style=\"box-sizing: border-box; background-color: rgb(255, 255, 255); border-top: 1px solid rgb(198, 203, 209);\"><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">UUIDField</td><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">存储全局唯一标识符</td></tr></tbody></table><h4 data-source-line=\"68\" id=\"字段属性\" style=\"box-sizing: border-box; margin-top: 24px; margin-bottom: 16px; font-size: 1.25em; line-height: 1.25; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, 微软雅黑, \" pingfang=\"\" hiragino=\"\" sans=\"\" microsoft=\"\" white-space:=\"\"><a class=\"markdownIt-Anchor\" href=\"file:///C:/Users/Administrator/AppData/Local/Youdao/YNote/markdown/index.html#%E5%AD%97%E6%AE%B5%E5%B1%9E%E6%80%A7\" style=\"box-sizing: border-box; color: rgb(3, 102, 214); text-decoration-line: none;\"></a>字段属性</h4><table data-source-line=\"70\" width=\"NaN\"><thead style=\"box-sizing: border-box;\"><tr style=\"box-sizing: border-box; background-color: rgb(255, 255, 255); border-top: 1px solid rgb(198, 203, 209);\" class=\"firstRow\"><th style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">选项</th><th style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">说明</th></tr></thead><tbody style=\"box-sizing: border-box;\"><tr style=\"box-sizing: border-box; background-color: rgb(255, 255, 255); border-top: 1px solid rgb(198, 203, 209);\"><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">null</td><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">数据库中对应的字段是否允许为NULL，默认为False</td></tr><tr style=\"box-sizing: border-box; background-color: rgb(246, 248, 250); border-top: 1px solid rgb(198, 203, 209);\"><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">blank</td><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">后台模型管理验证数据时，是否允许为NULL，默认为False</td></tr><tr style=\"box-sizing: border-box; background-color: rgb(255, 255, 255); border-top: 1px solid rgb(198, 203, 209);\"><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">choices</td><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">设定字段的选项，各元组中的第一个值是设置在模型上的值，第二值是人类可读的值</td></tr><tr style=\"box-sizing: border-box; background-color: rgb(246, 248, 250); border-top: 1px solid rgb(198, 203, 209);\"><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">db_column</td><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">字段对应到数据库表中的列名，未指定时直接使用字段的名称</td></tr><tr style=\"box-sizing: border-box; background-color: rgb(255, 255, 255); border-top: 1px solid rgb(198, 203, 209);\"><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">db_index</td><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">设置为True时将在该字段创建索引</td></tr><tr style=\"box-sizing: border-box; background-color: rgb(246, 248, 250); border-top: 1px solid rgb(198, 203, 209);\"><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">db_tablespace</td><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">为有索引的字段设置使用的表空间，默认为DEFAULT_INDEX_TABLESPACE</td></tr><tr style=\"box-sizing: border-box; background-color: rgb(255, 255, 255); border-top: 1px solid rgb(198, 203, 209);\"><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">default</td><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">字段的默认值</td></tr><tr style=\"box-sizing: border-box; background-color: rgb(246, 248, 250); border-top: 1px solid rgb(198, 203, 209);\"><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">editable</td><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">字段在后台模型管理或ModelForm中是否显示，默认为True</td></tr><tr style=\"box-sizing: border-box; background-color: rgb(255, 255, 255); border-top: 1px solid rgb(198, 203, 209);\"><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">error_messages</td><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">设定字段抛出异常时的默认消息的字典，其中的键包括null、blank、invalid、invalid_choice、unique和unique_for_date</td></tr><tr style=\"box-sizing: border-box; background-color: rgb(246, 248, 250); border-top: 1px solid rgb(198, 203, 209);\"><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">help_text</td><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">表单小组件旁边显示的额外的帮助文本。</td></tr><tr style=\"box-sizing: border-box; background-color: rgb(255, 255, 255); border-top: 1px solid rgb(198, 203, 209);\"><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">primary_key</td><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">将字段指定为模型的主键，未指定时会自动添加AutoField用于主键，只读。</td></tr><tr style=\"box-sizing: border-box; background-color: rgb(246, 248, 250); border-top: 1px solid rgb(198, 203, 209);\"><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">unique</td><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">设置为True时，表中字段的值必须是唯一的</td></tr><tr style=\"box-sizing: border-box; background-color: rgb(255, 255, 255); border-top: 1px solid rgb(198, 203, 209);\"><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">verbose_name</td><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">字段在后台模型管理显示的名称，未指定时使用字段的名称</td></tr><tr style=\"box-sizing: border-box; background-color: rgb(246, 248, 250); border-top: 1px solid rgb(198, 203, 209);\"><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">auto_now</td><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">无论是你添加还是修改对象，时间为你添加或者修改的时间</td></tr><tr style=\"box-sizing: border-box; background-color: rgb(255, 255, 255); border-top: 1px solid rgb(198, 203, 209);\"><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">auto_now_add</td><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">为添加时的时间，更新对象时不会有变动</td></tr></tbody></table><h2 data-source-line=\"90\" id=\"创建模型类\" style=\"box-sizing: border-box; margin-top: 24px; margin-bottom: 16px; font-size: 1.75em; line-height: 1.25; padding-bottom: 0.3em; border-bottom: 1px solid rgb(234, 236, 239); color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, 微软雅黑, \" pingfang=\"\" hiragino=\"\" sans=\"\" microsoft=\"\" white-space:=\"\"><a class=\"markdownIt-Anchor\" href=\"file:///C:/Users/Administrator/AppData/Local/Youdao/YNote/markdown/index.html#%E5%88%9B%E5%BB%BA%E6%A8%A1%E5%9E%8B%E7%B1%BB\" style=\"box-sizing: border-box; color: rgb(3, 102, 214); text-decoration-line: none;\"></a>创建模型类</h2><ul data-source-line=\"91\" style=\"box-sizing: border-box; padding-left: 2em; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, 微软雅黑, \" pingfang=\"\" hiragino=\"\" sans=\"\" microsoft=\"\" font-size:=\"\" white-space:=\"\" class=\" list-paddingleft-2\"><li><p>元选项</p></li><ul style=\"list-style-type: square;\" class=\" list-paddingleft-2\"><li><p>在模型类中定义Meta类，用于设置元信息</p></li><li><p>db_table 定义数据表名，推荐使用小写字母，数据表名默认为项目名小写_类名小写</p></li></ul></ul><pre data-source-line=\"96\" style=\"box-sizing: border-box; font-family: SFMono-Regular, Consolas, \" liberation=\"\" font-size:=\"\" margin-top:=\"\" margin-bottom:=\"\" font-variant-numeric:=\"\" font-variant-east-asian:=\"\" font-stretch:=\"\" line-height:=\"\" word-wrap:=\"\" padding:=\"\" overflow:=\"\" background-color:=\"\" border-radius:=\"\" color:=\"\">&nbsp;&nbsp;&nbsp;&nbsp;class&nbsp;Meta:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;db_table&nbsp;=&nbsp;&#39;StudentInfo&#39;</pre><ul data-source-line=\"100\" style=\"box-sizing: border-box; padding-left: 2em; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, 微软雅黑, \" pingfang=\"\" hiragino=\"\" sans=\"\" microsoft=\"\" font-size:=\"\" white-space:=\"\" class=\" list-paddingleft-2\"><li><p>ordering</p></li><ul style=\"list-style-type: square;\" class=\" list-paddingleft-2\"><li><p>对象的默认排序字段，获取对象的列表时使用</p></li><li><p>ordering[&#39;id&#39;]升序</p></li><li><p>ordering[&#39;-id&#39;]降序</p></li><li><p>注意：排序会增加数据库的开销</p></li></ul></ul><pre data-source-line=\"106\" style=\"box-sizing: border-box; font-family: SFMono-Regular, Consolas, \" liberation=\"\" font-size:=\"\" margin-top:=\"\" margin-bottom:=\"\" font-variant-numeric:=\"\" font-variant-east-asian:=\"\" font-stretch:=\"\" line-height:=\"\" word-wrap:=\"\" padding:=\"\" overflow:=\"\" background-color:=\"\" border-radius:=\"\" color:=\"\">&nbsp;class&nbsp;Students(models.Model):&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;sname&nbsp;=&nbsp;models.CharField(max_length=20)&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;sgender&nbsp;=&nbsp;models.BooleanField(default=True)&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;sage&nbsp;=&nbsp;models.IntegerField(db_column=&quot;age&quot;)&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;scontend&nbsp;=&nbsp;models.CharField(max_length=20)&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;isDelete&nbsp;=&nbsp;models.BooleanField(default=False)&nbsp;#&nbsp;关联外键&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;sgrade&nbsp;=&nbsp;models.ForeignKey(&quot;Grades&quot;)&nbsp;\r\n&nbsp;\r\n&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;__str__(self):&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;self.sname&nbsp;lastTime&nbsp;=&nbsp;models.DateTimeField(auto_now=True)&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;createTime&nbsp;=&nbsp;models.DateTimeField(auto_now_add=True)&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;class&nbsp;Meta:&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;db_table=&quot;students&quot;&nbsp;ordering=[&#39;id&#39;]</pre><h2 data-source-line=\"124\" id=\"模型成员\" style=\"box-sizing: border-box; margin-top: 24px; margin-bottom: 16px; font-size: 1.75em; line-height: 1.25; padding-bottom: 0.3em; border-bottom: 1px solid rgb(234, 236, 239); color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, 微软雅黑, \" pingfang=\"\" hiragino=\"\" sans=\"\" microsoft=\"\" white-space:=\"\"><a class=\"markdownIt-Anchor\" href=\"file:///C:/Users/Administrator/AppData/Local/Youdao/YNote/markdown/index.html#%E6%A8%A1%E5%9E%8B%E6%88%90%E5%91%98\" style=\"box-sizing: border-box; color: rgb(3, 102, 214); text-decoration-line: none;\"></a>模型成员</h2><ul data-source-line=\"125\" style=\"box-sizing: border-box; padding-left: 2em; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, 微软雅黑, \" pingfang=\"\" hiragino=\"\" sans=\"\" microsoft=\"\" font-size:=\"\" white-space:=\"\" class=\" list-paddingleft-2\"><li><p>类属性</p></li><ul style=\"list-style-type: square;\" class=\" list-paddingleft-2\"><li><p>模型管理器是Django的模型进行与数据库进行交互的接口，一个模型可以有多个模型管理器</p></li><li><p>作用</p></li><li><p>向管理器类中添加额外的方法</p></li><li><p>修改管理器返回的原始查询集</p></li><li><p>重写get_queryset()方法</p></li><li><p>代码示例</p></li><li><p>当自定义模型管理器，objects就不存在了 stuObj = models.Manager() 当为模型指定模型管理器，Django就不在为模型类生成objects模型管理器</p></li><li><p>是Manager类型的一个对象，作用是与数据库进行交互</p></li><li><p>当定义模型类是没有指定管理器，则Django为模型创建一个名为objects的管理器</p></li><li><p>objects</p></li><li><p>自定义管理器</p></li><li><p>自定义管理器Manager类</p></li></ul></ul><pre data-source-line=\"140\" style=\"box-sizing: border-box; font-family: SFMono-Regular, Consolas, \" liberation=\"\" font-size:=\"\" margin-top:=\"\" margin-bottom:=\"\" font-variant-numeric:=\"\" font-variant-east-asian:=\"\" font-stretch:=\"\" line-height:=\"\" word-wrap:=\"\" padding:=\"\" overflow:=\"\" background-color:=\"\" border-radius:=\"\" color:=\"\">class&nbsp;StudentsManager(models.Manager):&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;get_queryset(self):&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;super(StudentsManager,self).get_queryset().filter(isDelete=False)&nbsp;\r\nclass&nbsp;Students(models.Model):&nbsp;#&nbsp;自定义模型管理器&nbsp;#&nbsp;当自定义模型管理器，objects就不存在了&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;stuObj&nbsp;=&nbsp;models.Manager()&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;stuObj2&nbsp;=&nbsp;StudentsManager()</pre><ul data-source-line=\"149\" style=\"box-sizing: border-box; padding-left: 2em; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, 微软雅黑, \" pingfang=\"\" hiragino=\"\" sans=\"\" microsoft=\"\" font-size:=\"\" white-space:=\"\" class=\" list-paddingleft-2\"><li><p>创建对象</p></li><ul style=\"list-style-type: square;\" class=\" list-paddingleft-2\"><li><p>向数据库中添加数据</p></li><li><p>目的</p></li><li><p>当创建对象时，django不会对数据库进行读写操作，当调用save()方式时才与数据库交互，将对象保存到数据库表中</p></li><li><p>注意：__init__方法已经在父类models.Model中使用，在自定义的模型中无法使用</p></li><li><p>方法</p></li><li><p>在模型类中增加一个类方法</p></li></ul></ul><pre data-source-line=\"157\" style=\"box-sizing: border-box; font-family: SFMono-Regular, Consolas, \" liberation=\"\" font-size:=\"\" margin-top:=\"\" margin-bottom:=\"\" font-variant-numeric:=\"\" font-variant-east-asian:=\"\" font-stretch:=\"\" line-height:=\"\" word-wrap:=\"\" padding:=\"\" overflow:=\"\" background-color:=\"\" border-radius:=\"\" color:=\"\">class&nbsp;Students(models.Model):&nbsp;#定义一个类方法创建对象&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;@classmethod&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;createStudnet(cls,&nbsp;name,&nbsp;age,&nbsp;gender,&nbsp;contend,&nbsp;grade,&nbsp;lastT,&nbsp;createT,&nbsp;isD=False):&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;stu&nbsp;=&nbsp;cls(sname&nbsp;=&nbsp;name,&nbsp;sage&nbsp;=&nbsp;age,&nbsp;sgender&nbsp;=&nbsp;gender,&nbsp;scontend&nbsp;=&nbsp;contend,&nbsp;sgrade&nbsp;=&nbsp;grade,&nbsp;lastTime&nbsp;=&nbsp;lastT,&nbsp;createTime&nbsp;=&nbsp;createT,&nbsp;isDelete=isD)&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;stu</pre><ul data-source-line=\"165\" style=\"box-sizing: border-box; padding-left: 2em; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, 微软雅黑, \" pingfang=\"\" hiragino=\"\" sans=\"\" microsoft=\"\" font-size:=\"\" white-space:=\"\" class=\" list-paddingleft-2\"><li><p>在定义管理器中添加一个方法</p></li></ul><pre data-source-line=\"167\" style=\"box-sizing: border-box; font-family: SFMono-Regular, Consolas, \" liberation=\"\" font-size:=\"\" margin-top:=\"\" margin-bottom:=\"\" font-variant-numeric:=\"\" font-variant-east-asian:=\"\" font-stretch:=\"\" line-height:=\"\" word-wrap:=\"\" padding:=\"\" overflow:=\"\" background-color:=\"\" border-radius:=\"\" color:=\"\">class&nbsp;StudentsManager(models.Manager):&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;get_queryset(self):&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;super(StudentsManager,self).get_queryset().filter(isDelete=False)&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;createStudnet(self,&nbsp;name,&nbsp;age,&nbsp;gender,&nbsp;contend,&nbsp;grade,&nbsp;lastT,&nbsp;createT,&nbsp;isD=False):&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;stu&nbsp;=&nbsp;self.model()&nbsp;#&nbsp;print(type(grade))&nbsp;stu.sname&nbsp;=&nbsp;name&nbsp;stu.sage&nbsp;=&nbsp;age&nbsp;stu.sgender&nbsp;=&nbsp;gender&nbsp;stu.scontend&nbsp;=&nbsp;contend&nbsp;stu.sgrade&nbsp;=&nbsp;grade&nbsp;stu.lastTime&nbsp;=&nbsp;lastT&nbsp;stu.createTime&nbsp;=&nbsp;createT&nbsp;return&nbsp;stu</pre><h2 data-source-line=\"178\" id=\"模型查询\" style=\"box-sizing: border-box; margin-top: 24px; margin-bottom: 16px; font-size: 1.75em; line-height: 1.25; padding-bottom: 0.3em; border-bottom: 1px solid rgb(234, 236, 239); color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, 微软雅黑, \" pingfang=\"\" hiragino=\"\" sans=\"\" microsoft=\"\" white-space:=\"\"><a class=\"markdownIt-Anchor\" href=\"file:///C:/Users/Administrator/AppData/Local/Youdao/YNote/markdown/index.html#%E6%A8%A1%E5%9E%8B%E6%9F%A5%E8%AF%A2\" style=\"box-sizing: border-box; color: rgb(3, 102, 214); text-decoration-line: none;\"></a>模型查询</h2><ul data-source-line=\"179\" style=\"box-sizing: border-box; padding-left: 2em; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, 微软雅黑, \" pingfang=\"\" hiragino=\"\" sans=\"\" microsoft=\"\" font-size:=\"\" white-space:=\"\" class=\" list-paddingleft-2\"><li><p>概述</p></li><ul style=\"list-style-type: square;\" class=\" list-paddingleft-2\"><li><p>查询集表示从数据库获取的对象集合</p></li><li><p>查询集可以有多个过滤器</p></li><li><p>过滤器就是一个函数，基于所给的参数限制查询集结果</p></li><li><p>从sql角度来说，查询集合select语句等价，过滤器就像where条件</p></li></ul><li><p>查询集</p></li><ul style=\"list-style-type: square;\" class=\" list-paddingleft-2\"><li><p>在管理器上调用过滤器方法返回查询集</p></li><li><p>查询集经过过滤器筛选后返回新的查询集，所以可以写成链式调用</p></li><li><p>惰性执行</p></li><li><p>创建查询集不会带来任何数据的访问，直到调用数据时，才会访问数据</p></li></ul><li><p>直接访问数据的情况</p></li><ul style=\"list-style-type: square;\" class=\" list-paddingleft-2\"><li><p>迭代</p></li><li><p>序列化</p></li><li><p>与if合用</p></li></ul><li><p>返回查询集的方法称为过滤器</p></li></ul><table data-source-line=\"195\" width=\"NaN\"><thead style=\"box-sizing: border-box;\"><tr style=\"box-sizing: border-box; background-color: rgb(255, 255, 255); border-top: 1px solid rgb(198, 203, 209);\" class=\"firstRow\"><th style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">方法</th><th style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">映射</th></tr></thead><tbody style=\"box-sizing: border-box;\"><tr style=\"box-sizing: border-box; background-color: rgb(255, 255, 255); border-top: 1px solid rgb(198, 203, 209);\"><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">select * from<name></name></td><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">模型名.objects.all()</td></tr><tr style=\"box-sizing: border-box; background-color: rgb(246, 248, 250); border-top: 1px solid rgb(198, 203, 209);\"><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">values 列表转换成字典</td><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">模型名.objects.all().values()</td></tr><tr style=\"box-sizing: border-box; background-color: rgb(255, 255, 255); border-top: 1px solid rgb(198, 203, 209);\"><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">不等于</td><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">模型名.objects.exclude(字段=条件)</td></tr><tr style=\"box-sizing: border-box; background-color: rgb(246, 248, 250); border-top: 1px solid rgb(198, 203, 209);\"><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">等于</td><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">模型名.objects.filter(字段=条件)</td></tr><tr style=\"box-sizing: border-box; background-color: rgb(255, 255, 255); border-top: 1px solid rgb(198, 203, 209);\"><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">小于</td><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">模型名.objects.filter(字段__lt=条件)</td></tr><tr style=\"box-sizing: border-box; background-color: rgb(246, 248, 250); border-top: 1px solid rgb(198, 203, 209);\"><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">小等于</td><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">模型名.objects.filter(字段__lte=条件)</td></tr><tr style=\"box-sizing: border-box; background-color: rgb(255, 255, 255); border-top: 1px solid rgb(198, 203, 209);\"><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">大于</td><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">模型名.objects.filter(字段__gt=条件)</td></tr><tr style=\"box-sizing: border-box; background-color: rgb(246, 248, 250); border-top: 1px solid rgb(198, 203, 209);\"><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">大等于</td><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">模型名.objects.filter(字段__gte=条件)</td></tr><tr style=\"box-sizing: border-box; background-color: rgb(255, 255, 255); border-top: 1px solid rgb(198, 203, 209);\"><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">降序</td><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">模型名.objects.all().order_by(&#39;-字段&#39;)</td></tr><tr style=\"box-sizing: border-box; background-color: rgb(246, 248, 250); border-top: 1px solid rgb(198, 203, 209);\"><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">升序</td><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">模型名.objects.all().order_by(&#39;字段&#39;)</td></tr><tr style=\"box-sizing: border-box; background-color: rgb(255, 255, 255); border-top: 1px solid rgb(198, 203, 209);\"><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">AND</td><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">模型名.objects.filter(字段=条件，字段=条件)</td></tr><tr style=\"box-sizing: border-box; background-color: rgb(246, 248, 250); border-top: 1px solid rgb(198, 203, 209);\"><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">OR</td><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">模型名.objects.filter(Q(字段=条件) 1 ~Q(字段=条件)) 注意：from django.db.models import Q ~代表起反</td></tr><tr style=\"box-sizing: border-box; background-color: rgb(255, 255, 255); border-top: 1px solid rgb(198, 203, 209);\"><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">in</td><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">模型名.objects.filter(字段__in=[条件])</td></tr><tr style=\"box-sizing: border-box; background-color: rgb(246, 248, 250); border-top: 1px solid rgb(198, 203, 209);\"><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">limit</td><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">模型名.objects.方法（条件）[x:]</td></tr><tr style=\"box-sizing: border-box; background-color: rgb(255, 255, 255); border-top: 1px solid rgb(198, 203, 209);\"><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">like(%a%)</td><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">模型名.objects.filter(字段__contains</td></tr><tr style=\"box-sizing: border-box; background-color: rgb(246, 248, 250); border-top: 1px solid rgb(198, 203, 209);\"><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">like(%a%)(忽略大小写)</td><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">模型名.objters.filter(字段__icontains</td></tr><tr style=\"box-sizing: border-box; background-color: rgb(255, 255, 255); border-top: 1px solid rgb(198, 203, 209);\"><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">like(a%)</td><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">模型名.objects.filter(字段__startswit</td></tr><tr style=\"box-sizing: border-box; background-color: rgb(246, 248, 250); border-top: 1px solid rgb(198, 203, 209);\"><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">like(a%)(忽略大小写)</td><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">模型名.objects.filter(字段__istartswi</td></tr><tr style=\"box-sizing: border-box; background-color: rgb(255, 255, 255); border-top: 1px solid rgb(198, 203, 209);\"><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">like(%a)</td><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">模型名.objects.filter(字段__endswith=</td></tr><tr style=\"box-sizing: border-box; background-color: rgb(246, 248, 250); border-top: 1px solid rgb(198, 203, 209);\"><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">like(%a)(忽略大小写)</td><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">模型名.objects.filter(字段__iendswith</td></tr><tr style=\"box-sizing: border-box; background-color: rgb(255, 255, 255); border-top: 1px solid rgb(198, 203, 209);\"><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">between and</td><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">模型名.objects.filter(字段__range=[条件])</td></tr><tr style=\"box-sizing: border-box; background-color: rgb(246, 248, 250); border-top: 1px solid rgb(198, 203, 209);\"><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">比较同一条数据中的不同字段</td><td style=\"box-sizing: border-box; padding: 6px 13px; border-color: rgb(223, 226, 229); word-break: break-all;\">模型名.objects.filter(字段1 条件 F(&#39;字段2&#39;)) 注意：from django.db.models import F</td></tr></tbody></table><p><br/></p>', 1, '2018-08-17 12:48:08.217539', '2018-08-18 09:25:42.612536', 0, 2);
INSERT INTO `article` VALUES (5, 'Linux常用命令', '6.jpg', 'nux是一套免费使用和自由传播的类Unix操作系统，是一个基于POSIX和UNIX的多用户、多任务、支持多线程和多CPU的操作系统。它能运行主要的UNIX工具软件、应用程序和网络协议', '<h1 data-source-line=\"1\" id=\"命令\" style=\"box-sizing: border-box; font-size: 2.25em; margin: 24px 0px 16px; line-height: 1.25; padding-bottom: 0.3em; border-bottom: 1px solid rgb(234, 236, 239); color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, 微软雅黑, &quot;PingFang SC&quot;, Helvetica, Arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, SimSun, 宋体, Heiti, 黑体, sans-serif; white-space: normal;\">命令</h1><ul data-source-line=\"2\" style=\"box-sizing: border-box; padding-left: 2em; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, 微软雅黑, &quot;PingFang SC&quot;, Helvetica, Arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\" class=\" list-paddingleft-2\"><li><p>1.1 clear 清屏</p></li><li><p>1.2 ps -ef 看进程</p></li><li><p>1.3 ps - aux 看进程</p></li><li><p>1.4 who (看登录用户)</p></li><li><p>1.5 who am i (看自己是谁（详细信息）) whoami (只看到用户名)</p></li><li><p>1.6 w (看用户详细信息)</p></li><li><p>1.7 last （最近登录用户）</p></li><li><p>1.8 whatis 【待查命令】（查看命令功能）</p></li><li><p>1.9 whereis （查看命令路径）</p></li><li><p>1.10 which (查看命令所在文件夹)</p></li><li><p>1.11 quit（） （退出命令中）</p></li><li><p>1.12 man [命令] (看手册)</p></li><li><p>1.13 命令 --help （看提示）</p></li><ul style=\"list-style-type: square;\" class=\" list-paddingleft-2\"><li><p>1.13.1 --help | grep 查找命令</p></li></ul><li><p>1.14 wget （下载 ）</p></li><li><p>1.15 pwd （打印工作目录）</p></li><li><p>1.16 cat 文件名 （查看文件）</p></li><li><p>1.17 head -行数 查看开头行数</p></li><li><p>1.17.1 tail 查看结尾行数</p></li><li><p>1.18 mkdir 名字 （创建文件夹）</p></li><li><p>1.18.1 mkdir -p 文件名/文件名 嵌套创建</p></li><li><p>1.19 init 6 / reboot 重启Linux</p></li><li><p>1.20 shutdown / init0 关机</p></li><ul style=\"list-style-type: square;\" class=\" list-paddingleft-2\"><li><p>1.20.1 shutdown -时间 定时关机</p></li><li><p>1.20.2 shutdown -c 取消关机</p></li></ul><li><p>1.21 rm 删除文件</p></li><ul style=\"list-style-type: square;\" class=\" list-paddingleft-2\"><li><p>1.21.1 rm -f 强制删除</p></li><li><p>1.21.2 rmdir 删除空文件夹</p></li><li><p>1.21.2.1 rm -r 删除文件夹（递归删除）</p></li></ul><li><p>1.22 ls (看目录下的内容)</p></li><ul style=\"list-style-type: square;\" class=\" list-paddingleft-2\"><li><p>1.22.1 ls - l [路径] 长格式</p></li><li><p>1.22.2 ls -l -a [路径] 长格式所有文件</p></li><li><p>1.22.3 .................| more 或者 less 分屏显示</p></li></ul><li><p>1.23 history</p></li><ul style=\"list-style-type: square;\" class=\" list-paddingleft-2\"><li><p>1.23.1 !数字 （执行历史记录命令）</p></li><li><p>1.23.2 history -c （清楚历史记录）</p></li></ul><li><p>1.24 cd change directory</p></li><ul style=\"list-style-type: square;\" class=\" list-paddingleft-2\"><li><p>1.24.1 cd .. 回到上级目录</p></li><li><p>1.24.2 cd （回用户主目录）</p></li></ul><li><p>1.25 touch （创建文件）</p></li><li><p>1.25.1 同名修改访问时间</p></li><li><p>1.26 file （查看文件类型）</p></li><li><p>1.27 cp 复制</p></li><li><p>1.28 mv 移动文件</p></li><li><p>1.29 find . -name “*” 找到文件</p></li><li><p>1.30 grep 搜索结果中的搜索</p></li><li><p>1.31 gzip 压缩 gunzip解压缩</p></li><li><p>1.32 tar -xvf xxxx.tar 解归档 （x归档v显示f 显示文件名）</p></li><li><p>1.33 xz -dvf 解压缩 xz -zvf 压缩</p></li><li><p>1.34 alias 重命名 =‘命令’</p></li><li><p>1.35 unalias 重命名 取消重命名</p></li><li><p>1.36 syntax on 高亮语法</p></li><li><p>1.37 set nu 开启行号</p></li><li><p>1.38 chmod u 文件名 修改文件权限（u自己,g同组,o其他）权限之间用,来分隔设置</p></li><li><p>1.39 ln -s 路径 名字 （快捷方式）（linux下叫做软连接或者符号连接）</p></li><li><p>1.40 ln -s /root/code/share_fish.py /usr/bin/sf 创建到bin下就可以直接运行</p></li><li><p>1.41 ln /root/code/share_fish.py /usr/bin/sf 硬连接（添加引用）</p></li><li><p>1.42 cat /etc/centos-release</p></li><li><p>1.43 sort 排序</p></li><li><p>1.44 uniq 去重</p></li><li><p>1.45 》 输出重定向</p></li><li><p>1.46 》》追加输出重定向</p></li><li><p>1.47 2》error。txt 错误信息重定向</p></li><li><p>1.48 echo 输出</p></li><li><p>1.49 cal 日期</p></li><li><p>1.50 《输入重定向</p></li><li><p>1.51 diff 比较不同</p></li><li><p>1.52 vim -d 文件 文件 文件 比较不同</p></li><ul style=\"list-style-type: square;\" class=\" list-paddingleft-2\"><li><p>1.52.1 clat + w换窗口</p></li></ul><li><p>1.53 vim 文件 文件 文件 （同时开启多个）</p></li><ul style=\"list-style-type: square;\" class=\" list-paddingleft-2\"><li><p>1.53.1 ：ls (看排序)：b 编号（换到对应文件） ：sp(水平拆分) ：vs（）</p></li></ul><li><p>1.54 paste 文件 文件</p></li><li><p>1.54.1 文件行合并</p></li><li><p>1.55 source .bash_profile (执行配置文件)</p></li><li><p>1.56 python3 -m pip install -U pip</p></li><li><p>1.57 yum search (查找)</p></li><li><p>1.58 yum install 名字 （安装）</p></li><li><p>1.59 xargs 将前一个命令的输出作为下一个命令的参数</p></li><li><p>1.60 systemtcl start mysqld</p></li><li><p>1.61 systemtcl stop mysqld</p></li><li><p>1.62 systemtcl restart mysqld</p></li><li><p>1.63 systemctl status mysql</p></li><li><p>1.64 systemtcl enable mysqld (开机自启)</p></li><li><p>1.65 systemtcl disable mysqld （关闭开机自启）</p></li><li><p>1.66 ps -ef | grep mysql | grep -v grep</p></li><li><p>1.67 kill 进程号</p></li><li><p>1.68 kill -9 进程号</p></li><li><p>1.69 netstat -nap</p></li><ul style=\"list-style-type: square;\" class=\" list-paddingleft-2\"><li><p>1.69.1 mysql 在3306端口</p></li></ul><li><p>1.70 systemctl start firewalld (开启防火墙)</p></li><li><p>1.71 firewall-cmd --add-port=80/tcp--permanent （配置防火墙）</p></li><li><p>1.72 ifconfig / ip address (看IP地址)</p></li><li><p>1.73 程序 &amp;后台运行</p></li><li><p>1.74 top （看任务管理器）</p></li><li><p>1.75 sar (看cpu性能)</p></li><li><p>1.76 free (看内存分配)</p></li><li><p>1.77 vim /etc/my.cnf</p></li><li><p>1.78 crontab -e - 1.78.1 分钟小时日月周</p></li><li><p>1.79 skip-grant-tables</p></li><li><p>1.80 flush privileges;</p></li><li><p>1.81 alter user root@&#39;localhost&#39; identified by &#39;oppo123&#39;;</p></li><ul style=\"list-style-type: square;\" class=\" list-paddingleft-2\"><li><p>1.82 子主题 80</p></li></ul></ul><h1 data-source-line=\"105\" id=\"基础知识\" style=\"box-sizing: border-box; font-size: 2.25em; margin: 24px 0px 16px; line-height: 1.25; padding-bottom: 0.3em; border-bottom: 1px solid rgb(234, 236, 239); color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, 微软雅黑, &quot;PingFang SC&quot;, Helvetica, Arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, SimSun, 宋体, Heiti, 黑体, sans-serif; white-space: normal;\"><a class=\"markdownIt-Anchor\" href=\"file:///C:/Users/Administrator/AppData/Local/Youdao/YNote/markdown/index.html#%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86\" style=\"box-sizing: border-box; color: rgb(3, 102, 214); text-decoration-line: none;\"></a>基础知识</h1><ul data-source-line=\"106\" style=\"box-sizing: border-box; padding-left: 2em; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, 微软雅黑, &quot;PingFang SC&quot;, Helvetica, Arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\" class=\" list-paddingleft-2\"><li><p>命令 【参数....】 【目标....】</p></li><li><p>centos中的Python是 2.7.5</p></li><li><p>shell ----交换式环境（本身也是一个程序）</p></li><li><p>bash -- bourne again shell (默认)</p></li><li><p>.开头的文件是隐藏文件</p></li></ul><h1 data-source-line=\"112\" id=\"vim\" style=\"box-sizing: border-box; font-size: 2.25em; margin: 24px 0px 16px; line-height: 1.25; padding-bottom: 0.3em; border-bottom: 1px solid rgb(234, 236, 239); color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, 微软雅黑, &quot;PingFang SC&quot;, Helvetica, Arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, SimSun, 宋体, Heiti, 黑体, sans-serif; white-space: normal;\"><a class=\"markdownIt-Anchor\" href=\"file:///C:/Users/Administrator/AppData/Local/Youdao/YNote/markdown/index.html#vim\" style=\"box-sizing: border-box; color: rgb(3, 102, 214); text-decoration-line: none;\"></a>vim</h1><ul data-source-line=\"113\" style=\"box-sizing: border-box; padding-left: 2em; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, 微软雅黑, &quot;PingFang SC&quot;, Helvetica, Arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\" class=\" list-paddingleft-2\"><li><p>9.1 i键进入编辑模式</p></li><li><p>9.2 esc 进入命令模式</p></li><ul style=\"list-style-type: square;\" class=\" list-paddingleft-2\"><li><p>9.2.1 wq 保存退出</p></li><li><p>9.2.2 set nu 卡启行数显示</p></li><li><p>9.2.3 ：recover 恢复临时文件</p></li><li><p>9.2.3.1 临时文件.swp</p></li></ul><li><p>9.3 &lt;Ctrl+f&gt; 视窗往下卷一页。</p></li><ul style=\"list-style-type: square;\" class=\" list-paddingleft-2\"><li><p>&lt;Ctrl+b&gt; 视窗往上卷一页。</p></li><li><p>&lt;Ctrl+d&gt; 视窗往下卷半页。</p></li><li><p>&lt;Ctrl+u&gt; 视窗往上卷半页。</p></li><li><p>&lt;Ctrl+e&gt; 视窗往下卷一行。</p></li><li><p>&lt;Ctrl+y&gt; 视窗往上卷一行。</p></li></ul><li><p>9.4 set nu set ts=4 syntanx on set ruler</p></li></ul><h1 data-source-line=\"126\" id=\"linux-安装软件\" style=\"box-sizing: border-box; font-size: 2.25em; margin: 24px 0px 16px; line-height: 1.25; padding-bottom: 0.3em; border-bottom: 1px solid rgb(234, 236, 239); color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, 微软雅黑, &quot;PingFang SC&quot;, Helvetica, Arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, SimSun, 宋体, Heiti, 黑体, sans-serif; white-space: normal;\"><a class=\"markdownIt-Anchor\" href=\"file:///C:/Users/Administrator/AppData/Local/Youdao/YNote/markdown/index.html#linux-%E5%AE%89%E8%A3%85%E8%BD%AF%E4%BB%B6\" style=\"box-sizing: border-box; color: rgb(3, 102, 214); text-decoration-line: none;\"></a>linux 安装软件</h1><ul data-source-line=\"127\" style=\"box-sizing: border-box; padding-left: 2em; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, 微软雅黑, &quot;PingFang SC&quot;, Helvetica, Arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\" class=\" list-paddingleft-2\"><li><p>10.1 yum 包管理工具</p></li><ul style=\"list-style-type: square;\" class=\" list-paddingleft-2\"><li><p>10.1.1 yum install 包名</p></li><li><p>10.1.2 yum info 包名</p></li><li><p>10.1.3 yum list installed</p></li><li><p>10.1.4 yum search</p></li><li><p>10.1.5 yum remove</p></li></ul><li><p>10.2 rpm</p></li><ul style=\"list-style-type: square;\" class=\" list-paddingleft-2\"><li><p>10.2.1 - rpm -ivh &lt;rpm-file-name&gt;</p></li><li><p>10.2.2 - rpm -e &lt;rpm-file-namw&gt;</p></li><li><p>10.2.3 - rpm -qa</p></li></ul></ul><h1 data-source-line=\"137\" id=\"端口\" style=\"box-sizing: border-box; font-size: 2.25em; margin: 24px 0px 16px; line-height: 1.25; padding-bottom: 0.3em; border-bottom: 1px solid rgb(234, 236, 239); color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, 微软雅黑, &quot;PingFang SC&quot;, Helvetica, Arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, SimSun, 宋体, Heiti, 黑体, sans-serif; white-space: normal;\"><a class=\"markdownIt-Anchor\" href=\"file:///C:/Users/Administrator/AppData/Local/Youdao/YNote/markdown/index.html#%E7%AB%AF%E5%8F%A3\" style=\"box-sizing: border-box; color: rgb(3, 102, 214); text-decoration-line: none;\"></a>端口</h1><ul data-source-line=\"138\" style=\"box-sizing: border-box; padding-left: 2em; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, 微软雅黑, &quot;PingFang SC&quot;, Helvetica, Arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\" class=\" list-paddingleft-2\"><li><p>1 端口是对IP的扩展</p></li><li><p>2 80http</p></li><li><p>3 MySQL 3306（默认）</p></li><li><p>4 443 https</p></li></ul><h1 data-source-line=\"142\" id=\"零散知识点\" style=\"box-sizing: border-box; font-size: 2.25em; margin: 24px 0px 16px; line-height: 1.25; padding-bottom: 0.3em; border-bottom: 1px solid rgb(234, 236, 239); color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, 微软雅黑, &quot;PingFang SC&quot;, Helvetica, Arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, SimSun, 宋体, Heiti, 黑体, sans-serif; white-space: normal;\"><a class=\"markdownIt-Anchor\" href=\"file:///C:/Users/Administrator/AppData/Local/Youdao/YNote/markdown/index.html#%E9%9B%B6%E6%95%A3%E7%9F%A5%E8%AF%86%E7%82%B9\" style=\"box-sizing: border-box; color: rgb(3, 102, 214); text-decoration-line: none;\"></a>零散知识点</h1><ul data-source-line=\"143\" style=\"box-sizing: border-box; padding-left: 2em; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, 微软雅黑, &quot;PingFang SC&quot;, Helvetica, Arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\" class=\" list-paddingleft-2\"><li><p>摩尔尔定律 安迪比尔定律 反摩尔定律</p></li><li><p>计算机 --&gt; 硬件 + 软件 运算器+控制器+存储器+I/O设备</p></li><li><p>系统软件+应用软件</p></li><li><p>操作系统 --&gt; 管理硬件+提供人机界面</p></li><li><p>Unix --&gt; MiniX --&gt; Linux CentOS / Redhat / Ubuntu / SUSELinux</p></li><li><p>SSH客户端 --&gt; XShell --&gt; Aliyun Shell --&gt; bash 常用命令:</p></li><li><p><br/></p></li><ol style=\"list-style-type: lower-roman;\" class=\" list-paddingleft-2\"><li><p>who / w / last</p></li></ol><li><p><br/></p></li><ol start=\"2\" style=\"list-style-type: lower-roman;\" class=\" list-paddingleft-2\"><li><p>adduser / passwd</p></li></ol><li><p><br/></p></li><ol start=\"3\" style=\"list-style-type: lower-roman;\" class=\" list-paddingleft-2\"><li><p>logout / exit</p></li></ol><li><p><br/></p></li><ol start=\"4\" style=\"list-style-type: lower-roman;\" class=\" list-paddingleft-2\"><li><p>reboot / init 6</p></li></ol><li><p><br/></p></li><ol start=\"5\" style=\"list-style-type: lower-roman;\" class=\" list-paddingleft-2\"><li><p>shutdown / init 0</p></li></ol><li><p><br/></p></li><ol start=\"6\" style=\"list-style-type: lower-roman;\" class=\" list-paddingleft-2\"><li><p>man / info / --help</p></li></ol><li><p><br/></p></li><ol start=\"7\" style=\"list-style-type: lower-roman;\" class=\" list-paddingleft-2\"><li><p>ps - processes</p></li></ol><li><p><br/></p></li><ol start=\"8\" style=\"list-style-type: lower-roman;\" class=\" list-paddingleft-2\"><li><p>clear</p></li></ol><li><p><br/></p></li><ol start=\"9\" style=\"list-style-type: lower-roman;\" class=\" list-paddingleft-2\"><li><p>history</p></li></ol><li><p><br/></p></li><ol start=\"10\" style=\"list-style-type: lower-roman;\" class=\" list-paddingleft-2\"><li><p>whatis / whereis / which 文件操作相关命令</p></li></ol><li><p><br/></p></li><ol style=\"list-style-type: lower-roman;\" class=\" list-paddingleft-2\"><li><p>pwd - print working directory</p></li></ol><li><p><br/></p></li><ol start=\"2\" style=\"list-style-type: lower-roman;\" class=\" list-paddingleft-2\"><li><p>cd - change directory</p></li></ol><li><p><br/></p></li><ol start=\"3\" style=\"list-style-type: lower-roman;\" class=\" list-paddingleft-2\"><li><p>ls - list directory contents -l: long format -a: all</p></li></ol><li><p><br/></p></li><ol start=\"4\" style=\"list-style-type: lower-roman;\" class=\" list-paddingleft-2\"><li><p>touch</p></li></ol><li><p><br/></p></li><ol start=\"5\" style=\"list-style-type: lower-roman;\" class=\" list-paddingleft-2\"><li><p>rm - remove -f: force -r: recursive -i: interactive</p></li></ol><li><p><br/></p></li><ol start=\"6\" style=\"list-style-type: lower-roman;\" class=\" list-paddingleft-2\"><li><p>mkdir - make directory -p: parents</p></li></ol><li><p><br/></p></li><ol start=\"7\" style=\"list-style-type: lower-roman;\" class=\" list-paddingleft-2\"><li><p>rmdir - remove empty directory</p></li></ol><li><p><br/></p></li><ol start=\"8\" style=\"list-style-type: lower-roman;\" class=\" list-paddingleft-2\"><li><p>cat - concatenate -n: numbers</p></li></ol><li><p><br/></p></li><ol start=\"9\" style=\"list-style-type: lower-roman;\" class=\" list-paddingleft-2\"><li><p>head / tail</p></li></ol><li><p><br/></p></li><ol start=\"10\" style=\"list-style-type: lower-roman;\" class=\" list-paddingleft-2\"><li><p>more / less</p></li></ol><li><p><br/></p></li><ol start=\"11\" style=\"list-style-type: lower-roman;\" class=\" list-paddingleft-2\"><li><p>wc - word count -l: lines -w: words -c: characters</p></li></ol><li><p><br/></p></li><ol start=\"12\" style=\"list-style-type: lower-roman;\" class=\" list-paddingleft-2\"><li><p>file</p></li></ol><li><p><br/></p></li><ol start=\"13\" style=\"list-style-type: lower-roman;\" class=\" list-paddingleft-2\"><li><p>cp - copy</p></li></ol><li><p><br/></p></li><ol start=\"14\" style=\"list-style-type: lower-roman;\" class=\" list-paddingleft-2\"><li><p>mv - move</p></li></ol><li><p><br/></p></li><ol start=\"15\" style=\"list-style-type: lower-roman;\" class=\" list-paddingleft-2\"><li><p>gzip / gunzip</p></li></ol><li><p><br/></p></li><ol start=\"16\" style=\"list-style-type: lower-roman;\" class=\" list-paddingleft-2\"><li><p>xz -d: decompress -z: compress</p></li></ol><li><p><br/></p></li><ol start=\"17\" style=\"list-style-type: lower-roman;\" class=\" list-paddingleft-2\"><li><p>tar - archive -c: create -x: extract -v: verbose -f: filename</p></li></ol><li><p>改变文件的访问权限 - chmod</p></li><li><p>创建链接 - ln - 硬链接 - 符号链接(软链接)</p></li><li><p>文本编辑神器 - vi/vim - 命令模式、 编辑模式、末行模式</p></li><li><p>lighthttpd/Apache/Nginx(负载均衡，反向代理) # web服务器</p></li><li><p>1 nginx</p></li><ul style=\"list-style-type: square;\" class=\" list-paddingleft-2\"><li><p>1.4.1 get 下载</p></li><li><p>1.4.2 put 上传</p></li><li><p>1.4.3 lls 本地</p></li><li><p>1.1 nginx - s stop</p></li><li><p>1.2 nginx -s reload</p></li><li><p>1.3 nginx 开启 （重复开启报错80端口被占用）</p></li><li><p>1.4 sftp</p></li></ul><li><p>2 firealld 防火墙</p></li><li><p>3 daemon 守护线程（主线程结束，该线程结束） -#安装软件</p></li><li><p>yum - 包管理工具 yum search gcc -</p></li><li><p>查找 yum install gcc -</p></li><li><p>安装 yum reomve gcc -</p></li><li><p>卸载 yum list installed | grep gcc yum info gcc - - 信息</p></li></ul><h2 data-source-line=\"195\" id=\"centos安装python3k步骤\" style=\"box-sizing: border-box; margin-top: 24px; margin-bottom: 16px; font-size: 1.75em; line-height: 1.25; padding-bottom: 0.3em; border-bottom: 1px solid rgb(234, 236, 239); color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, 微软雅黑, &quot;PingFang SC&quot;, Helvetica, Arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, SimSun, 宋体, Heiti, 黑体, sans-serif; white-space: normal;\"><a class=\"markdownIt-Anchor\" href=\"file:///C:/Users/Administrator/AppData/Local/Youdao/YNote/markdown/index.html#centos%E5%AE%89%E8%A3%85python3k%E6%AD%A5%E9%AA%A4\" style=\"box-sizing: border-box; color: rgb(3, 102, 214); text-decoration-line: none;\"></a>CentOS安装Python3k步骤:</h2><ul data-source-line=\"196\" style=\"box-sizing: border-box; padding-left: 2em; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, 微软雅黑, &quot;PingFang SC&quot;, Helvetica, Arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\" class=\" list-paddingleft-2\"><li><p><br/></p></li><ul style=\"list-style-type: square;\" class=\" list-paddingleft-2\"><li><p>安装GCC及依赖库：yum -y install gcc zlib-devel bzip2-devel openssl-devel ncurses-devel sqlite-devel readline-devel tk-devel gdbm-devel db4-devel libpcap-devel xz-devel</p></li></ul><ol style=\"list-style-type: lower-roman;\" class=\" list-paddingleft-2\"><li><p><br/></p></li></ol><li><p><br/></p></li><ul style=\"list-style-type: square;\" class=\" list-paddingleft-2\"><li><p>从官方网站下载Python源代码：wget<span class=\"Apple-converted-space\">&nbsp;</span><a href=\"https://www.python.org/ftp/python/3.6.5/Python-3.6.5.tar.xz\" target=\"_blank\" style=\"box-sizing: border-box; color: rgb(3, 102, 214); text-decoration-line: none;\">https://www.python.org/ftp/python/3.6.5/Python-3.6.5.tar.xz</a></p></li></ul><ol start=\"2\" style=\"list-style-type: lower-roman;\" class=\" list-paddingleft-2\"><li><p><br/></p></li></ol><li><p><br/></p></li><ol start=\"3\" style=\"list-style-type: lower-roman;\" class=\" list-paddingleft-2\"><li><p>解压缩：xz -d Python-3.6.5.tar.xz</p></li></ol><li><p><br/></p></li><ol start=\"4\" style=\"list-style-type: lower-roman;\" class=\" list-paddingleft-2\"><li><p>解归档：tar -xvf Python-3.6.5.tar</p></li></ol><li><p><br/></p></li><ul style=\"list-style-type: square;\" class=\" list-paddingleft-2\"><li><p>cd Python-3.6.5 ./configure --prefix=/usr/local/python36/ --enable-optimizations</p></li></ul><ol start=\"5\" style=\"list-style-type: lower-roman;\" class=\" list-paddingleft-2\"><li><p>配置安装信息(生成构建文件Makefile)：</p></li></ol><li><p><br/></p></li><ol start=\"6\" style=\"list-style-type: lower-roman;\" class=\" list-paddingleft-2\"><li><p>执行构建和安装：make &amp;&amp; make install</p></li></ol><li><p><br/></p></li><ol start=\"7\" style=\"list-style-type: lower-roman;\" class=\" list-paddingleft-2\"><li><p>配置PATH环境变量： cd ~ vim .bash_profile PATH=$PATH:/usr/local/python36/bin source .bash_profile echo $PATH</p></li></ol><li><p><br/></p></li><ol start=\"8\" style=\"list-style-type: lower-roman;\" class=\" list-paddingleft-2\"><li><p>创建符号链接： ln -s /usr/local/python36/bin/python3 /usr/bin/python3</p></li></ol></ul><h1 data-source-line=\"205\" id=\"linux安装软件的方式\" style=\"box-sizing: border-box; font-size: 2.25em; margin: 24px 0px 16px; line-height: 1.25; padding-bottom: 0.3em; border-bottom: 1px solid rgb(234, 236, 239); color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, 微软雅黑, &quot;PingFang SC&quot;, Helvetica, Arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, SimSun, 宋体, Heiti, 黑体, sans-serif; white-space: normal;\"><a class=\"markdownIt-Anchor\" href=\"file:///C:/Users/Administrator/AppData/Local/Youdao/YNote/markdown/index.html#linux%E5%AE%89%E8%A3%85%E8%BD%AF%E4%BB%B6%E7%9A%84%E6%96%B9%E5%BC%8F\" style=\"box-sizing: border-box; color: rgb(3, 102, 214); text-decoration-line: none;\"></a>Linux安装软件的方式：</h1><ul data-source-line=\"206\" style=\"box-sizing: border-box; padding-left: 2em; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, 微软雅黑, &quot;PingFang SC&quot;, Helvetica, Arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\" class=\" list-paddingleft-2\"><li><p>1.包管理工具</p></li><ul style=\"list-style-type: square;\" class=\" list-paddingleft-2\"><li><p>yum: - yum install -</p></li><li><p>yum remove - yum search -</p></li><li><p>yum list installed -</p></li><li><p>yum info rpm - redhat package manager -</p></li><li><p>rpm -ivh &lt;rpm-file-name&gt; -</p></li><li><p>rpm -e &lt;rpm-file-name&gt; -</p></li><li><p>rpm -qa</p></li></ul></ul><ol data-source-line=\"214\" start=\"2\" style=\"box-sizing: border-box; padding-left: 2em; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, 微软雅黑, &quot;PingFang SC&quot;, Helvetica, Arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\" class=\" list-paddingleft-2\"><li><p>二进制安装程序</p></li><li><p>下载解压解归档免安装 - 通常需要配置环境变量才能使用 4. 源代码构建安装 - make &amp;&amp; make install</p></li></ol><h1 data-source-line=\"216\" id=\"mysql官方下载地址\" style=\"box-sizing: border-box; font-size: 2.25em; margin: 24px 0px 16px; line-height: 1.25; padding-bottom: 0.3em; border-bottom: 1px solid rgb(234, 236, 239); color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, 微软雅黑, &quot;PingFang SC&quot;, Helvetica, Arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, SimSun, 宋体, Heiti, 黑体, sans-serif; white-space: normal;\"><a class=\"markdownIt-Anchor\" href=\"file:///C:/Users/Administrator/AppData/Local/Youdao/YNote/markdown/index.html#mysql%E5%AE%98%E6%96%B9%E4%B8%8B%E8%BD%BD%E5%9C%B0%E5%9D%80\" style=\"box-sizing: border-box; color: rgb(3, 102, 214); text-decoration-line: none;\"></a>MySQL官方下载地址：</h1><ul data-source-line=\"217\" style=\"box-sizing: border-box; padding-left: 2em; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, 微软雅黑, &quot;PingFang SC&quot;, Helvetica, Arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\" class=\" list-paddingleft-2\"><li><p style=\"box-sizing: border-box; margin-top: 16px; margin-bottom: 16px;\"><a href=\"https://dev.mysql.com/get/Downloads/MySQL-5.7/mysql-community-server-5.7.22-1.el7.x86_64.rpm\" target=\"_blank\" style=\"box-sizing: border-box; color: rgb(3, 102, 214); text-decoration-line: none;\">https://dev.mysql.com/get/Downloads/MySQL-5.7/mysql-community-server-5.7.22-1.el7.x86_64.rpm</a></p></li><li><p style=\"box-sizing: border-box; margin-top: 16px; margin-bottom: 16px;\"><a href=\"https://dev.mysql.com/get/Downloads/MySQL-5.7/mysql-community-client-5.7.22-1.el7.x86_64.rpm\" target=\"_blank\" style=\"box-sizing: border-box; color: rgb(3, 102, 214); text-decoration-line: none;\">https://dev.mysql.com/get/Downloads/MySQL-5.7/mysql-community-client-5.7.22-1.el7.x86_64.rpm</a></p></li><li><p style=\"box-sizing: border-box; margin-top: 16px; margin-bottom: 16px;\"><a href=\"https://dev.mysql.com/get/Downloads/MySQL-5.7/mysql-community-common-5.7.22-1.el7.x86_64.rpm\" target=\"_blank\" style=\"box-sizing: border-box; color: rgb(3, 102, 214); text-decoration-line: none;\">https://dev.mysql.com/get/Downloads/MySQL-5.7/mysql-community-common-5.7.22-1.el7.x86_64.rpm</a></p></li><li><p style=\"box-sizing: border-box; margin-top: 16px; margin-bottom: 16px;\"><a href=\"https://dev.mysql.com/get/Downloads/MySQL-5.7/mysql-community-libs-5.7.22-1.el7.x86_64.r\" target=\"_blank\" style=\"box-sizing: border-box; color: rgb(3, 102, 214); text-decoration-line: none;\">https://dev.mysql.com/get/Downloads/MySQL-5.7/mysql-community-libs-5.7.22-1.el7.x86_64.r</a><span class=\"Apple-converted-space\">&nbsp;</span>pm</p></li><li><p style=\"box-sizing: border-box; margin-top: 16px; margin-bottom: 16px;\">安装前先用yum安装libaio，卸载mariadb-libs 可以把这几个文件下载到一个单独的目录下然后再用 ls | xargs rpm -ivh 这样就可以1条命令把这四个文件都安装上</p></li><li><p style=\"box-sizing: border-box; margin-top: 16px; margin-bottom: 16px;\">tcp</p></li><ul style=\"list-style-type: square;\" class=\" list-paddingleft-2\"><li><p>1 不传错，不传丢</p></li><li><p>2 流量控制（匹配双方的速度）</p></li><li><p>3 防止阻塞（对方返回码速度变慢就将速度降低）</p></li></ul></ul><p><br/></p>', 1, '2018-08-17 12:50:04.439186', '2018-08-17 12:50:04.439186', 0, 4);
INSERT INTO `article` VALUES (6, '关系型数据库MySQL', '7_GRQHvzW.jpg', 'MySQL是一种关系数据库管理系统，关系数据库将数据保存在不同的表中，而不是将所有数据放在一个大仓库内，这样就增加了速度并提高了灵活性。', '<h2 data-source-line=\"1\" id=\"关系型数据库\" style=\"box-sizing: border-box; margin-top: 24px; margin-bottom: 16px; font-size: 1.75em; line-height: 1.25; padding-bottom: 0.3em; border-bottom: 1px solid rgb(234, 236, 239); color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, 微软雅黑, &quot;PingFang SC&quot;, Helvetica, Arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, SimSun, 宋体, Heiti, 黑体, sans-serif; white-space: normal;\">关系型数据库</h2><p data-source-line=\"3\" style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, 微软雅黑, &quot;PingFang SC&quot;, Helvetica, Arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">MySQL</p><ul data-source-line=\"5\" style=\"box-sizing: border-box; padding-left: 2em; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, 微软雅黑, &quot;PingFang SC&quot;, Helvetica, Arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\" class=\" list-paddingleft-2\"><li><p style=\"box-sizing: border-box; margin-top: 16px; margin-bottom: 16px;\">理论基础 : 关系代数 + 集合论</p></li><li><p style=\"box-sizing: border-box; margin-top: 16px; margin-bottom: 16px;\">特点</p></li><ul style=\"list-style-type: square;\" class=\" list-paddingleft-2\"><li><p>用二维表组织数据</p></li><li><p>行 - 记录</p></li><li><p>列 - 字段</p></li><li><p>主键 - 唯一性确定一条记列</p></li><li><p>方便CRUD操作(增删改查)</p></li><li><p>能够避免重复无效的数据</p></li><li><p>一读对N，在多的一方添加外键、N对M转换成为N对一和一对M在中间表添加2个外键</p></li></ul><li><p style=\"box-sizing: border-box; margin-top: 16px; margin-bottom: 16px;\">MySQL语法</p><pre data-source-line=\"19\" style=\"box-sizing: border-box; font-family: SFMono-Regular, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; font-size: 11.9px; margin-top: 0px; margin-bottom: 16px; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; line-height: 1.45; word-wrap: normal; padding: 16px; overflow: auto; background-color: rgb(246, 248, 250); border-radius: 3px;\">--&nbsp;sql(structed&nbsp;query&nbsp;language)&nbsp;(结构查询语言)\r\n--&nbsp;DDL（data&nbsp;definition&nbsp;languagr）&nbsp;(数据定义语言)\r\n--&nbsp;create&nbsp;、drop&nbsp;、&nbsp;alter\r\n--&nbsp;DML(data&nbsp;mainipulation&nbsp;language)&nbsp;(数据操作语言)\r\n--&nbsp;insert&nbsp;&nbsp;、&nbsp;delete&nbsp;&nbsp;、&nbsp;update\r\n--&nbsp;DQL(data&nbsp;query&nbsp;language)&nbsp;(数据查询语言)\r\n--&nbsp;select&nbsp;\r\n--&nbsp;DCL(data&nbsp;control&nbsp;language)&nbsp;(数据控制语言)\r\n--&nbsp;grant&nbsp;&nbsp;、&nbsp;revoke&nbsp;&nbsp;&nbsp;(授权、权限召回)</pre><pre data-source-line=\"31\" style=\"box-sizing: border-box; font-family: SFMono-Regular, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; font-size: 11.9px; margin-top: 0px; margin-bottom: 16px; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; line-height: 1.45; word-wrap: normal; padding: 16px; overflow: auto; background-color: rgb(246, 248, 250); border-radius: 3px;\">--&nbsp;删除数据库drop&nbsp;database&nbsp;if&nbsp;exists&nbsp;&lt;name&gt;&nbsp;;\r\n--&nbsp;创建数据库并指定字符集creat&nbsp;database&nbsp;&lt;name&gt;&nbsp;default&nbsp;chaeset&nbsp;utf8;\r\n--&nbsp;切换数据库use&nbsp;&lt;name&gt;\r\n--&nbsp;建表create&nbsp;table&nbsp;&lt;name&gt;(\r\n&lt;name&gt;id&nbsp;int&nbsp;not&nbsp;null&nbsp;comment&nbsp;&#39;&#39;,\r\n&nbsp;--&nbsp;数据(字段),\r\nprimary&nbsp;key&nbsp;(&lt;name&gt;id)\r\n--&nbsp;插入数据insert&nbsp;into&nbsp;表名&nbsp;(字段)&nbsp;&nbsp;values()\r\n--&nbsp;删除数据delete&nbsp;from&nbsp;表名&nbsp;where&nbsp;条件\r\n--&nbsp;更新数据库update&nbsp;表名&nbsp;set&nbsp;字段=&#39;&#39;,字段=&#39;&#39;&nbsp;where&nbsp;条件</pre></li><li><pre data-source-line=\"31\" style=\"box-sizing: border-box; font-family: SFMono-Regular, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; font-size: 11.9px; margin-top: 0px; margin-bottom: 16px; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; line-height: 1.45; word-wrap: normal; padding: 16px; overflow: auto; background-color: rgb(246, 248, 250); border-radius: 3px;\">--&nbsp;添加唯一约束alter&nbsp;table&nbsp;&lt;name&gt;&nbsp;add&nbsp;constraint&nbsp;uni_字段&nbsp;unique(字段)\r\n--&nbsp;添加外键alter&nbsp;table&nbsp;&lt;name&gt;&nbsp;add&nbsp;constraint&nbsp;fk_字段&nbsp;foreign&nbsp;key(字段)&nbsp;references&nbsp;&lt;name&gt;(字段)&nbsp;\r\n--&nbsp;添加主键alter&nbsp;table&nbsp;&lt;name&gt;&nbsp;add&nbsp;constraint&nbsp;pk_字段&nbsp;primary&nbsp;key(字段)\r\n--&nbsp;添加列alter&nbsp;table&nbsp;表名&nbsp;add&nbsp;column&nbsp;字段&nbsp;类型--&nbsp;删除列alter&nbsp;table&nbsp;表名&nbsp;drop&nbsp;column&nbsp;字段--&nbsp;查询所有信息select&nbsp;*&nbsp;&nbsp;from&nbsp;表名--&nbsp;笛卡尔积select&nbsp;*&nbsp;from&nbsp;表1，表2\r\n--&nbsp;投影select&nbsp;字段&nbsp;表名--&nbsp;别名&nbsp;(as可以省略不写)\r\nselect&nbsp;字段&nbsp;as&nbsp;新名字&nbsp;from&nbsp;表名--&nbsp;筛选select&nbsp;*&nbsp;from&nbsp;表名&nbsp;where&nbsp;条件--&nbsp;多条件筛选select&nbsp;*&nbsp;from&nbsp;表名&nbsp;where&nbsp;条件&nbsp;and&nbsp;条件--&nbsp;筛选出现范围(第一种中是闭区间)\r\nselect&nbsp;*&nbsp;from&nbsp;表名&nbsp;where&nbsp;between&nbsp;条件(小)&nbsp;and&nbsp;条件(大)\r\nselect&nbsp;*&nbsp;from&nbsp;表名&nbsp;where&nbsp;条件(小)&lt;=字段&nbsp;and&nbsp;字段&lt;=条件(大)\r\n--&nbsp;模糊查询(%通配符)\r\nselect&nbsp;*&nbsp;from&nbsp;表名&nbsp;where&nbsp;字段=%已知%\r\n--&nbsp;模糊查询(_指定数量的通配符)\r\nselect&nbsp;*&nbsp;from&nbsp;表名&nbsp;where&nbsp;字段=已知_\r\n--&nbsp;查询null&nbsp;或&nbsp;除null外select&nbsp;*&nbsp;from&nbsp;表名&nbsp;where&nbsp;字段&nbsp;is&nbsp;null\r\nselect&nbsp;*&nbsp;from&nbsp;表名&nbsp;where&nbsp;字段&nbsp;not&nbsp;is&nbsp;null\r\n--&nbsp;查询中出现null(当这条信息的该字段为null时查出来就是0)\r\nselect&nbsp;ifnull(字段,0)&nbsp;from&nbsp;表名&nbsp;where&nbsp;条件--&nbsp;分组select&nbsp;*&nbsp;from&nbsp;表名&nbsp;group&nbsp;by&nbsp;字段&nbsp;--&nbsp;排序(默认asc)\r\nselect&nbsp;*&nbsp;from&nbsp;表名&nbsp;order&nbsp;by&nbsp;字段&nbsp;&nbsp;desc\r\n--&nbsp;分组后返回排序中的一段(x:要返回的个数&nbsp;y:从第一个跳过的距离)(排序时一样的并不是并列而是有先后的)\r\nselect&nbsp;*&nbsp;from&nbsp;表名&nbsp;order&nbsp;by&nbsp;字段&nbsp;desc&nbsp;limit&nbsp;x,y\r\n--&nbsp;分组、排序后进行查询select&nbsp;*&nbsp;from&nbsp;表名&nbsp;group&nbsp;by&nbsp;having&nbsp;条件select&nbsp;*&nbsp;from&nbsp;表名&nbsp;order&nbsp;by&nbsp;having&nbsp;条件--&nbsp;聚合函数(sum&nbsp;、max&nbsp;、min&nbsp;、avg&nbsp;、count等)\r\nselect&nbsp;函数(字段)&nbsp;from&nbsp;表名&nbsp;--&nbsp;连接查询(第一种又叫做内连接、&nbsp;&nbsp;inner&nbsp;join连接时不连接null,left&nbsp;join可以连接前面的null,right&nbsp;join可以连接后面的null,)\r\nselect&nbsp;表1.字段&nbsp;表2.字段&nbsp;from&nbsp;表1,&nbsp;表2&nbsp;where&nbsp;连接条件select&nbsp;表1.字段&nbsp;表2.字段&nbsp;from&nbsp;表1&nbsp;inner&nbsp;join&nbsp;(查询&nbsp;、&nbsp;筛选等操作&nbsp;)&nbsp;as&nbsp;表2&nbsp;on&nbsp;连接条件--&nbsp;子查询(一般用在2表之间的查询)\r\nselect&nbsp;字段1&nbsp;from&nbsp;表名&nbsp;where&nbsp;字段2=(\r\nselect&nbsp;字段2&nbsp;from&nbsp;表名2&nbsp;where&nbsp;条件)\r\n--&nbsp;指定数字精度函数(x:总位数&nbsp;y:小数位数)\r\ndecimal(x,&nbsp;y)&nbsp;\r\n--&nbsp;去重函数distinct\r\n--&nbsp;创建用户并指定密码create&nbsp;user&nbsp;&#39;用户名&#39;@&#39;%&#39;&nbsp;identified&nbsp;by&nbsp;&#39;密码&#39;\r\ngrant&nbsp;all&nbsp;privileges&nbsp;on&nbsp;数据库名.表名&nbsp;to&nbsp;&#39;用户名&#39;@&#39;%&#39;&nbsp;\r\nrevoke&nbsp;insert,update&nbsp;on&nbsp;数据库名.表名&nbsp;from&nbsp;&#39;用户名&#39;@&#39;%&#39;&nbsp;\r\ngrant&nbsp;all&nbsp;privileges&nbsp;on&nbsp;*.*&nbsp;to&nbsp;&#39;用户名&#39;@&#39;%&#39;&nbsp;with&nbsp;grant&nbsp;option&nbsp;\r\n--&nbsp;召回权限(如果是授予全部权限就不能召回部分权限，需要全部召回)\r\nrevoke&nbsp;all&nbsp;on&nbsp;数据库名.表名&nbsp;from&nbsp;&#39;用户名&#39;@&#39;%&#39;\r\n--</pre></li><li><p style=\"box-sizing: border-box; margin-top: 16px; margin-bottom: 16px;\">关系型数据库的数据完整性</p></li><ul style=\"list-style-type: square;\" class=\" list-paddingleft-2\"><li><p style=\"box-sizing: border-box; margin-top: 16px; margin-bottom: 16px;\">实体完整性 - 没有冗余（没有重复的记录）</p></li><li><p style=\"box-sizing: border-box; margin-top: 16px; margin-bottom: 16px;\">主键、唯一索引、唯一约束</p></li><li><p style=\"box-sizing: border-box; margin-top: 16px; margin-bottom: 16px;\">参照（引用）完整性 - 列的数据要参照其他表的主键（通常是主键）</p></li><li><p style=\"box-sizing: border-box; margin-top: 16px; margin-bottom: 16px;\">外键（可以是自己的列（自参照完整性））</p></li><li><p style=\"box-sizing: border-box; margin-top: 16px; margin-bottom: 16px;\">域完整性 - 表中的数据都是有效的</p></li><li><p style=\"box-sizing: border-box; margin-top: 16px; margin-bottom: 16px;\">数据类型、非空约束（not null、默认值约束（default）、检查约束 添加检查约束(MySQL中检查约束不生效)</p></li></ul></ul><pre data-source-line=\"130\" style=\"box-sizing: border-box; font-family: SFMono-Regular, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; font-size: 11.9px; margin-top: 0px; margin-bottom: 16px; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; line-height: 1.45; word-wrap: normal; padding: 16px; overflow: auto; background-color: rgb(246, 248, 250); border-radius: 3px; color: rgb(36, 41, 46);\">&nbsp;&nbsp;&nbsp;mysql\r\n&nbsp;&nbsp;&nbsp;alter&nbsp;table&nbsp;tb_score&nbsp;add&nbsp;constraint&nbsp;ck_score_score&nbsp;check&nbsp;(score&nbsp;between&nbsp;0&nbsp;and&nbsp;100);</pre><p><br/></p>', 1, '2018-08-17 12:58:47.905127', '2018-08-18 08:40:15.074530', 0, 6);
INSERT INTO `article` VALUES (7, 'Git基础命令', '8.jpg', 'Git是一个开源的分布式版本控制系统，用于敏捷高效地处理任何或小或大的项目。  Git 是 Linus Torvalds 为了帮助管理 Linux 内核开发而开发的一个开放源码的版本控制软件。', '<h4><span style=\"line-height: 1.5;\">git</span></h4><p><span style=\"font-size: 14px; line-height: 2;\">1 命令</span></p><p><span style=\"font-size: 14px; line-height: 2;\">1.1 Git init 初始化仓库 .Git文件</span></p><p><span style=\"font-size: 14px; line-height: 2;\">1.2 Git add 文件 添加纳入版本控制（未进行版本控制只是在暂存区）</span></p><p><span style=\"font-size: 14px; line-height: 2;\">1.3 Git status 状态</span></p><p><span style=\"font-size: 14px; line-height: 2;\">1.4 Git commit -m &quot;原因“ 提交</span></p><p><span style=\"font-size: 14px; line-height: 2;\">1.5 Git log 看日志</span></p><p><span style=\"font-size: 14px; line-height: 2;\">1.6 Git checkout 拿回删除的文件</span></p><p><span style=\"font-size: 14px; line-height: 2;\">1.7 git reset --hard 哈希 回到版本</span></p><p><span style=\"font-size: 14px; line-height: 2;\">1.8 git reflog 所有的版本</span></p><p><span style=\"font-size: 14px; line-height: 2;\">1.9 Git clone 地址</span></p><p><span style=\"font-size: 14px; line-height: 2;\">1.10 Git pull （同步文件）</span></p><p><span style=\"font-size: 14px; line-height: 2;\">1.11 Git remote 查看云端连接</span></p><p><span style=\"font-size: 14px; line-height: 2;\">1.12 git remote add origin URL 关联云端</span></p><p><span style=\"font-size: 14px; line-height: 2;\">1.13 Git push -u origin master （第一次关联云端push ）</span></p><p><span style=\"font-size: 14px; line-height: 2;\">1.14 git branch 看有哪些分支</span></p><p><span style=\"font-size: 14px; line-height: 2;\">1.15 git branch &lt;name&gt; （创建分支）</span></p><p><span style=\"font-size: 14px; line-height: 2;\">1.16 Git checkout &lt;name&gt; （进入分支）</span></p><p><span style=\"font-size: 14px; line-height: 2;\">1.17 git checkout -b &lt;name&gt; （创建同时jingru ）</span></p><p><span style=\"font-size: 14px; line-height: 2;\">1.18 Git merge &lt;name &gt; (合并到master)</span></p><p><span style=\"font-size: 14px; line-height: 2;\">1.19 Git branch -d &lt;name&gt; 删除分支</span></p><p><span style=\"font-size: 14px; line-height: 2;\">1.20 Git branch -D &lt;name &gt; 强行删除分支</span></p><p><span style=\"font-size: 14px; line-height: 2;\">2 创建用户</span></p><ol class=\" list-paddingleft-2\"><li><p><span style=\"font-size: 14px; line-height: 2;\">git init ===&gt; 初始化Git仓库&nbsp;</span></p></li><li><p><span style=\"font-size: 14px; line-height: 2;\">git add ===&gt; 放到暂存区</span></p></li><li><p><span style=\"font-size: 14px; line-height: 2;\">git status ===&gt; 查看暂存区状态</span></p></li><li><p><span style=\"font-size: 14px; line-height: 2;\">git commit -m &#39;...&#39; ===&gt; 提交到仓库</span></p></li><li><p><span style=\"font-size: 14px; line-height: 2;\">git log ===&gt; 查看提交日志</span></p></li><li><p><span style=\"font-size: 14px; line-height: 2;\">git reset --hard ===&gt; 重置到指定版本</span></p></li><li><p><span style=\"font-size: 14px; line-height: 2;\">git clone ===&gt; 从远端克隆项目到本地</span></p></li><li><p><span style=\"font-size: 14px; line-height: 2;\">git push origin master ===&gt; 从本地推到服务器 将本地已经实施了版本控制的内容push到远端仓库</span></p></li><li><p><span style=\"font-size: 14px; line-height: 2;\">git remote add origin url&nbsp;<span style=\"line-height: 2;\">===&gt;&nbsp;</span><span style=\"line-height: 2;\">关联远端仓库</span></span></p></li><li><p><span style=\"font-size: 14px; line-height: 2;\">&nbsp;git pull url master&nbsp;<span style=\"line-height: 2;\">===&gt;&nbsp;</span><span style=\"line-height: 2;\">将远端仓库的内容pull到本地</span></span></p></li><li><p><span style=\"font-size: 14px; line-height: 2;\">&nbsp;git push -u origin master&nbsp;</span> <span style=\"font-size: 14px; line-height: 2;\">===&gt;&nbsp;</span><span style=\"font-size: 14px; line-height: 2;\">(第一次需要-u之后就不用了)</span><span style=\"font-size: 14px; line-height: 2;\">将本地已经实施了版本控制的内容push到远端仓库</span></p></li><li><p><span style=\"font-size: 14px; line-height: 2;\">git branch ==&gt; 查看分支</span></p></li><li><p><span style=\"font-size: 14px; line-height: 2;\">git branch &lt;name&gt; ===&gt; 新建分支</span></p></li><li><p><span style=\"font-size: 14px; line-height: 2;\">git checkout &lt;name&gt; ===&gt; 切换分支</span></p></li><li><p><span style=\"font-size: 14px; line-height: 2;\">git checkout -b &lt;name&gt; ===&gt; 创建并切换分支</span></p></li><li><p><span style=\"font-size: 14px; line-height: 2;\">git merge &lt;name&gt;&nbsp;<span style=\"line-height: 2;\">===&gt;</span></span><span style=\"font-size: 14px;\">如果要在master上面合并分支需要先切回到master</span></p></li><li><p><span style=\"font-size: 14px; line-height: 2;\">&nbsp;git branch -d &lt;name&gt;&nbsp;<span style=\"line-height: 2;\">===&gt;&nbsp;</span><span style=\"line-height: 2;\">删除分支</span></span></p></li><li><p><span style=\"font-size: 14px; line-height: 2;\">git branch -D &lt;name&gt;&nbsp;<span style=\"line-height: 2;\">===&gt;&nbsp;</span><span style=\"line-height: 2;\">如果分支还没有合并要删除可以使用</span></span></p></li></ol><p><br/></p>', 1, '2018-08-17 13:05:44.463953', '2018-08-18 09:17:31.748460', 0, 5);
INSERT INTO `article` VALUES (8, 'Django模型对应关系', 'u20615143161674955272fm27gp0.jpg', 'Django模型对应关系，一对一、一对多、多对多', '<h1 data-source-line=\"1\" id=\"模型对应关系\" style=\"box-sizing: border-box; font-size: 2.25em; margin: 24px 0px 16px; line-height: 1.25; padding-bottom: 0.3em; border-bottom: 1px solid rgb(234, 236, 239); color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, 微软雅黑, &quot;PingFang SC&quot;, Helvetica, Arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, SimSun, 宋体, Heiti, 黑体, sans-serif; white-space: normal;\">模型对应关系</h1><p data-source-line=\"2\" style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, 微软雅黑, &quot;PingFang SC&quot;, Helvetica, Arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\">文档将对模型的对应关系一对一、一对多、多对多的关系进行实例分析介绍</p><ul data-source-line=\"3\" style=\"box-sizing: border-box; padding-left: 2em; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, 微软雅黑, &quot;PingFang SC&quot;, Helvetica, Arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\" class=\" list-paddingleft-2\"><li><p>1:1 OneToOneFileld</p></li><li><p>1:N ForeignKey</p></li><li><p>M:N ManyToManyField</p></li></ul><h3 data-source-line=\"7\" id=\"模型\" style=\"box-sizing: border-box; margin-top: 24px; margin-bottom: 16px; font-size: 1.5em; line-height: 1.25; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, 微软雅黑, &quot;PingFang SC&quot;, Helvetica, Arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, SimSun, 宋体, Heiti, 黑体, sans-serif; white-space: normal;\"><a class=\"markdownIt-Anchor\" href=\"file:///C:/Users/Administrator/AppData/Local/Youdao/YNote/markdown/index.html#%E6%A8%A1%E5%9E%8B\" style=\"box-sizing: border-box; color: rgb(3, 102, 214); text-decoration-line: none;\"></a>模型</h3><pre data-source-line=\"9\" style=\"box-sizing: border-box; font-family: SFMono-Regular, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; font-size: 11.9px; margin-top: 0px; margin-bottom: 16px; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; line-height: 1.45; word-wrap: normal; padding: 16px; overflow: auto; background-color: rgb(246, 248, 250); border-radius: 3px; color: rgb(36, 41, 46);\">#创建班级表（）class&nbsp;Grade(models.Model):\r\n&nbsp;&nbsp;&nbsp;&nbsp;g_name&nbsp;=&nbsp;models.CharField(max_length=10)&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;#表名(不设置表名默认是：应用名_类名，app_grade,数据库名自动小写没有大写)\r\n&nbsp;&nbsp;&nbsp;&nbsp;class&nbsp;Meta:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;db_table&nbsp;=&nbsp;&#39;grade&#39;#创建一个学生表(学生与班级是一对多)class&nbsp;Student(models.Model):\r\n&nbsp;&nbsp;&nbsp;&nbsp;s_name&nbsp;=&nbsp;models.CharField(max_length=20,unique=True)\r\n&nbsp;&nbsp;&nbsp;&nbsp;s_age&nbsp;=&nbsp;models.IntegerField(default=16)\r\n&nbsp;&nbsp;&nbsp;&nbsp;s_sex&nbsp;=&nbsp;models.BooleanField(default=1)&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;#学生表与班级是一对多\r\n&nbsp;&nbsp;&nbsp;&nbsp;g&nbsp;=&nbsp;models.ForeignKey(Grade,null=True)&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;#表名\r\n&nbsp;&nbsp;&nbsp;&nbsp;class&nbsp;Meta:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;db_table&nbsp;=&nbsp;&#39;student&#39;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;#创建一个学生信息表（学生信息与学生是一对一）\r\n&nbsp;&nbsp;&nbsp;&nbsp;class&nbsp;StudentInfo(models.Model):\r\n&nbsp;&nbsp;&nbsp;&nbsp;adderss&nbsp;=&nbsp;models.CharField(max_length=20,null=True)\r\n&nbsp;&nbsp;&nbsp;&nbsp;phone&nbsp;=&nbsp;models.IntegerField(null=True)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;#学生信息表与学生表一对一\r\n&nbsp;&nbsp;&nbsp;&nbsp;stu&nbsp;=&nbsp;models.OneToOneField(Student)&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;#表名\r\n&nbsp;&nbsp;&nbsp;&nbsp;class&nbsp;Meta:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;db_table&nbsp;=&nbsp;&#39;StudentInfo&#39;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;#创建一个课程信息表（课程与学生是多对多）&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;class&nbsp;Coures(models.Model):\r\n&nbsp;&nbsp;&nbsp;&nbsp;c_name&nbsp;=&nbsp;models.CharField(max_length=10)&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;#课程表与学生表是多对多\r\n&nbsp;&nbsp;&nbsp;&nbsp;stu&nbsp;=&nbsp;models.ManyToManyField(Student)&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;#表名\r\n&nbsp;&nbsp;&nbsp;&nbsp;class&nbsp;Meta:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;db_table&nbsp;=&nbsp;&#39;course&#39;</pre><ul data-source-line=\"54\" style=\"box-sizing: border-box; padding-left: 2em; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, 微软雅黑, &quot;PingFang SC&quot;, Helvetica, Arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\" class=\" list-paddingleft-2\"><li><p>上面的代码我们创建了一对一、一对多、多对多，从以上的例子中出发去了解他们之间的关系</p></li><li><p>建立好模型在对应的python环境下进行迁移生成数据库，并手动添加数据</p></li></ul><ul data-source-line=\"58\" style=\"box-sizing: border-box; padding-left: 2em; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, 微软雅黑, &quot;PingFang SC&quot;, Helvetica, Arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\" class=\" list-paddingleft-2\"><li><p>一对一即学生与学生信息</p></li></ul><pre data-source-line=\"60\" style=\"box-sizing: border-box; font-family: SFMono-Regular, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; font-size: 11.9px; margin-top: 0px; margin-bottom: 16px; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; line-height: 1.45; word-wrap: normal; padding: 16px; overflow: auto; background-color: rgb(246, 248, 250); border-radius: 3px; color: rgb(36, 41, 46);\">#在视图中添加学生数据\r\ndef&nbsp;addStu(request)&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;\r\nif&nbsp;request.method&nbsp;==&nbsp;&#39;GET&#39;:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Student.objects.create(s_name=&#39;妲己&#39;,&nbsp;s_age=20,&nbsp;s_sex=False)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;HttpResponse(&#39;创建成功&#39;)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n#在视图中删除学生信息&nbsp;\r\ndef&nbsp;delStu(request):&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;request.method&nbsp;==&nbsp;&#39;GET&#39;:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;stu&nbsp;=&nbsp;Student.objects.filter(id=13)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;stu.delete()&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;HttpResponse(&quot;删除成功&quot;)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n#找到对应信息\r\ndef&nbsp;oneToOneStu(request):&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;request.method&nbsp;==&nbsp;&#39;GET&#39;:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;#在学生模型中找到学生对象\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;stu&nbsp;=&nbsp;Student.objects.get(id=1)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#通过学生对象找一对一关联表信息\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#使用学生对象.学生信息表名(小写)获得信息表对象\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;stuinfo&nbsp;=&nbsp;stu.studentinfo&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;HttpResponse(stuinfo)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#通过拓展表找学生信息\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;stuinfo&nbsp;=&nbsp;StudentInfo.objects.get(phone=123232321)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#使用学生信息表对象.学生信息表OneToOneField的字段名获得信息对应学生对\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;stu&nbsp;=&nbsp;stuinfo.stu&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;HttpResponse(stuinfo)&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n#修改信息就是找到对应的信息直接通过点语法修改即可\r\ndef&nbsp;alteroneToOneStu(request)\r\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;request.method&nbsp;==&nbsp;&#39;GET&#39;&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;#在学生模型中找到学生对象\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;stu&nbsp;=&nbsp;Student.objects.get(id=1)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#修改学生表中信息\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;stu.s_name&nbsp;=&nbsp;&#39;新的名字&#39;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#修改信息需要进行保存\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;stuinfo.save()&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#修改这名学生的学生信息表中的信息\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;stuinfo&nbsp;=&nbsp;stu.studentinfo\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;stuinfo.adders&nbsp;=&nbsp;&#39;新的地址&#39;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#修改信息需要进行保存\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;stuinfo.save()</pre><ul data-source-line=\"105\" style=\"box-sizing: border-box; padding-left: 2em; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, 微软雅黑, &quot;PingFang SC&quot;, Helvetica, Arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\" class=\" list-paddingleft-2\"><li><p>一对多即学生与班级</p></li></ul><pre data-source-line=\"107\" style=\"box-sizing: border-box; font-family: SFMono-Regular, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; font-size: 11.9px; margin-top: 0px; margin-bottom: 16px; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; line-height: 1.45; word-wrap: normal; padding: 16px; overflow: auto; background-color: rgb(246, 248, 250); border-radius: 3px; color: rgb(36, 41, 46);\">def&nbsp;OneToManyStu(request):&nbsp;&nbsp;&nbsp;&nbsp;\r\nif&nbsp;request.method&nbsp;==&nbsp;&#39;GET&#39;:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;#查询id=1的学生的班级名称\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;stu&nbsp;=&nbsp;Student.objects.get(id=1)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#拿到学生对象.ForeignKey字段名获得对应的班级对象\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;stug&nbsp;=&nbsp;stu.g&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gname&nbsp;=&nbsp;stug.g_name\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;HttpResponse([stug])&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#id为1的班级的所有学生(filter拿到的是列表)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;grade&nbsp;=&nbsp;Grade.objects.filter(id=1)[0]\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#在涉及到设定关系字段的一方时，调用方法时需要使用_set来调用\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;stus&nbsp;=&nbsp;grade.student_set.all()</pre><ul data-source-line=\"123\" style=\"box-sizing: border-box; padding-left: 2em; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, 微软雅黑, &quot;PingFang SC&quot;, Helvetica, Arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\" class=\" list-paddingleft-2\"><li><p>多对多即学生与课程</p></li></ul><pre data-source-line=\"125\" style=\"box-sizing: border-box; font-family: SFMono-Regular, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; font-size: 11.9px; margin-top: 0px; margin-bottom: 16px; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; line-height: 1.45; word-wrap: normal; padding: 16px; overflow: auto; background-color: rgb(246, 248, 250); border-radius: 3px; color: rgb(36, 41, 46);\">#添加课程def&nbsp;addCoure(request):&nbsp;&nbsp;&nbsp;&nbsp;\r\nif&nbsp;request.method&nbsp;==&nbsp;&#39;GET&#39;:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;courses&nbsp;=&nbsp;[&#39;高数&#39;,&#39;计算机网络&#39;]&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;coure&nbsp;in&nbsp;courses:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Coures.objects.create(c_name=coure)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;HttpResponse(&#39;添加成功&#39;)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n#给学生添加课程def&nbsp;ManyToSelect(request):&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;request.method&nbsp;==&nbsp;&#39;GET&#39;:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;#拿到学生\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;stu&nbsp;=&nbsp;Student.objects.get(id=1)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#拿到课程c1\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c1&nbsp;=&nbsp;Coures.objects.get(id=1)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#拿到课程c2\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c2&nbsp;=&nbsp;Coures.objects.get(id=2)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#涉及了ManyToManyFiel在课程表中。为学生添加c1,c2时.课程要使用_set\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;stu.coures_set.add(c1)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;stu.coures_set.add(c2)&nbsp;&nbsp;\r\n&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n#给课程添加学生def&nbsp;ManyToSelect(request):&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;request.method&nbsp;==&nbsp;&#39;GET&#39;:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;#拿到学生\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;stu&nbsp;=&nbsp;Student.objects.get(id=1)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#拿到课程c1\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c1&nbsp;=&nbsp;Coures.objects.get(c_name=&#39;计算机网络&#39;)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#拿到课程c2\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c2&nbsp;=&nbsp;Course.objects.get(c_name=&#39;数学&#39;)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#给课程添加学生()\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c1.courses.add(stu)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c2.courses.add(stu)</pre><ul data-source-line=\"164\" style=\"box-sizing: border-box; padding-left: 2em; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, 微软雅黑, &quot;PingFang SC&quot;, Helvetica, Arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\" class=\" list-paddingleft-2\"><li><p>总结</p></li></ul><pre data-source-line=\"166\" style=\"box-sizing: border-box; font-family: SFMono-Regular, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; font-size: 11.9px; margin-top: 0px; margin-bottom: 16px; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; line-height: 1.45; word-wrap: normal; padding: 16px; overflow: auto; background-color: rgb(246, 248, 250); border-radius: 3px; color: rgb(36, 41, 46);\">3.&nbsp;一对第一\r\n\r\nclass&nbsp;B():\r\n	id&nbsp;=&nbsp;models.autoFiled(primary_key=True)\r\n\r\nclass&nbsp;A():\r\n	b&nbsp;=&nbsp;models.OneToOneField(B)\r\n\r\n有A的对象，查询B\r\na&nbsp;=&nbsp;A()\r\nb=&nbsp;a.b\r\nb_id&nbsp;=&nbsp;a.b_id\r\n\r\n有B的对象，反查A\r\n\r\nb&nbsp;=&nbsp;B()\r\na&nbsp;=&nbsp;b.a\r\n\r\n4.&nbsp;一对多\r\n\r\nclass&nbsp;B():\r\n	id&nbsp;=&nbsp;models.autoFiled(primary_key=True)\r\n\r\nclass&nbsp;A():\r\n	b&nbsp;=&nbsp;models.ForeignKey(B)\r\n\r\n一对多和一对一的关系：&nbsp;一对多中外键是唯一的，那就成了一对一\r\n\r\n\r\n有A的对象，查询B\r\na&nbsp;=&nbsp;A()\r\nb&nbsp;=a.b\r\n\r\n有B的对象，反查A\r\nb&nbsp;=&nbsp;B()\r\na&nbsp;=&nbsp;b.a_set.all()\r\n\r\n5.&nbsp;多对多\r\n\r\nclass&nbsp;B():\r\n	id&nbsp;=&nbsp;models.autoFiled(primary_key=True)\r\n\r\nclass&nbsp;A():\r\n	b&nbsp;=&nbsp;models.ManyToManyField(B)\r\n\r\n生成的表有三张，A表，B表，A_B表\r\n\r\n\r\n有A的对象，查询B\r\na&nbsp;=&nbsp;A()\r\nb&nbsp;=a.b\r\n\r\n有B的对象，反查A\r\nb&nbsp;=&nbsp;B()\r\na&nbsp;=&nbsp;b.a_set.all()\r\n\r\n插入数据\r\na&nbsp;=&nbsp;A.objects.get(pk=1)\r\nb&nbsp;=&nbsp;B.objects.get(pk=1)\r\na.b.add(b)\r\nb.a_set.add(a)\r\n\r\n删除数据\r\nb.a_set.remove(a)</pre><ul data-source-line=\"232\" style=\"box-sizing: border-box; padding-left: 2em; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, 微软雅黑, &quot;PingFang SC&quot;, Helvetica, Arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\" class=\" list-paddingleft-2\"><li><p>多对多练习</p></li><ul style=\"list-style-type: square;\" class=\" list-paddingleft-2\"><li><p>模型</p></li></ul></ul><pre data-source-line=\"235\" style=\"box-sizing: border-box; font-family: SFMono-Regular, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; font-size: 11.9px; margin-top: 0px; margin-bottom: 16px; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; line-height: 1.45; word-wrap: normal; padding: 16px; overflow: auto; background-color: rgb(246, 248, 250); border-radius: 3px; color: rgb(36, 41, 46);\">from&nbsp;django.db&nbsp;import&nbsp;models#&nbsp;Create&nbsp;your&nbsp;models&nbsp;here.class&nbsp;Author(models.Model):\r\n&nbsp;&nbsp;&nbsp;&nbsp;a_name&nbsp;=&nbsp;models.CharField(max_length=20)\r\n&nbsp;&nbsp;&nbsp;&nbsp;a_age&nbsp;=&nbsp;models.IntegerField(null=True)\r\n&nbsp;&nbsp;&nbsp;&nbsp;a_sex&nbsp;=&nbsp;models.BooleanField(default=True)\r\n&nbsp;&nbsp;&nbsp;&nbsp;a_address&nbsp;=&nbsp;models.CharField(max_length=20)&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;class&nbsp;Meta:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;db_table&nbsp;=&nbsp;&#39;author&#39;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\nclass&nbsp;Book(models.Model):\r\n&nbsp;&nbsp;&nbsp;&nbsp;b_name&nbsp;=&nbsp;models.CharField(max_length=20)\r\n&nbsp;&nbsp;&nbsp;&nbsp;b_type&nbsp;=&nbsp;models.CharField(max_length=10)\r\n&nbsp;&nbsp;&nbsp;&nbsp;b_lenght&nbsp;=&nbsp;models.IntegerField(default=10000,&nbsp;null=True)\r\n&nbsp;&nbsp;&nbsp;&nbsp;author&nbsp;=&nbsp;models.ManyToManyField(Author)&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;class&nbsp;Meta:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;db_table&nbsp;=&nbsp;&#39;book&#39;</pre><ul data-source-line=\"262\" style=\"box-sizing: border-box; padding-left: 2em; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, 微软雅黑, &quot;PingFang SC&quot;, Helvetica, Arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, SimSun, 宋体, Heiti, 黑体, sans-serif; font-size: 14px; white-space: normal;\" class=\" list-paddingleft-2\"><li><p>视图</p></li></ul><pre data-source-line=\"263\" style=\"box-sizing: border-box; font-family: SFMono-Regular, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; font-size: 11.9px; margin-top: 0px; margin-bottom: 16px; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; line-height: 1.45; word-wrap: normal; padding: 16px; overflow: auto; background-color: rgb(246, 248, 250); border-radius: 3px; color: rgb(36, 41, 46);\">from&nbsp;django.shortcuts&nbsp;import&nbsp;render\r\nfrom&nbsp;django.http&nbsp;import&nbsp;HttpResponse\r\nfrom&nbsp;app2.models&nbsp;import&nbsp;Author\r\nfrom&nbsp;app2.models&nbsp;import&nbsp;Book\r\n\r\n\r\n\r\ndef&nbsp;bookadd(request):&nbsp;&nbsp;&nbsp;&nbsp;\r\nif&nbsp;request.method&nbsp;==&nbsp;&#39;GET&#39;:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n#&nbsp;创建书籍\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Book.objects.create(b_name=&#39;白夜追凶&#39;,&nbsp;b_type=&#39;悬疑&#39;,&nbsp;b_lenght=100000)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Book.objects.create(b_name=&#39;斗罗大陆&#39;,&nbsp;b_type=&#39;玄幻&#39;,&nbsp;b_lenght=2000000)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Book.objects.create(b_name=&#39;斗破苍穹&#39;,&nbsp;b_type=&#39;玄幻&#39;,&nbsp;b_lenght=2000000)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Book.objects.create(b_name=&#39;盗墓笔记&#39;,&nbsp;b_type=&#39;悬疑&#39;,&nbsp;b_lenght=1500000)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Book.objects.create(b_name=&#39;红楼梦&#39;,&nbsp;b_type=&#39;古典小说&#39;,&nbsp;b_lenght=1200000)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;HttpResponse(&#39;创建书籍成功&#39;)\r\n\r\n\r\ndef&nbsp;authoradd(request):&nbsp;&nbsp;&nbsp;&nbsp;\r\nif&nbsp;request.method&nbsp;==&nbsp;&#39;GET&#39;:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;#&nbsp;创建作者\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Author.objects.create(a_name=&#39;指纹&#39;,&nbsp;a_address=&#39;南京&#39;,&nbsp;a_age=43)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Author.objects.create(a_name=&#39;唐家三少&#39;,&nbsp;a_address=&#39;北京&#39;,&nbsp;a_age=34)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Author.objects.create(a_name=&#39;天蚕土豆&#39;,&nbsp;a_address=&#39;四川&#39;,&nbsp;a_age=31)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Author.objects.create(a_name=&#39;南派三叔&#39;,&nbsp;a_address=&#39;浙江&#39;,&nbsp;a_age=45)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Author.objects.create(a_name=&#39;曹雪芹&#39;,&nbsp;a_address=&#39;辽岭&#39;,&nbsp;a_age=48)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Author.objects.create(a_name=&#39;高鹗&#39;,&nbsp;a_address=&#39;辽宁&#39;,&nbsp;a_age=57)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;HttpResponse(&#39;创建作者成功&#39;)\r\n\r\n\r\ndef&nbsp;author_book_add(request):&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;request.method&nbsp;==&nbsp;&#39;GET&#39;:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;给书籍添加作者\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;books&nbsp;=&nbsp;Book.objects.get(b_name=&#39;白夜追凶&#39;)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;authors&nbsp;=&nbsp;Author.objects.get(a_name=&#39;指纹&#39;)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;authors.book_set.add(books)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;books&nbsp;=&nbsp;Book.objects.get(b_name=&#39;斗罗大陆&#39;)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;authors&nbsp;=&nbsp;Author.objects.get(a_name=&#39;唐家三少&#39;)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;authors.book_set.add(books)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;books&nbsp;=&nbsp;Book.objects.get(b_name=&#39;斗破苍穹&#39;)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;authors&nbsp;=&nbsp;Author.objects.get(a_name=&#39;天蚕土豆&#39;)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;authors.book_set.add(books)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;books&nbsp;=&nbsp;Book.objects.get(b_name=&#39;盗墓笔记&#39;)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;authors&nbsp;=&nbsp;Author.objects.get(a_name=&#39;南派三叔&#39;)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;authors.book_set.add(books)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;books&nbsp;=&nbsp;Book.objects.get(b_name=&#39;红楼梦&#39;)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;authors&nbsp;=&nbsp;Author.objects.get(a_name=&#39;曹雪芹&#39;)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;authors.book_set.add(books)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;books&nbsp;=&nbsp;Book.objects.get(b_name=&#39;红楼梦&#39;)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;authors&nbsp;=&nbsp;Author.objects.get(a_name=&#39;高鹗&#39;)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;authors.book_set.add(books)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;HttpResponse(&#39;给书籍添加作者成功&#39;)\r\n\r\n\r\n\r\ndef&nbsp;book_author_add(request):&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;request.method&nbsp;==&nbsp;&#39;GET&#39;:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n#&nbsp;给书籍添加作者\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;books&nbsp;=&nbsp;Book.objects.get(b_name=&#39;白夜追凶&#39;)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;authors&nbsp;=&nbsp;Author.objects.get(a_name=&#39;指纹&#39;)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;books.author.add(authors)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;books&nbsp;=&nbsp;Book.objects.get(b_name=&#39;斗罗大陆&#39;)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;authors&nbsp;=&nbsp;Author.objects.get(a_name=&#39;唐家三少&#39;)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;books.author.add(authors)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;books&nbsp;=&nbsp;Book.objects.get(b_name=&#39;斗破苍穹&#39;)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;authors&nbsp;=&nbsp;Author.objects.get(a_name=&#39;天蚕土豆&#39;)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;books.author.add(authors)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;books&nbsp;=&nbsp;Book.objects.get(b_name=&#39;盗墓笔记&#39;)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;authors&nbsp;=&nbsp;Author.objects.get(a_name=&#39;南派三叔&#39;)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;books.author.add(authors)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;books&nbsp;=&nbsp;Book.objects.get(b_name=&#39;红楼梦&#39;)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;authors&nbsp;=&nbsp;Author.objects.get(a_name=&#39;曹雪芹&#39;)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;books.author.add(authors)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;books&nbsp;=&nbsp;Book.objects.get(b_name=&#39;红楼梦&#39;)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;authors&nbsp;=&nbsp;Author.objects.get(a_name=&#39;高鹗&#39;)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;books.author.add(authors)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;HttpResponse(&#39;给书籍添加作者成功&#39;)\r\n\r\n\r\ndef&nbsp;book_author_delete(request):&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;if&nbsp;request.method&nbsp;==&nbsp;&#39;GET&#39;:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;删除书的作者\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;books&nbsp;=&nbsp;Book.objects.get(b_name=&#39;红楼梦&#39;)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;author&nbsp;=&nbsp;Author.objects.get(a_name=&#39;高鹗&#39;)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;books.author.remove(author)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;HttpResponse(&#39;删除书的作者&#39;)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#删除作者的书\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;author&nbsp;=&nbsp;Author.objects.get(a_name=&#39;南派三叔&#39;)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;books&nbsp;=&nbsp;Book.objects.get(b_name=&#39;盗墓笔记&#39;)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;author.book_set.remove(books)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;HttpResponse(&#39;删除作者的书&#39;)\r\n\r\n\r\ndef&nbsp;bookdelete(request):&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;request.method&nbsp;==&nbsp;&#39;GET&#39;:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#删除书\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;books&nbsp;=&nbsp;Book.objects.get(b_name=&#39;红楼梦&#39;)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;books.delete()&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;HttpResponse(&#39;删除书&#39;)\r\n\r\n\r\ndef&nbsp;authordelete(request):&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;request.method&nbsp;==&nbsp;&#39;GET&#39;:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#删除作者\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;author&nbsp;=&nbsp;Author.objects.get(a_name=&#39;南派三叔&#39;)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;author.delete()&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;HttpResponse(&#39;删除作者&#39;)\r\n\r\n\r\ndef&nbsp;book_author(request):&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;request.method&nbsp;==&nbsp;&#39;GET&#39;:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#找到作者的书\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;authon&nbsp;=&nbsp;Author.objects.get(a_name=&#39;高鹗&#39;)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a&nbsp;=&nbsp;authon.book_set.all()&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#找到书的作者\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;books&nbsp;=&nbsp;Book.objects.get(b_name=&#39;红楼梦&#39;)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a&nbsp;=&nbsp;books.author.filter()&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;HttpResponse(a.values())</pre><p><br/></p>', 1, '2018-08-19 12:06:06.620595', '2018-08-19 12:06:14.768061', 1, 2);

-- ----------------------------
-- Table structure for auth_group
-- ----------------------------
DROP TABLE IF EXISTS `auth_group`;
CREATE TABLE `auth_group`  (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(80) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `name`(`name`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Table structure for auth_group_permissions
-- ----------------------------
DROP TABLE IF EXISTS `auth_group_permissions`;
CREATE TABLE `auth_group_permissions`  (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `group_id` int(11) NOT NULL,
  `permission_id` int(11) NOT NULL,
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `auth_group_permissions_group_id_permission_id_0cd325b0_uniq`(`group_id`, `permission_id`) USING BTREE,
  INDEX `auth_group_permissio_permission_id_84c5c92e_fk_auth_perm`(`permission_id`) USING BTREE,
  CONSTRAINT `auth_group_permissio_permission_id_84c5c92e_fk_auth_perm` FOREIGN KEY (`permission_id`) REFERENCES `auth_permission` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT,
  CONSTRAINT `auth_group_permissions_group_id_b120cbf9_fk_auth_group_id` FOREIGN KEY (`group_id`) REFERENCES `auth_group` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Table structure for auth_permission
-- ----------------------------
DROP TABLE IF EXISTS `auth_permission`;
CREATE TABLE `auth_permission`  (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `content_type_id` int(11) NOT NULL,
  `codename` varchar(100) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `auth_permission_content_type_id_codename_01ab375a_uniq`(`content_type_id`, `codename`) USING BTREE,
  CONSTRAINT `auth_permission_content_type_id_2f476e4b_fk_django_co` FOREIGN KEY (`content_type_id`) REFERENCES `django_content_type` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT
) ENGINE = InnoDB AUTO_INCREMENT = 34 CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of auth_permission
-- ----------------------------
INSERT INTO `auth_permission` VALUES (1, 'Can add log entry', 1, 'add_logentry');
INSERT INTO `auth_permission` VALUES (2, 'Can change log entry', 1, 'change_logentry');
INSERT INTO `auth_permission` VALUES (3, 'Can delete log entry', 1, 'delete_logentry');
INSERT INTO `auth_permission` VALUES (4, 'Can add permission', 2, 'add_permission');
INSERT INTO `auth_permission` VALUES (5, 'Can change permission', 2, 'change_permission');
INSERT INTO `auth_permission` VALUES (6, 'Can delete permission', 2, 'delete_permission');
INSERT INTO `auth_permission` VALUES (7, 'Can add group', 3, 'add_group');
INSERT INTO `auth_permission` VALUES (8, 'Can change group', 3, 'change_group');
INSERT INTO `auth_permission` VALUES (9, 'Can delete group', 3, 'delete_group');
INSERT INTO `auth_permission` VALUES (10, 'Can add user', 4, 'add_user');
INSERT INTO `auth_permission` VALUES (11, 'Can change user', 4, 'change_user');
INSERT INTO `auth_permission` VALUES (12, 'Can delete user', 4, 'delete_user');
INSERT INTO `auth_permission` VALUES (13, 'Can add content type', 5, 'add_contenttype');
INSERT INTO `auth_permission` VALUES (14, 'Can change content type', 5, 'change_contenttype');
INSERT INTO `auth_permission` VALUES (15, 'Can delete content type', 5, 'delete_contenttype');
INSERT INTO `auth_permission` VALUES (16, 'Can add session', 6, 'add_session');
INSERT INTO `auth_permission` VALUES (17, 'Can change session', 6, 'change_session');
INSERT INTO `auth_permission` VALUES (18, 'Can delete session', 6, 'delete_session');
INSERT INTO `auth_permission` VALUES (19, 'Can add article', 7, 'add_article');
INSERT INTO `auth_permission` VALUES (20, 'Can change article', 7, 'change_article');
INSERT INTO `auth_permission` VALUES (21, 'Can delete article', 7, 'delete_article');
INSERT INTO `auth_permission` VALUES (22, 'Can add user', 8, 'add_user');
INSERT INTO `auth_permission` VALUES (23, 'Can change user', 8, 'change_user');
INSERT INTO `auth_permission` VALUES (24, 'Can delete user', 8, 'delete_user');
INSERT INTO `auth_permission` VALUES (25, 'Can add permission', 9, 'add_permission');
INSERT INTO `auth_permission` VALUES (26, 'Can change permission', 9, 'change_permission');
INSERT INTO `auth_permission` VALUES (27, 'Can delete permission', 9, 'delete_permission');
INSERT INTO `auth_permission` VALUES (28, 'Can add role', 10, 'add_role');
INSERT INTO `auth_permission` VALUES (29, 'Can change role', 10, 'change_role');
INSERT INTO `auth_permission` VALUES (30, 'Can delete role', 10, 'delete_role');
INSERT INTO `auth_permission` VALUES (31, 'Can add typess', 11, 'add_typess');
INSERT INTO `auth_permission` VALUES (32, 'Can change typess', 11, 'change_typess');
INSERT INTO `auth_permission` VALUES (33, 'Can delete typess', 11, 'delete_typess');

-- ----------------------------
-- Table structure for auth_user
-- ----------------------------
DROP TABLE IF EXISTS `auth_user`;
CREATE TABLE `auth_user`  (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `password` varchar(128) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `last_login` datetime(6) NULL DEFAULT NULL,
  `is_superuser` tinyint(1) NOT NULL,
  `username` varchar(150) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `first_name` varchar(30) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `last_name` varchar(30) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `email` varchar(254) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `is_staff` tinyint(1) NOT NULL,
  `is_active` tinyint(1) NOT NULL,
  `date_joined` datetime(6) NULL,
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `username`(`username`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Table structure for auth_user_groups
-- ----------------------------
DROP TABLE IF EXISTS `auth_user_groups`;
CREATE TABLE `auth_user_groups`  (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `user_id` int(11) NOT NULL,
  `group_id` int(11) NOT NULL,
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `auth_user_groups_user_id_group_id_94350c0c_uniq`(`user_id`, `group_id`) USING BTREE,
  INDEX `auth_user_groups_group_id_97559544_fk_auth_group_id`(`group_id`) USING BTREE,
  CONSTRAINT `auth_user_groups_group_id_97559544_fk_auth_group_id` FOREIGN KEY (`group_id`) REFERENCES `auth_group` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT,
  CONSTRAINT `auth_user_groups_user_id_6a12ed8b_fk_auth_user_id` FOREIGN KEY (`user_id`) REFERENCES `auth_user` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Table structure for auth_user_user_permissions
-- ----------------------------
DROP TABLE IF EXISTS `auth_user_user_permissions`;
CREATE TABLE `auth_user_user_permissions`  (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `user_id` int(11) NOT NULL,
  `permission_id` int(11) NOT NULL,
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `auth_user_user_permissions_user_id_permission_id_14a6b632_uniq`(`user_id`, `permission_id`) USING BTREE,
  INDEX `auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm`(`permission_id`) USING BTREE,
  CONSTRAINT `auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm` FOREIGN KEY (`permission_id`) REFERENCES `auth_permission` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT,
  CONSTRAINT `auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id` FOREIGN KEY (`user_id`) REFERENCES `auth_user` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Table structure for django_admin_log
-- ----------------------------
DROP TABLE IF EXISTS `django_admin_log`;
CREATE TABLE `django_admin_log`  (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `action_time` datetime(6) NULL,
  `object_id` longtext CHARACTER SET utf8 COLLATE utf8_general_ci NULL,
  `object_repr` varchar(200) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `action_flag` smallint(5) UNSIGNED NOT NULL,
  `change_message` longtext CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `content_type_id` int(11) NULL DEFAULT NULL,
  `user_id` int(11) NOT NULL,
  PRIMARY KEY (`id`) USING BTREE,
  INDEX `django_admin_log_content_type_id_c4bce8eb_fk_django_co`(`content_type_id`) USING BTREE,
  INDEX `django_admin_log_user_id_c564eba6_fk_auth_user_id`(`user_id`) USING BTREE,
  CONSTRAINT `django_admin_log_content_type_id_c4bce8eb_fk_django_co` FOREIGN KEY (`content_type_id`) REFERENCES `django_content_type` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT,
  CONSTRAINT `django_admin_log_user_id_c564eba6_fk_auth_user_id` FOREIGN KEY (`user_id`) REFERENCES `auth_user` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Table structure for django_content_type
-- ----------------------------
DROP TABLE IF EXISTS `django_content_type`;
CREATE TABLE `django_content_type`  (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `app_label` varchar(100) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `model` varchar(100) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `django_content_type_app_label_model_76bd3d3b_uniq`(`app_label`, `model`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 12 CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of django_content_type
-- ----------------------------
INSERT INTO `django_content_type` VALUES (1, 'admin', 'logentry');
INSERT INTO `django_content_type` VALUES (3, 'auth', 'group');
INSERT INTO `django_content_type` VALUES (2, 'auth', 'permission');
INSERT INTO `django_content_type` VALUES (4, 'auth', 'user');
INSERT INTO `django_content_type` VALUES (7, 'backweb', 'article');
INSERT INTO `django_content_type` VALUES (9, 'backweb', 'permission');
INSERT INTO `django_content_type` VALUES (10, 'backweb', 'role');
INSERT INTO `django_content_type` VALUES (11, 'backweb', 'typess');
INSERT INTO `django_content_type` VALUES (8, 'backweb', 'user');
INSERT INTO `django_content_type` VALUES (5, 'contenttypes', 'contenttype');
INSERT INTO `django_content_type` VALUES (6, 'sessions', 'session');

-- ----------------------------
-- Table structure for django_migrations
-- ----------------------------
DROP TABLE IF EXISTS `django_migrations`;
CREATE TABLE `django_migrations`  (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `app` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `name` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `applied` datetime(6) NULL,
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 31 CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of django_migrations
-- ----------------------------
INSERT INTO `django_migrations` VALUES (1, 'contenttypes', '0001_initial', '2018-08-10 06:22:28.288939');
INSERT INTO `django_migrations` VALUES (2, 'auth', '0001_initial', '2018-08-10 06:22:37.617472');
INSERT INTO `django_migrations` VALUES (3, 'admin', '0001_initial', '2018-08-10 06:22:40.719650');
INSERT INTO `django_migrations` VALUES (4, 'admin', '0002_logentry_remove_auto_add', '2018-08-10 06:22:40.762652');
INSERT INTO `django_migrations` VALUES (5, 'contenttypes', '0002_remove_content_type_name', '2018-08-10 06:22:41.834714');
INSERT INTO `django_migrations` VALUES (6, 'auth', '0002_alter_permission_name_max_length', '2018-08-10 06:22:42.728765');
INSERT INTO `django_migrations` VALUES (7, 'auth', '0003_alter_user_email_max_length', '2018-08-10 06:22:43.573813');
INSERT INTO `django_migrations` VALUES (8, 'auth', '0004_alter_user_username_opts', '2018-08-10 06:22:43.700820');
INSERT INTO `django_migrations` VALUES (9, 'auth', '0005_alter_user_last_login_null', '2018-08-10 06:22:44.570870');
INSERT INTO `django_migrations` VALUES (10, 'auth', '0006_require_contenttypes_0002', '2018-08-10 06:22:44.634874');
INSERT INTO `django_migrations` VALUES (11, 'auth', '0007_alter_validators_add_error_messages', '2018-08-10 06:22:44.688877');
INSERT INTO `django_migrations` VALUES (12, 'auth', '0008_alter_user_username_max_length', '2018-08-10 06:22:45.418919');
INSERT INTO `django_migrations` VALUES (13, 'sessions', '0001_initial', '2018-08-10 06:22:45.883945');
INSERT INTO `django_migrations` VALUES (30, 'backweb', '0001_initial', '2018-08-15 13:24:39.851420');

-- ----------------------------
-- Table structure for django_session
-- ----------------------------
DROP TABLE IF EXISTS `django_session`;
CREATE TABLE `django_session`  (
  `session_key` varchar(40) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `session_data` longtext CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `expire_date` datetime(6) NULL,
  PRIMARY KEY (`session_key`) USING BTREE,
  INDEX `django_session_expire_date_a5c62663`(`expire_date`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Table structure for permission
-- ----------------------------
DROP TABLE IF EXISTS `permission`;
CREATE TABLE `permission`  (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `p_name` varchar(15) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `is_delete` tinyint(1) NOT NULL,
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 5 CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of permission
-- ----------------------------
INSERT INTO `permission` VALUES (2, 'alter', 1);
INSERT INTO `permission` VALUES (3, 'add', 1);
INSERT INTO `permission` VALUES (4, 'delete', 1);

-- ----------------------------
-- Table structure for role
-- ----------------------------
DROP TABLE IF EXISTS `role`;
CREATE TABLE `role`  (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `r_name` varchar(10) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `is_delete` tinyint(1) NOT NULL,
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 2 CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of role
-- ----------------------------
INSERT INTO `role` VALUES (1, '超管', 1);

-- ----------------------------
-- Table structure for role_r_p
-- ----------------------------
DROP TABLE IF EXISTS `role_r_p`;
CREATE TABLE `role_r_p`  (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `role_id` int(11) NOT NULL,
  `permission_id` int(11) NOT NULL,
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `role_r_p_role_id_permission_id_d9cf97e6_uniq`(`role_id`, `permission_id`) USING BTREE,
  INDEX `role_r_p_permission_id_4e9c7742_fk_permission_id`(`permission_id`) USING BTREE,
  CONSTRAINT `role_r_p_permission_id_4e9c7742_fk_permission_id` FOREIGN KEY (`permission_id`) REFERENCES `permission` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT,
  CONSTRAINT `role_r_p_role_id_978c0d69_fk_role_id` FOREIGN KEY (`role_id`) REFERENCES `role` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT
) ENGINE = InnoDB AUTO_INCREMENT = 4 CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of role_r_p
-- ----------------------------
INSERT INTO `role_r_p` VALUES (1, 1, 2);
INSERT INTO `role_r_p` VALUES (2, 1, 3);
INSERT INTO `role_r_p` VALUES (3, 1, 4);

-- ----------------------------
-- Table structure for typess
-- ----------------------------
DROP TABLE IF EXISTS `typess`;
CREATE TABLE `typess`  (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(20) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 7 CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of typess
-- ----------------------------
INSERT INTO `typess` VALUES (1, 'html');
INSERT INTO `typess` VALUES (2, 'django');
INSERT INTO `typess` VALUES (3, 'python');
INSERT INTO `typess` VALUES (4, 'linux');
INSERT INTO `typess` VALUES (5, 'git');
INSERT INTO `typess` VALUES (6, 'sql');

-- ----------------------------
-- Table structure for users
-- ----------------------------
DROP TABLE IF EXISTS `users`;
CREATE TABLE `users`  (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `username` varchar(10) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `password` varchar(20) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `create_time` datetime(6) NULL,
  `session_id` varchar(20) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,
  `out_time` datetime(6) NULL DEFAULT NULL,
  `is_superuser` tinyint(1) NOT NULL,
  `r_u_id` int(11) NULL DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE,
  INDEX `users_r_u_id_d92450ab_fk_role_id`(`r_u_id`) USING BTREE,
  CONSTRAINT `users_r_u_id_d92450ab_fk_role_id` FOREIGN KEY (`r_u_id`) REFERENCES `role` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT
) ENGINE = InnoDB AUTO_INCREMENT = 2 CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of users
-- ----------------------------
INSERT INTO `users` VALUES (1, 'oppo', '123', '2018-08-15 13:28:36.079932', '6EENK7T9uGyfvo2sHL25', '2018-08-20 19:57:03.023503', 1, 1);

SET FOREIGN_KEY_CHECKS = 1;
